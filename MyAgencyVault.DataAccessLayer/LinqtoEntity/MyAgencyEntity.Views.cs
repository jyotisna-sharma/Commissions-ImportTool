//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets8B0C3C9F39F7B4E177CFBD2AD501B527E66889EC6A4C0664A933410A5DAD3AE0))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets8B0C3C9F39F7B4E177CFBD2AD501B527E66889EC6A4C0664A933410A5DAD3AE0 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets8B0C3C9F39F7B4E177CFBD2AD501B527E66889EC6A4C0664A933410A5DAD3AE0()
        {
            this.EdmEntityContainerName = "CommissionDepartmentEntities";
            this.StoreEntityContainerName = "ModelStoreContainer";
            this.HashOverMappingClosure = "84a786c395af5c7827650138181320232e0788221a3738ec05be6fbda9509f04";
            this.HashOverAllExtentViews = "467ca345be704ea7bea1da14640e4bab15d55ce667b50226c10306107675d025";
            this.ViewCount = 242;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            if ((index == 142))
            {
                return GetView142();
            }
            if ((index == 143))
            {
                return GetView143();
            }
            if ((index == 144))
            {
                return GetView144();
            }
            if ((index == 145))
            {
                return GetView145();
            }
            if ((index == 146))
            {
                return GetView146();
            }
            if ((index == 147))
            {
                return GetView147();
            }
            if ((index == 148))
            {
                return GetView148();
            }
            if ((index == 149))
            {
                return GetView149();
            }
            if ((index == 150))
            {
                return GetView150();
            }
            if ((index == 151))
            {
                return GetView151();
            }
            if ((index == 152))
            {
                return GetView152();
            }
            if ((index == 153))
            {
                return GetView153();
            }
            if ((index == 154))
            {
                return GetView154();
            }
            if ((index == 155))
            {
                return GetView155();
            }
            if ((index == 156))
            {
                return GetView156();
            }
            if ((index == 157))
            {
                return GetView157();
            }
            if ((index == 158))
            {
                return GetView158();
            }
            if ((index == 159))
            {
                return GetView159();
            }
            if ((index == 160))
            {
                return GetView160();
            }
            if ((index == 161))
            {
                return GetView161();
            }
            if ((index == 162))
            {
                return GetView162();
            }
            if ((index == 163))
            {
                return GetView163();
            }
            if ((index == 164))
            {
                return GetView164();
            }
            if ((index == 165))
            {
                return GetView165();
            }
            if ((index == 166))
            {
                return GetView166();
            }
            if ((index == 167))
            {
                return GetView167();
            }
            if ((index == 168))
            {
                return GetView168();
            }
            if ((index == 169))
            {
                return GetView169();
            }
            if ((index == 170))
            {
                return GetView170();
            }
            if ((index == 171))
            {
                return GetView171();
            }
            if ((index == 172))
            {
                return GetView172();
            }
            if ((index == 173))
            {
                return GetView173();
            }
            if ((index == 174))
            {
                return GetView174();
            }
            if ((index == 175))
            {
                return GetView175();
            }
            if ((index == 176))
            {
                return GetView176();
            }
            if ((index == 177))
            {
                return GetView177();
            }
            if ((index == 178))
            {
                return GetView178();
            }
            if ((index == 179))
            {
                return GetView179();
            }
            if ((index == 180))
            {
                return GetView180();
            }
            if ((index == 181))
            {
                return GetView181();
            }
            if ((index == 182))
            {
                return GetView182();
            }
            if ((index == 183))
            {
                return GetView183();
            }
            if ((index == 184))
            {
                return GetView184();
            }
            if ((index == 185))
            {
                return GetView185();
            }
            if ((index == 186))
            {
                return GetView186();
            }
            if ((index == 187))
            {
                return GetView187();
            }
            if ((index == 188))
            {
                return GetView188();
            }
            if ((index == 189))
            {
                return GetView189();
            }
            if ((index == 190))
            {
                return GetView190();
            }
            if ((index == 191))
            {
                return GetView191();
            }
            if ((index == 192))
            {
                return GetView192();
            }
            if ((index == 193))
            {
                return GetView193();
            }
            if ((index == 194))
            {
                return GetView194();
            }
            if ((index == 195))
            {
                return GetView195();
            }
            if ((index == 196))
            {
                return GetView196();
            }
            if ((index == 197))
            {
                return GetView197();
            }
            if ((index == 198))
            {
                return GetView198();
            }
            if ((index == 199))
            {
                return GetView199();
            }
            if ((index == 200))
            {
                return GetView200();
            }
            if ((index == 201))
            {
                return GetView201();
            }
            if ((index == 202))
            {
                return GetView202();
            }
            if ((index == 203))
            {
                return GetView203();
            }
            if ((index == 204))
            {
                return GetView204();
            }
            if ((index == 205))
            {
                return GetView205();
            }
            if ((index == 206))
            {
                return GetView206();
            }
            if ((index == 207))
            {
                return GetView207();
            }
            if ((index == 208))
            {
                return GetView208();
            }
            if ((index == 209))
            {
                return GetView209();
            }
            if ((index == 210))
            {
                return GetView210();
            }
            if ((index == 211))
            {
                return GetView211();
            }
            if ((index == 212))
            {
                return GetView212();
            }
            if ((index == 213))
            {
                return GetView213();
            }
            if ((index == 214))
            {
                return GetView214();
            }
            if ((index == 215))
            {
                return GetView215();
            }
            if ((index == 216))
            {
                return GetView216();
            }
            if ((index == 217))
            {
                return GetView217();
            }
            if ((index == 218))
            {
                return GetView218();
            }
            if ((index == 219))
            {
                return GetView219();
            }
            if ((index == 220))
            {
                return GetView220();
            }
            if ((index == 221))
            {
                return GetView221();
            }
            if ((index == 222))
            {
                return GetView222();
            }
            if ((index == 223))
            {
                return GetView223();
            }
            if ((index == 224))
            {
                return GetView224();
            }
            if ((index == 225))
            {
                return GetView225();
            }
            if ((index == 226))
            {
                return GetView226();
            }
            if ((index == 227))
            {
                return GetView227();
            }
            if ((index == 228))
            {
                return GetView228();
            }
            if ((index == 229))
            {
                return GetView229();
            }
            if ((index == 230))
            {
                return GetView230();
            }
            if ((index == 231))
            {
                return GetView231();
            }
            if ((index == 232))
            {
                return GetView232();
            }
            if ((index == 233))
            {
                return GetView233();
            }
            if ((index == 234))
            {
                return GetView234();
            }
            if ((index == 235))
            {
                return GetView235();
            }
            if ((index == 236))
            {
                return GetView236();
            }
            if ((index == 237))
            {
                return GetView237();
            }
            if ((index == 238))
            {
                return GetView238();
            }
            if ((index == 239))
            {
                return GetView239();
            }
            if ((index == 240))
            {
                return GetView240();
            }
            if ((index == 241))
            {
                return GetView241();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.AutoDEUEntries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3124);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AutoDEUEntries\r\n        [Model.Store.AutoDEUE");
            viewString.Append("ntries](T1.AutoDEUEntries_Id, T1.AutoDEUEntries_BatchId, T1.AutoDEUEntries_Origi");
            viewString.Append("nalEffectiveDate, T1.AutoDEUEntries_PaymentReceived, T1.AutoDEUEntries_Commissio");
            viewString.Append("nPercentage, T1.AutoDEUEntries_Insured, T1.AutoDEUEntries_PolicyNumber, T1.AutoD");
            viewString.Append("EUEntries_Enrolled, T1.AutoDEUEntries_Eligible, T1.AutoDEUEntries_SplitPer, T1.A");
            viewString.Append("utoDEUEntries_PolicyModeValue, T1.AutoDEUEntries_CompTypeID, T1.AutoDEUEntries_S");
            viewString.Append("tatementID, T1.AutoDEUEntries_PostStatusID, T1.AutoDEUEntries_PolicyID, T1.AutoD");
            viewString.Append("EUEntries_InvoiceDate, T1.AutoDEUEntries_PayorId, T1.AutoDEUEntries_NumberOfUnit");
            viewString.Append("s, T1.AutoDEUEntries_DollerPerUnit, T1.AutoDEUEntries_Fee, T1.AutoDEUEntries_Bon");
            viewString.Append("us, T1.AutoDEUEntries_CommissionTotal, T1.AutoDEUEntries_PayorSysID, T1.AutoDEUE");
            viewString.Append("ntries_Renewal, T1.AutoDEUEntries_Carrier, T1.AutoDEUEntries_Coverage, T1.AutoDE");
            viewString.Append("UEntries_IsEntrybyCommissiondashBoard, T1.AutoDEUEntries_CreatedBy, T1.AutoDEUEn");
            viewString.Append("tries_PostCompleteStatus, T1.AutoDEUEntries_ModalAvgPremium, T1.AutoDEUEntries_C");
            viewString.Append("ompScheduleType, T1.AutoDEUEntries_ClientValue)\r\n    FROM (\r\n        SELECT \r\n  ");
            viewString.Append("          T.Id AS AutoDEUEntries_Id, \r\n            T.BatchId AS AutoDEUEntries_B");
            viewString.Append("atchId, \r\n            T.OriginalEffectiveDate AS AutoDEUEntries_OriginalEffectiv");
            viewString.Append("eDate, \r\n            T.PaymentReceived AS AutoDEUEntries_PaymentReceived, \r\n    ");
            viewString.Append("        T.CommissionPercentage AS AutoDEUEntries_CommissionPercentage, \r\n       ");
            viewString.Append("     T.Insured AS AutoDEUEntries_Insured, \r\n            T.PolicyNumber AS AutoDE");
            viewString.Append("UEntries_PolicyNumber, \r\n            T.Enrolled AS AutoDEUEntries_Enrolled, \r\n  ");
            viewString.Append("          T.Eligible AS AutoDEUEntries_Eligible, \r\n            T.SplitPer AS Aut");
            viewString.Append("oDEUEntries_SplitPer, \r\n            T.PolicyModeValue AS AutoDEUEntries_PolicyMo");
            viewString.Append("deValue, \r\n            T.CompTypeID AS AutoDEUEntries_CompTypeID, \r\n            ");
            viewString.Append("T.StatementID AS AutoDEUEntries_StatementID, \r\n            T.PostStatusID AS Aut");
            viewString.Append("oDEUEntries_PostStatusID, \r\n            T.PolicyID AS AutoDEUEntries_PolicyID, \r");
            viewString.Append("\n            T.InvoiceDate AS AutoDEUEntries_InvoiceDate, \r\n            T.PayorI");
            viewString.Append("d AS AutoDEUEntries_PayorId, \r\n            T.NumberOfUnits AS AutoDEUEntries_Num");
            viewString.Append("berOfUnits, \r\n            T.DollerPerUnit AS AutoDEUEntries_DollerPerUnit, \r\n   ");
            viewString.Append("         T.Fee AS AutoDEUEntries_Fee, \r\n            T.Bonus AS AutoDEUEntries_Bo");
            viewString.Append("nus, \r\n            T.CommissionTotal AS AutoDEUEntries_CommissionTotal, \r\n      ");
            viewString.Append("      T.PayorSysID AS AutoDEUEntries_PayorSysID, \r\n            T.Renewal AS Auto");
            viewString.Append("DEUEntries_Renewal, \r\n            T.Carrier AS AutoDEUEntries_Carrier, \r\n       ");
            viewString.Append("     T.Coverage AS AutoDEUEntries_Coverage, \r\n            T.IsEntrybyCommissiond");
            viewString.Append("ashBoard AS AutoDEUEntries_IsEntrybyCommissiondashBoard, \r\n            T.Created");
            viewString.Append("By AS AutoDEUEntries_CreatedBy, \r\n            T.PostCompleteStatus AS AutoDEUEnt");
            viewString.Append("ries_PostCompleteStatus, \r\n            T.ModalAvgPremium AS AutoDEUEntries_Modal");
            viewString.Append("AvgPremium, \r\n            T.CompScheduleType AS AutoDEUEntries_CompScheduleType,");
            viewString.Append(" \r\n            T.ClientValue AS AutoDEUEntries_ClientValue, \r\n            True A");
            viewString.Append("S _from0\r\n        FROM CommissionDepartmentEntities.AutoDEUEntries AS T\r\n    ) A");
            viewString.Append("S T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.AutoDEUEntries", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.AutoDEUEntries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2979);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AutoDEUEntries\r\n        [Model.AutoDEUEntry](");
            viewString.Append("T1.AutoDEUEntry_Id, T1.AutoDEUEntry_BatchId, T1.AutoDEUEntry_OriginalEffectiveDa");
            viewString.Append("te, T1.AutoDEUEntry_PaymentReceived, T1.AutoDEUEntry_CommissionPercentage, T1.Au");
            viewString.Append("toDEUEntry_Insured, T1.AutoDEUEntry_PolicyNumber, T1.AutoDEUEntry_Enrolled, T1.A");
            viewString.Append("utoDEUEntry_Eligible, T1.AutoDEUEntry_SplitPer, T1.AutoDEUEntry_PolicyModeValue,");
            viewString.Append(" T1.AutoDEUEntry_CompTypeID, T1.AutoDEUEntry_StatementID, T1.AutoDEUEntry_PostSt");
            viewString.Append("atusID, T1.AutoDEUEntry_PolicyID, T1.AutoDEUEntry_InvoiceDate, T1.AutoDEUEntry_P");
            viewString.Append("ayorId, T1.AutoDEUEntry_NumberOfUnits, T1.AutoDEUEntry_DollerPerUnit, T1.AutoDEU");
            viewString.Append("Entry_Fee, T1.AutoDEUEntry_Bonus, T1.AutoDEUEntry_CommissionTotal, T1.AutoDEUEnt");
            viewString.Append("ry_PayorSysID, T1.AutoDEUEntry_Renewal, T1.AutoDEUEntry_Carrier, T1.AutoDEUEntry");
            viewString.Append("_Coverage, T1.AutoDEUEntry_IsEntrybyCommissiondashBoard, T1.AutoDEUEntry_Created");
            viewString.Append("By, T1.AutoDEUEntry_PostCompleteStatus, T1.AutoDEUEntry_ModalAvgPremium, T1.Auto");
            viewString.Append("DEUEntry_CompScheduleType, T1.AutoDEUEntry_ClientValue)\r\n    FROM (\r\n        SEL");
            viewString.Append("ECT \r\n            T.Id AS AutoDEUEntry_Id, \r\n            T.BatchId AS AutoDEUEnt");
            viewString.Append("ry_BatchId, \r\n            T.OriginalEffectiveDate AS AutoDEUEntry_OriginalEffect");
            viewString.Append("iveDate, \r\n            T.PaymentReceived AS AutoDEUEntry_PaymentReceived, \r\n    ");
            viewString.Append("        T.CommissionPercentage AS AutoDEUEntry_CommissionPercentage, \r\n         ");
            viewString.Append("   T.Insured AS AutoDEUEntry_Insured, \r\n            T.PolicyNumber AS AutoDEUEnt");
            viewString.Append("ry_PolicyNumber, \r\n            T.Enrolled AS AutoDEUEntry_Enrolled, \r\n          ");
            viewString.Append("  T.Eligible AS AutoDEUEntry_Eligible, \r\n            T.SplitPer AS AutoDEUEntry_");
            viewString.Append("SplitPer, \r\n            T.PolicyModeValue AS AutoDEUEntry_PolicyModeValue, \r\n   ");
            viewString.Append("         T.CompTypeID AS AutoDEUEntry_CompTypeID, \r\n            T.StatementID AS");
            viewString.Append(" AutoDEUEntry_StatementID, \r\n            T.PostStatusID AS AutoDEUEntry_PostStat");
            viewString.Append("usID, \r\n            T.PolicyID AS AutoDEUEntry_PolicyID, \r\n            T.Invoice");
            viewString.Append("Date AS AutoDEUEntry_InvoiceDate, \r\n            T.PayorId AS AutoDEUEntry_PayorI");
            viewString.Append("d, \r\n            T.NumberOfUnits AS AutoDEUEntry_NumberOfUnits, \r\n            T.");
            viewString.Append("DollerPerUnit AS AutoDEUEntry_DollerPerUnit, \r\n            T.Fee AS AutoDEUEntry");
            viewString.Append("_Fee, \r\n            T.Bonus AS AutoDEUEntry_Bonus, \r\n            T.CommissionTot");
            viewString.Append("al AS AutoDEUEntry_CommissionTotal, \r\n            T.PayorSysID AS AutoDEUEntry_P");
            viewString.Append("ayorSysID, \r\n            T.Renewal AS AutoDEUEntry_Renewal, \r\n            T.Carr");
            viewString.Append("ier AS AutoDEUEntry_Carrier, \r\n            T.Coverage AS AutoDEUEntry_Coverage, ");
            viewString.Append("\r\n            T.IsEntrybyCommissiondashBoard AS AutoDEUEntry_IsEntrybyCommission");
            viewString.Append("dashBoard, \r\n            T.CreatedBy AS AutoDEUEntry_CreatedBy, \r\n            T.");
            viewString.Append("PostCompleteStatus AS AutoDEUEntry_PostCompleteStatus, \r\n            T.ModalAvgP");
            viewString.Append("remium AS AutoDEUEntry_ModalAvgPremium, \r\n            T.CompScheduleType AS Auto");
            viewString.Append("DEUEntry_CompScheduleType, \r\n            T.ClientValue AS AutoDEUEntry_ClientVal");
            viewString.Append("ue, \r\n            True AS _from0\r\n        FROM ModelStoreContainer.AutoDEUEntrie");
            viewString.Append("s AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.AutoDEUEntries", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Batches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Batches", @"
    SELECT VALUE -- Constructing Batches
        [Model.Store.Batches](T1.Batches_BatchId, T1.Batches_BatchNumber, T1.Batches_LicenseeId, T1.Batches_CreatedOn, T1.Batches_FileType, T1.Batches_EntryStatusId, T1.Batches_AssignedUserCredentialId, T1.Batches_CreatedFromUpload, T1.Batches_UploadStatusId, T1.Batches_FileName, T1.Batches_LastModifiedDate, T1.Batches_IsManuallyUploaded, T1.Batches_SiteLoginID, T1.Batches_PayorId, T1.Batches_BatchNote)
    FROM (
        SELECT 
            T.BatchId AS Batches_BatchId, 
            T.BatchNumber AS Batches_BatchNumber, 
            T.LicenseeId AS Batches_LicenseeId, 
            T.CreatedOn AS Batches_CreatedOn, 
            T.FileType AS Batches_FileType, 
            T.EntryStatusId AS Batches_EntryStatusId, 
            T.AssignedUserCredentialId AS Batches_AssignedUserCredentialId, 
            T.CreatedFromUpload AS Batches_CreatedFromUpload, 
            T.UploadStatusId AS Batches_UploadStatusId, 
            T.FileName AS Batches_FileName, 
            T.LastModifiedDate AS Batches_LastModifiedDate, 
            T.IsManuallyUploaded AS Batches_IsManuallyUploaded, 
            T.SiteLoginID AS Batches_SiteLoginID, 
            T.PayorId AS Batches_PayorId, 
            T.BatchNote AS Batches_BatchNote, 
            True AS _from0
        FROM CommissionDepartmentEntities.Batches AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.CarrierNickName
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.CarrierNickName", @"
    SELECT VALUE -- Constructing CarrierNickName
        [Model.Store.CarrierNickName](T1.CarrierNickName_PayorId, T1.CarrierNickName_CarrierId, T1.CarrierNickName_NickName, T1.CarrierNickName_CreatedBy, T1.CarrierNickName_ModifiedBy, T1.CarrierNickName_ModifiedOn, T1.CarrierNickName_IsDeleted, T1.CarrierNickName_IsTrackMissingMonth, T1.CarrierNickName_IsTrackIncomingPercentage, T1.CarrierNickName_CreatedOn)
    FROM (
        SELECT 
            T.PayorId AS CarrierNickName_PayorId, 
            T.CarrierId AS CarrierNickName_CarrierId, 
            T.NickName AS CarrierNickName_NickName, 
            T.CreatedBy AS CarrierNickName_CreatedBy, 
            T.ModifiedBy AS CarrierNickName_ModifiedBy, 
            T.ModifiedOn AS CarrierNickName_ModifiedOn, 
            T.IsDeleted AS CarrierNickName_IsDeleted, 
            T.IsTrackMissingMonth AS CarrierNickName_IsTrackMissingMonth, 
            T.IsTrackIncomingPercentage AS CarrierNickName_IsTrackIncomingPercentage, 
            T.CreatedOn AS CarrierNickName_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.CarrierNickNames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Carriers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Carriers", @"
    SELECT VALUE -- Constructing Carriers
        [Model.Store.Carriers](T1.Carriers_CarrierId, T1.Carriers_CarrierName, T1.Carriers_IsDeleted, T1.Carriers_IsGlobal, T1.Carriers_CreatedBy, T1.Carriers_LicenseeId, T1.Carriers_CreatedOn)
    FROM (
        SELECT 
            T.CarrierId AS Carriers_CarrierId, 
            T.CarrierName AS Carriers_CarrierName, 
            T.IsDeleted AS Carriers_IsDeleted, 
            T.IsGlobal AS Carriers_IsGlobal, 
            T.CreatedBy AS Carriers_CreatedBy, 
            T.LicenseeId AS Carriers_LicenseeId, 
            T.CreatedOn AS Carriers_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.Carriers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Clients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Clients", @"
    SELECT VALUE -- Constructing Clients
        [Model.Store.Clients](T1.Clients_ClientId, T1.Clients_LicenseeId, T1.Clients_Name, T1.Clients_Address, T1.Clients_Zip, T1.Clients_City, T1.Clients_State, T1.Clients_Email, T1.Clients_IsDeleted, T1.Clients_CreatedOn)
    FROM (
        SELECT 
            T.ClientId AS Clients_ClientId, 
            T.LicenseeId AS Clients_LicenseeId, 
            T.Name AS Clients_Name, 
            T.Address AS Clients_Address, 
            T.Zip AS Clients_Zip, 
            T.City AS Clients_City, 
            T.State AS Clients_State, 
            T.Email AS Clients_Email, 
            T.IsDeleted AS Clients_IsDeleted, 
            T.CreatedOn AS Clients_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.Clients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Coverages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Coverages", @"
    SELECT VALUE -- Constructing Coverages
        [Model.Store.Coverages](T1.Coverages_CoverageId, T1.Coverages_ProductName, T1.Coverages_IsDeleted, T1.Coverages_IsGlobal, T1.Coverages_CreatedBy, T1.Coverages_LicenseeId, T1.Coverages_CreatedOn)
    FROM (
        SELECT 
            T.CoverageId AS Coverages_CoverageId, 
            T.ProductName AS Coverages_ProductName, 
            T.IsDeleted AS Coverages_IsDeleted, 
            T.IsGlobal AS Coverages_IsGlobal, 
            T.CreatedBy AS Coverages_CreatedBy, 
            T.LicenseeId AS Coverages_LicenseeId, 
            T.CreatedOn AS Coverages_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.Coverages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.EntriesByDEU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3911);
            viewString.Append("\r\n    SELECT VALUE -- Constructing EntriesByDEU\r\n        [Model.Store.EntriesByD");
            viewString.Append("EU](T1.EntriesByDEU_DEUEntryID, T1.EntriesByDEU_OriginalEffectiveDate, T1.Entrie");
            viewString.Append("sByDEU_PaymentReceived, T1.EntriesByDEU_CommissionPercentage, T1.EntriesByDEU_Ot");
            viewString.Append("herData, T1.EntriesByDEU_Insured, T1.EntriesByDEU_PolicyNumber, T1.EntriesByDEU_");
            viewString.Append("Enrolled, T1.EntriesByDEU_Eligible, T1.EntriesByDEU_Link1, T1.EntriesByDEU_Split");
            viewString.Append("Per, T1.EntriesByDEU_PolicyModeID, T1.EntriesByDEU_PolicyModeValue, T1.EntriesBy");
            viewString.Append("DEU_TrackFromDate, T1.EntriesByDEU_CompTypeID, T1.EntriesByDEU_ClientID, T1.Entr");
            viewString.Append("iesByDEU_StatementID, T1.EntriesByDEU_PostStatusID, T1.EntriesByDEU_PolicyID, T1");
            viewString.Append(".EntriesByDEU_InvoiceDate, T1.EntriesByDEU_PayorId, T1.EntriesByDEU_NumberOfUnit");
            viewString.Append("s, T1.EntriesByDEU_DollerPerUnit, T1.EntriesByDEU_Fee, T1.EntriesByDEU_Bonus, T1");
            viewString.Append(".EntriesByDEU_CommissionTotal, T1.EntriesByDEU_PayorSysID, T1.EntriesByDEU_Renew");
            viewString.Append("al, T1.EntriesByDEU_CarrierId, T1.EntriesByDEU_CoverageId, T1.EntriesByDEU_IsEnt");
            viewString.Append("rybyCommissiondashBoard, T1.EntriesByDEU_CreatedBy, T1.EntriesByDEU_PostComplete");
            viewString.Append("Status, T1.EntriesByDEU_ModalAvgPremium, T1.EntriesByDEU_CompScheduleType, T1.En");
            viewString.Append("triesByDEU_ClientValue, T1.EntriesByDEU_CarrierName, T1.EntriesByDEU_ProductName");
            viewString.Append(", T1.EntriesByDEU_EntryDate, T1.EntriesByDEU_UnlinkClientName, T1.EntriesByDEU_C");
            viewString.Append("overageNickName, T1.EntriesByDEU_CarrierNickName)\r\n    FROM (\r\n        SELECT \r\n");
            viewString.Append("            T.DEUEntryID AS EntriesByDEU_DEUEntryID, \r\n            T.OriginalEff");
            viewString.Append("ectiveDate AS EntriesByDEU_OriginalEffectiveDate, \r\n            T.PaymentReceive");
            viewString.Append("d AS EntriesByDEU_PaymentReceived, \r\n            T.CommissionPercentage AS Entri");
            viewString.Append("esByDEU_CommissionPercentage, \r\n            T.OtherData AS EntriesByDEU_OtherDat");
            viewString.Append("a, \r\n            T.Insured AS EntriesByDEU_Insured, \r\n            T.PolicyNumber");
            viewString.Append(" AS EntriesByDEU_PolicyNumber, \r\n            T.Enrolled AS EntriesByDEU_Enrolled");
            viewString.Append(", \r\n            T.Eligible AS EntriesByDEU_Eligible, \r\n            T.Link1 AS En");
            viewString.Append("triesByDEU_Link1, \r\n            T.SplitPer AS EntriesByDEU_SplitPer, \r\n         ");
            viewString.Append("   T.PolicyModeID AS EntriesByDEU_PolicyModeID, \r\n            T.PolicyModeValue ");
            viewString.Append("AS EntriesByDEU_PolicyModeValue, \r\n            T.TrackFromDate AS EntriesByDEU_T");
            viewString.Append("rackFromDate, \r\n            T.CompTypeID AS EntriesByDEU_CompTypeID, \r\n         ");
            viewString.Append("   T.ClientID AS EntriesByDEU_ClientID, \r\n            T.StatementID AS EntriesBy");
            viewString.Append("DEU_StatementID, \r\n            T.PostStatusID AS EntriesByDEU_PostStatusID, \r\n  ");
            viewString.Append("          T.PolicyID AS EntriesByDEU_PolicyID, \r\n            T.InvoiceDate AS En");
            viewString.Append("triesByDEU_InvoiceDate, \r\n            T.PayorId AS EntriesByDEU_PayorId, \r\n     ");
            viewString.Append("       T.NumberOfUnits AS EntriesByDEU_NumberOfUnits, \r\n            T.DollerPerU");
            viewString.Append("nit AS EntriesByDEU_DollerPerUnit, \r\n            T.Fee AS EntriesByDEU_Fee, \r\n  ");
            viewString.Append("          T.Bonus AS EntriesByDEU_Bonus, \r\n            T.CommissionTotal AS Entr");
            viewString.Append("iesByDEU_CommissionTotal, \r\n            T.PayorSysID AS EntriesByDEU_PayorSysID,");
            viewString.Append(" \r\n            T.Renewal AS EntriesByDEU_Renewal, \r\n            T.CarrierId AS E");
            viewString.Append("ntriesByDEU_CarrierId, \r\n            T.CoverageId AS EntriesByDEU_CoverageId, \r\n");
            viewString.Append("            T.IsEntrybyCommissiondashBoard AS EntriesByDEU_IsEntrybyCommissionda");
            viewString.Append("shBoard, \r\n            T.CreatedBy AS EntriesByDEU_CreatedBy, \r\n            T.Po");
            viewString.Append("stCompleteStatus AS EntriesByDEU_PostCompleteStatus, \r\n            T.ModalAvgPre");
            viewString.Append("mium AS EntriesByDEU_ModalAvgPremium, \r\n            T.CompScheduleType AS Entrie");
            viewString.Append("sByDEU_CompScheduleType, \r\n            T.ClientValue AS EntriesByDEU_ClientValue");
            viewString.Append(", \r\n            T.CarrierName AS EntriesByDEU_CarrierName, \r\n            T.Produ");
            viewString.Append("ctName AS EntriesByDEU_ProductName, \r\n            T.EntryDate AS EntriesByDEU_En");
            viewString.Append("tryDate, \r\n            T.UnlinkClientName AS EntriesByDEU_UnlinkClientName, \r\n  ");
            viewString.Append("          T.CoverageNickName AS EntriesByDEU_CoverageNickName, \r\n            T.C");
            viewString.Append("arrierNickName AS EntriesByDEU_CarrierNickName, \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM CommissionDepartmentEntities.EntriesByDEUs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.EntriesByDEU", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ExportBatchFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ExportBatchFiles", @"
    SELECT VALUE -- Constructing ExportBatchFiles
        [Model.Store.ExportBatchFiles](T1.ExportBatchFiles_ExportBatchId, T1.ExportBatchFiles_FileName, T1.ExportBatchFiles_CreatedOn, T1.ExportBatchFiles_IsFileImported, T1.ExportBatchFiles_InvoiceDate)
    FROM (
        SELECT 
            T.ExportBatchId AS ExportBatchFiles_ExportBatchId, 
            T.FileName AS ExportBatchFiles_FileName, 
            T.CreatedOn AS ExportBatchFiles_CreatedOn, 
            T.IsFileImported AS ExportBatchFiles_IsFileImported, 
            T.InvoiceDate AS ExportBatchFiles_InvoiceDate, 
            True AS _from0
        FROM CommissionDepartmentEntities.ExportBatchFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.FieldMapping
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.FieldMapping", @"
    SELECT VALUE -- Constructing FieldMapping
        [Model.Store.FieldMapping](T1.FieldMapping_ID, T1.FieldMapping_ExcelFieldNo, T1.FieldMapping_DBFieldName, T1.FieldMapping_IsDeleted, T1.FieldMapping_PayorID, T1.FieldMapping_ExcelFieldName, T1.FieldMapping_ExcelFieldFormat)
    FROM (
        SELECT 
            T.ID AS FieldMapping_ID, 
            T.ExcelFieldNo AS FieldMapping_ExcelFieldNo, 
            T.DBFieldName AS FieldMapping_DBFieldName, 
            T.IsDeleted AS FieldMapping_IsDeleted, 
            T.PayorID AS FieldMapping_PayorID, 
            T.ExcelFieldName AS FieldMapping_ExcelFieldName, 
            T.ExcelFieldFormat AS FieldMapping_ExcelFieldFormat, 
            True AS _from0
        FROM CommissionDepartmentEntities.FieldMappings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Formulas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Formulas", @"
    SELECT VALUE -- Constructing Formulas
        [Model.Store.Formulas](T1.Formulas_FormulaId, T1.Formulas_FormulaTtitle, T1.Formulas_FormulaExpression, T1.Formulas_IsDeleted)
    FROM (
        SELECT 
            T.FormulaId AS Formulas_FormulaId, 
            T.FormulaTtitle AS Formulas_FormulaTtitle, 
            T.FormulaExpression AS Formulas_FormulaExpression, 
            T.IsDeleted AS Formulas_IsDeleted, 
            True AS _from0
        FROM CommissionDepartmentEntities.Formulas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.GlobalCoveragesSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.GlobalCoveragesSchedules", @"
    SELECT VALUE -- Constructing GlobalCoveragesSchedules
        [Model.Store.GlobalCoveragesSchedules](T1.GlobalCoveragesSchedules_CoveragesScheduleId, T1.GlobalCoveragesSchedules_CarrierId, T1.GlobalCoveragesSchedules_CoverageId, T1.GlobalCoveragesSchedules_ScheduleTypeId, T1.GlobalCoveragesSchedules_FromRange, T1.GlobalCoveragesSchedules_ToRange, T1.GlobalCoveragesSchedules_EffectiveFromDate, T1.GlobalCoveragesSchedules_EffectiveToDate, T1.GlobalCoveragesSchedules_Rate, T1.GlobalCoveragesSchedules_IsDeleted)
    FROM (
        SELECT 
            T.CoveragesScheduleId AS GlobalCoveragesSchedules_CoveragesScheduleId, 
            T.CarrierId AS GlobalCoveragesSchedules_CarrierId, 
            T.CoverageId AS GlobalCoveragesSchedules_CoverageId, 
            T.ScheduleTypeId AS GlobalCoveragesSchedules_ScheduleTypeId, 
            T.FromRange AS GlobalCoveragesSchedules_FromRange, 
            T.ToRange AS GlobalCoveragesSchedules_ToRange, 
            T.EffectiveFromDate AS GlobalCoveragesSchedules_EffectiveFromDate, 
            T.EffectiveToDate AS GlobalCoveragesSchedules_EffectiveToDate, 
            T.Rate AS GlobalCoveragesSchedules_Rate, 
            T.IsDeleted AS GlobalCoveragesSchedules_IsDeleted, 
            True AS _from0
        FROM CommissionDepartmentEntities.GlobalCoveragesSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.GlobalPayorContacts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.GlobalPayorContacts", @"
    SELECT VALUE -- Constructing GlobalPayorContacts
        [Model.Store.GlobalPayorContacts](T1.GlobalPayorContacts_PayorContactId, T1.GlobalPayorContacts_GlobalPayorId, T1.GlobalPayorContacts_FirstName, T1.GlobalPayorContacts_LastName, T1.GlobalPayorContacts_ZipCode, T1.GlobalPayorContacts_city, T1.GlobalPayorContacts_state, T1.GlobalPayorContacts_email, T1.GlobalPayorContacts_OfficePhone, T1.GlobalPayorContacts_Fax, T1.GlobalPayorContacts_Priority, T1.GlobalPayorContacts_ContactPref, T1.GlobalPayorContacts_IsDeleted)
    FROM (
        SELECT 
            T.PayorContactId AS GlobalPayorContacts_PayorContactId, 
            T.GlobalPayorId AS GlobalPayorContacts_GlobalPayorId, 
            T.FirstName AS GlobalPayorContacts_FirstName, 
            T.LastName AS GlobalPayorContacts_LastName, 
            T.ZipCode AS GlobalPayorContacts_ZipCode, 
            T.city AS GlobalPayorContacts_city, 
            T.state AS GlobalPayorContacts_state, 
            T.email AS GlobalPayorContacts_email, 
            T.OfficePhone AS GlobalPayorContacts_OfficePhone, 
            T.Fax AS GlobalPayorContacts_Fax, 
            T.Priority AS GlobalPayorContacts_Priority, 
            T.ContactPref AS GlobalPayorContacts_ContactPref, 
            T.IsDeleted AS GlobalPayorContacts_IsDeleted, 
            True AS _from0
        FROM CommissionDepartmentEntities.GlobalPayorContacts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.GlobalPayorDefaults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.GlobalPayorDefaults", "\r\n    SELECT VALUE -- Constructing GlobalPayorDefaults\r\n        [Model.Store.Glob" +
                    "alPayorDefaults](T1.GlobalPayorDefaults_PayorDefaultSettingsId, T1.GlobalPayorDe" +
                    "faults_GlobalPayorId, T1.GlobalPayorDefaults_FirstPaymentOnRow, T1.GlobalPayorDe" +
                    "faults_FieldNamesRow, T1.GlobalPayorDefaults_IsTotalExists, T1.GlobalPayorDefaul" +
                    "ts_LocationColumn, T1.GlobalPayorDefaults_LocationRow, T1.GlobalPayorDefaults_Fi" +
                    "leTypeId, T1.GlobalPayorDefaults_WebSiteUrl, T1.GlobalPayorDefaults_NavigationIn" +
                    "structions, T1.GlobalPayorDefaults_LoginControl, T1.GlobalPayorDefaults_Password" +
                    "Control)\r\n    FROM (\r\n        SELECT \r\n            T.PayorDefaultSettingsId AS G" +
                    "lobalPayorDefaults_PayorDefaultSettingsId, \r\n            T.GlobalPayorId AS Glob" +
                    "alPayorDefaults_GlobalPayorId, \r\n            T.FirstPaymentOnRow AS GlobalPayorD" +
                    "efaults_FirstPaymentOnRow, \r\n            T.FieldNamesRow AS GlobalPayorDefaults_" +
                    "FieldNamesRow, \r\n            T.IsTotalExists AS GlobalPayorDefaults_IsTotalExist" +
                    "s, \r\n            T.LocationColumn AS GlobalPayorDefaults_LocationColumn, \r\n     " +
                    "       T.LocationRow AS GlobalPayorDefaults_LocationRow, \r\n            T.FileTyp" +
                    "eId AS GlobalPayorDefaults_FileTypeId, \r\n            T.WebSiteUrl AS GlobalPayor" +
                    "Defaults_WebSiteUrl, \r\n            T.NavigationInstructions AS GlobalPayorDefaul" +
                    "ts_NavigationInstructions, \r\n            T.LoginControl AS GlobalPayorDefaults_L" +
                    "oginControl, \r\n            T.PasswordControl AS GlobalPayorDefaults_PasswordCont" +
                    "rol, \r\n            True AS _from0\r\n        FROM CommissionDepartmentEntities.Glo" +
                    "balPayorDefaults AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.GlobalPayorStatementDate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.GlobalPayorStatementDate", @"
    SELECT VALUE -- Constructing GlobalPayorStatementDate
        [Model.Store.GlobalPayorStatementDate](T1.GlobalPayorStatementDate_PayorStatementDateID, T1.GlobalPayorStatementDate_PayorID, T1.GlobalPayorStatementDate_StatementDate, T1.GlobalPayorStatementDate_IsBatchCreated)
    FROM (
        SELECT 
            T.PayorStatementDateID AS GlobalPayorStatementDate_PayorStatementDateID, 
            T.PayorID AS GlobalPayorStatementDate_PayorID, 
            T.StatementDate AS GlobalPayorStatementDate_StatementDate, 
            T.IsBatchCreated AS GlobalPayorStatementDate_IsBatchCreated, 
            True AS _from0
        FROM CommissionDepartmentEntities.GlobalPayorStatementDates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportBatchFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportBatchFiles", @"
    SELECT VALUE -- Constructing ImportBatchFiles
        [Model.Store.ImportBatchFiles](T1.ImportBatchFiles_ImportBatchId, T1.ImportBatchFiles_FileName, T1.ImportBatchFiles_CreatedOn)
    FROM (
        SELECT 
            T.ImportBatchId AS ImportBatchFiles_ImportBatchId, 
            T.FileName AS ImportBatchFiles_FileName, 
            T.CreatedOn AS ImportBatchFiles_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportBatchFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.InvoiceBillingLineDetail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.InvoiceBillingLineDetail", "\r\n    SELECT VALUE -- Constructing InvoiceBillingLineDetail\r\n        [Model.Store" +
                    ".InvoiceBillingLineDetail](T1.InvoiceBillingLineDetail_BillingLineId, T1.Invoice" +
                    "BillingLineDetail_InvoiceId, T1.InvoiceBillingLineDetail_ServiceId, T1.InvoiceBi" +
                    "llingLineDetail_ConsumedUnit, T1.InvoiceBillingLineDetail_ChargedAmount, T1.Invo" +
                    "iceBillingLineDetail_Min, T1.InvoiceBillingLineDetail_Range1, T1.InvoiceBillingL" +
                    "ineDetail_Range2, T1.InvoiceBillingLineDetail_Rate, T1.InvoiceBillingLineDetail_" +
                    "Discount, T1.InvoiceBillingLineDetail_StartDate, T1.InvoiceBillingLineDetail_End" +
                    "Date, T1.InvoiceBillingLineDetail_Tax, T1.InvoiceBillingLineDetail_ServiceCharge" +
                    "TypeId)\r\n    FROM (\r\n        SELECT \r\n            T.BillingLineId AS InvoiceBill" +
                    "ingLineDetail_BillingLineId, \r\n            T.InvoiceId AS InvoiceBillingLineDeta" +
                    "il_InvoiceId, \r\n            T.ServiceId AS InvoiceBillingLineDetail_ServiceId, \r" +
                    "\n            T.ConsumedUnit AS InvoiceBillingLineDetail_ConsumedUnit, \r\n        " +
                    "    T.ChargedAmount AS InvoiceBillingLineDetail_ChargedAmount, \r\n            T.M" +
                    "in AS InvoiceBillingLineDetail_Min, \r\n            T.Range1 AS InvoiceBillingLine" +
                    "Detail_Range1, \r\n            T.Range2 AS InvoiceBillingLineDetail_Range2, \r\n    " +
                    "        T.Rate AS InvoiceBillingLineDetail_Rate, \r\n            T.Discount AS Inv" +
                    "oiceBillingLineDetail_Discount, \r\n            T.StartDate AS InvoiceBillingLineD" +
                    "etail_StartDate, \r\n            T.EndDate AS InvoiceBillingLineDetail_EndDate, \r\n" +
                    "            T.Tax AS InvoiceBillingLineDetail_Tax, \r\n            T.ServiceCharge" +
                    "TypeId AS InvoiceBillingLineDetail_ServiceChargeTypeId, \r\n            True AS _f" +
                    "rom0\r\n        FROM CommissionDepartmentEntities.InvoiceBillingLineDetails AS T\r\n" +
                    "    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Invoices", @"
    SELECT VALUE -- Constructing Invoices
        [Model.Store.Invoices](T1.Invoices_InvoiceId, T1.Invoices_LicenseeId, T1.Invoices_BillingStartDate, T1.Invoices_BillingDate, T1.Invoices_InvoiceAmount, T1.Invoices_DueBalance, T1.Invoices_InvoiceGeneratedOn, T1.Invoices_ExportBatchId, T1.Invoices_BillingEndDate)
    FROM (
        SELECT 
            T.InvoiceId AS Invoices_InvoiceId, 
            T.LicenseeId AS Invoices_LicenseeId, 
            T.BillingStartDate AS Invoices_BillingStartDate, 
            T.BillingDate AS Invoices_BillingDate, 
            T.InvoiceAmount AS Invoices_InvoiceAmount, 
            T.DueBalance AS Invoices_DueBalance, 
            T.InvoiceGeneratedOn AS Invoices_InvoiceGeneratedOn, 
            T.ExportBatchId AS Invoices_ExportBatchId, 
            T.BillingEndDate AS Invoices_BillingEndDate, 
            True AS _from0
        FROM CommissionDepartmentEntities.Invoices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.IssuedFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.IssuedFiles", @"
    SELECT VALUE -- Constructing IssuedFiles
        [Model.Store.IssuedFiles](T1.IssuedFiles_PayorID, T1.IssuedFiles_FileName)
    FROM (
        SELECT 
            T.PayorID AS IssuedFiles_PayorID, 
            T.FileName AS IssuedFiles_FileName, 
            True AS _from0
        FROM CommissionDepartmentEntities.IssuedFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Journals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Journals", @"
    SELECT VALUE -- Constructing Journals
        [Model.Store.Journals](T1.Journals_JournalId, T1.Journals_InvoiceId, T1.Journals_ImportBatchId, T1.Journals_TransactionId, T1.Journals_ReceivedDate, T1.Journals_BillingEndDate, T1.Journals_TypeOfEntry, T1.Journals_JournalAmount, T1.Journals_TransactionDateTime, T1.Journals_CreatedOn, T1.Journals_ModifiedOn, T1.Journals_IsManuallEntry, T1.Journals_LicenseeId, T1.Journals_PaymentStatus)
    FROM (
        SELECT 
            T.JournalId AS Journals_JournalId, 
            T.InvoiceId AS Journals_InvoiceId, 
            T.ImportBatchId AS Journals_ImportBatchId, 
            T.TransactionId AS Journals_TransactionId, 
            T.ReceivedDate AS Journals_ReceivedDate, 
            T.BillingEndDate AS Journals_BillingEndDate, 
            T.TypeOfEntry AS Journals_TypeOfEntry, 
            T.JournalAmount AS Journals_JournalAmount, 
            T.TransactionDateTime AS Journals_TransactionDateTime, 
            T.CreatedOn AS Journals_CreatedOn, 
            T.ModifiedOn AS Journals_ModifiedOn, 
            T.IsManuallEntry AS Journals_IsManuallEntry, 
            T.LicenseeId AS Journals_LicenseeId, 
            T.PaymentStatus AS Journals_PaymentStatus, 
            True AS _from0
        FROM CommissionDepartmentEntities.Journals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LastPolicyViewed
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LastPolicyViewed", @"
    SELECT VALUE -- Constructing LastPolicyViewed
        [Model.Store.LastPolicyViewed](T1.LastPolicyViewed_ID, T1.LastPolicyViewed_UserCredentialId, T1.LastPolicyViewed_Clientid, T1.LastPolicyViewed_SNo, T1.LastPolicyViewed_PolicyId)
    FROM (
        SELECT 
            T.ID AS LastPolicyViewed_ID, 
            T.UserCredentialId AS LastPolicyViewed_UserCredentialId, 
            T.Clientid AS LastPolicyViewed_Clientid, 
            T.SNo AS LastPolicyViewed_SNo, 
            T.PolicyId AS LastPolicyViewed_PolicyId, 
            True AS _from0
        FROM CommissionDepartmentEntities.LastPolicyVieweds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LicenseeNotes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LicenseeNotes", @"
    SELECT VALUE -- Constructing LicenseeNotes
        [Model.Store.LicenseeNotes](T1.LicenseeNotes_LicenseeNoteId, T1.LicenseeNotes_LicenseeId, T1.LicenseeNotes_Note, T1.LicenseeNotes_CreatedDate, T1.LicenseeNotes_LastModifiedDate)
    FROM (
        SELECT 
            T.LicenseeNoteId AS LicenseeNotes_LicenseeNoteId, 
            T.LicenseeId AS LicenseeNotes_LicenseeId, 
            T.Note AS LicenseeNotes_Note, 
            T.CreatedDate AS LicenseeNotes_CreatedDate, 
            T.LastModifiedDate AS LicenseeNotes_LastModifiedDate, 
            True AS _from0
        FROM CommissionDepartmentEntities.LicenseeNotes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LicenseePayors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LicenseePayors", @"
    SELECT VALUE -- Constructing LicenseePayors
        [Model.Store.LicenseePayors](T1.LicenseePayors_LicenseePayorId, T1.LicenseePayors_PayorId, T1.LicenseePayors_LicenseeId, T1.LicenseePayors_SourceTypeId, T1.LicenseePayors_IsDeleted)
    FROM (
        SELECT 
            T.LicenseePayorId AS LicenseePayors_LicenseePayorId, 
            T.PayorId AS LicenseePayors_PayorId, 
            T.LicenseeId AS LicenseePayors_LicenseeId, 
            T.SourceTypeId AS LicenseePayors_SourceTypeId, 
            T.IsDeleted AS LicenseePayors_IsDeleted, 
            True AS _from0
        FROM CommissionDepartmentEntities.LicenseePayors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Licensees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2331);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Licensees\r\n        [Model.Store.Licensees](T1");
            viewString.Append(".Licensees_LicenseeId, T1.Licensees_LicenseStatusId, T1.Licensees_Company, T1.Li");
            viewString.Append("censees_ContactFirst, T1.Licensees_ContactLast, T1.Licensees_Address1, T1.Licens");
            viewString.Append("ees_Address2, T1.Licensees_City, T1.Licensees_State, T1.Licensees_ZipCode, T1.Li");
            viewString.Append("censees_Phone, T1.Licensees_Fax, T1.Licensees_Email, T1.Licensees_LicensePayment");
            viewString.Append("ModeId, T1.Licensees_AccountCode, T1.Licensees_LicenseeSource, T1.Licensees_Comm");
            viewString.Append("issionable, T1.Licensees_TrackDateDefault, T1.Licensees_TaxRate, T1.Licensees_Cu");
            viewString.Append("tOffDay1, T1.Licensees_CutOffDay2, T1.Licensees_LastLogin, T1.Licensees_LastUplo");
            viewString.Append("ad, T1.Licensees_IsDeleted, T1.Licensees_DueBalance, T1.Licensees_UserName, T1.L");
            viewString.Append("icensees_Password, T1.Licensees_IsClientEnable)\r\n    FROM (\r\n        SELECT \r\n  ");
            viewString.Append("          T.LicenseeId AS Licensees_LicenseeId, \r\n            T.LicenseStatusId ");
            viewString.Append("AS Licensees_LicenseStatusId, \r\n            T.Company AS Licensees_Company, \r\n  ");
            viewString.Append("          T.ContactFirst AS Licensees_ContactFirst, \r\n            T.ContactLast ");
            viewString.Append("AS Licensees_ContactLast, \r\n            T.Address1 AS Licensees_Address1, \r\n    ");
            viewString.Append("        T.Address2 AS Licensees_Address2, \r\n            T.City AS Licensees_City");
            viewString.Append(", \r\n            T.State AS Licensees_State, \r\n            T.ZipCode AS Licensees");
            viewString.Append("_ZipCode, \r\n            T.Phone AS Licensees_Phone, \r\n            T.Fax AS Licen");
            viewString.Append("sees_Fax, \r\n            T.Email AS Licensees_Email, \r\n            T.LicensePayme");
            viewString.Append("ntModeId AS Licensees_LicensePaymentModeId, \r\n            T.AccountCode AS Licen");
            viewString.Append("sees_AccountCode, \r\n            T.LicenseeSource AS Licensees_LicenseeSource, \r\n");
            viewString.Append("            T.Commissionable AS Licensees_Commissionable, \r\n            T.TrackD");
            viewString.Append("ateDefault AS Licensees_TrackDateDefault, \r\n            T.TaxRate AS Licensees_T");
            viewString.Append("axRate, \r\n            T.CutOffDay1 AS Licensees_CutOffDay1, \r\n            T.CutO");
            viewString.Append("ffDay2 AS Licensees_CutOffDay2, \r\n            T.LastLogin AS Licensees_LastLogin");
            viewString.Append(", \r\n            T.LastUpload AS Licensees_LastUpload, \r\n            T.IsDeleted ");
            viewString.Append("AS Licensees_IsDeleted, \r\n            T.DueBalance AS Licensees_DueBalance, \r\n  ");
            viewString.Append("          T.UserName AS Licensees_UserName, \r\n            T.Password AS Licensee");
            viewString.Append("s_Password, \r\n            T.IsClientEnable AS Licensees_IsClientEnable, \r\n      ");
            viewString.Append("      True AS _from0\r\n        FROM CommissionDepartmentEntities.Licensees AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Licensees", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LicenseeServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LicenseeServices", @"
    SELECT VALUE -- Constructing LicenseeServices
        [Model.Store.LicenseeServices](T1.LicenseeServices_LicenseeServiceId, T1.LicenseeServices_LicenseeId, T1.LicenseeServices_ServiceId)
    FROM (
        SELECT 
            T.LicenseeServiceId AS LicenseeServices_LicenseeServiceId, 
            T.LicenseeId AS LicenseeServices_LicenseeId, 
            T.ServiceId AS LicenseeServices_ServiceId, 
            True AS _from0
        FROM CommissionDepartmentEntities.LicenseeServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterAccessRights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterAccessRights", @"
    SELECT VALUE -- Constructing MasterAccessRights
        [Model.Store.MasterAccessRights](T1.MasterAccessRights_AccessRightId, T1.MasterAccessRights_Name, T1.MasterAccessRights_Description)
    FROM (
        SELECT 
            T.AccessRightId AS MasterAccessRights_AccessRightId, 
            T.Name AS MasterAccessRights_Name, 
            T.Description AS MasterAccessRights_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterAccessRights AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterBasicOutgoingSchedule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterBasicOutgoingSchedule", @"
    SELECT VALUE -- Constructing MasterBasicOutgoingSchedule
        [Model.Store.MasterBasicOutgoingSchedule](T1.MasterBasicOutgoingSchedule_ScheduleId, T1.MasterBasicOutgoingSchedule_Name, T1.MasterBasicOutgoingSchedule_Description)
    FROM (
        SELECT 
            T.ScheduleId AS MasterBasicOutgoingSchedule_ScheduleId, 
            T.Name AS MasterBasicOutgoingSchedule_Name, 
            T.Description AS MasterBasicOutgoingSchedule_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterBasicOutgoingSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterBatchEntryStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterBatchEntryStatus", @"
    SELECT VALUE -- Constructing MasterBatchEntryStatus
        [Model.Store.MasterBatchEntryStatus](T1.MasterBatchEntryStatus_BatchEntryStatusId, T1.MasterBatchEntryStatus_Name, T1.MasterBatchEntryStatus_Description)
    FROM (
        SELECT 
            T.BatchEntryStatusId AS MasterBatchEntryStatus_BatchEntryStatusId, 
            T.Name AS MasterBatchEntryStatus_Name, 
            T.Description AS MasterBatchEntryStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterBatchEntryStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterBatchUploadStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterBatchUploadStatus", @"
    SELECT VALUE -- Constructing MasterBatchUploadStatus
        [Model.Store.MasterBatchUploadStatus](T1.MasterBatchUploadStatus_BatchUploadStatusId, T1.MasterBatchUploadStatus_Name)
    FROM (
        SELECT 
            T.BatchUploadStatusId AS MasterBatchUploadStatus_BatchUploadStatusId, 
            T.Name AS MasterBatchUploadStatus_Name, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterBatchUploadStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterFileTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterFileTypes", @"
    SELECT VALUE -- Constructing MasterFileTypes
        [Model.Store.MasterFileTypes](T1.MasterFileTypes_FileTypeId, T1.MasterFileTypes_Name, T1.MasterFileTypes_Description)
    FROM (
        SELECT 
            T.FileTypeId AS MasterFileTypes_FileTypeId, 
            T.Name AS MasterFileTypes_Name, 
            T.Description AS MasterFileTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterFileTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterIncomingPaymentTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterIncomingPaymentTypes", @"
    SELECT VALUE -- Constructing MasterIncomingPaymentTypes
        [Model.Store.MasterIncomingPaymentTypes](T1.MasterIncomingPaymentTypes_IncomingPaymentTypeId, T1.MasterIncomingPaymentTypes_Name, T1.MasterIncomingPaymentTypes_Description)
    FROM (
        SELECT 
            T.IncomingPaymentTypeId AS MasterIncomingPaymentTypes_IncomingPaymentTypeId, 
            T.Name AS MasterIncomingPaymentTypes_Name, 
            T.Description AS MasterIncomingPaymentTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterIncomingPaymentTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterLicensePaymentModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterLicensePaymentModes", @"
    SELECT VALUE -- Constructing MasterLicensePaymentModes
        [Model.Store.MasterLicensePaymentModes](T1.MasterLicensePaymentModes_LicensePaymentModeId, T1.MasterLicensePaymentModes_Name, T1.MasterLicensePaymentModes_Description)
    FROM (
        SELECT 
            T.LicensePaymentModeId AS MasterLicensePaymentModes_LicensePaymentModeId, 
            T.Name AS MasterLicensePaymentModes_Name, 
            T.Description AS MasterLicensePaymentModes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterLicensePaymentModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterLicenseStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterLicenseStatus", @"
    SELECT VALUE -- Constructing MasterLicenseStatus
        [Model.Store.MasterLicenseStatus](T1.MasterLicenseStatus_LicenseStatusId, T1.MasterLicenseStatus_Name, T1.MasterLicenseStatus_Description)
    FROM (
        SELECT 
            T.LicenseStatusId AS MasterLicenseStatus_LicenseStatusId, 
            T.Name AS MasterLicenseStatus_Name, 
            T.Description AS MasterLicenseStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterLicenseStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterModules", @"
    SELECT VALUE -- Constructing MasterModules
        [Model.Store.MasterModules](T1.MasterModules_ModuleId, T1.MasterModules_Name, T1.MasterModules_Description)
    FROM (
        SELECT 
            T.ModuleId AS MasterModules_ModuleId, 
            T.Name AS MasterModules_Name, 
            T.Description AS MasterModules_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorRegions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorRegions", @"
    SELECT VALUE -- Constructing MasterPayorRegions
        [Model.Store.MasterPayorRegions](T1.MasterPayorRegions_PayorRegionId, T1.MasterPayorRegions_Name, T1.MasterPayorRegions_Description, T1.MasterPayorRegions_SortOrder)
    FROM (
        SELECT 
            T.PayorRegionId AS MasterPayorRegions_PayorRegionId, 
            T.Name AS MasterPayorRegions_Name, 
            T.Description AS MasterPayorRegions_Description, 
            T.SortOrder AS MasterPayorRegions_SortOrder, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorRegions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorToolAvailableFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2966);
            viewString.Append("\r\n    SELECT VALUE -- Constructing MasterPayorToolAvailableFields\r\n        [Mode");
            viewString.Append("l.Store.MasterPayorToolAvailableFields](T1.MasterPayorToolAvailableFields_PTAvai");
            viewString.Append("lableFieldId, T1.MasterPayorToolAvailableFields_Name, T1.MasterPayorToolAvailabl");
            viewString.Append("eFields_Description, T1.MasterPayorToolAvailableFields_LabelOnImage, T1.MasterPa");
            viewString.Append("yorToolAvailableFields_FieldStatus, T1.MasterPayorToolAvailableFields_FieldOrder");
            viewString.Append(", T1.MasterPayorToolAvailableFields_IsPartOfPrimary, T1.MasterPayorToolAvailable");
            viewString.Append("Fields_IsPopulatedIfLinked, T1.MasterPayorToolAvailableFields_IsTabbedToNextFiel");
            viewString.Append("dIfLinked, T1.MasterPayorToolAvailableFields_IsCalculatedField, T1.MasterPayorTo");
            viewString.Append("olAvailableFields_IsOverrideOfCalcAllowed, T1.MasterPayorToolAvailableFields_Def");
            viewString.Append("aultNumeric, T1.MasterPayorToolAvailableFields_IsOorBlankAllowed, T1.MasterPayor");
            viewString.Append("ToolAvailableFields_AllignedDirection, T1.MasterPayorToolAvailableFields_Equival");
            viewString.Append("entIncomingField, T1.MasterPayorToolAvailableFields_EquivalentLearnedField, T1.M");
            viewString.Append("asterPayorToolAvailableFields_EquivalentDeuField, T1.MasterPayorToolAvailableFie");
            viewString.Append("lds_HelpText, T1.MasterPayorToolAvailableFields_IsDeleted, T1.MasterPayorToolAva");
            viewString.Append("ilableFields_IsDeletable)\r\n    FROM (\r\n        SELECT \r\n            T.PTAvailabl");
            viewString.Append("eFieldId AS MasterPayorToolAvailableFields_PTAvailableFieldId, \r\n            T.N");
            viewString.Append("ame AS MasterPayorToolAvailableFields_Name, \r\n            T.Description AS Maste");
            viewString.Append("rPayorToolAvailableFields_Description, \r\n            T.LabelOnImage AS MasterPay");
            viewString.Append("orToolAvailableFields_LabelOnImage, \r\n            T.FieldStatus AS MasterPayorTo");
            viewString.Append("olAvailableFields_FieldStatus, \r\n            T.FieldOrder AS MasterPayorToolAvai");
            viewString.Append("lableFields_FieldOrder, \r\n            T.IsPartOfPrimary AS MasterPayorToolAvaila");
            viewString.Append("bleFields_IsPartOfPrimary, \r\n            T.IsPopulatedIfLinked AS MasterPayorToo");
            viewString.Append("lAvailableFields_IsPopulatedIfLinked, \r\n            T.IsTabbedToNextFieldIfLinke");
            viewString.Append("d AS MasterPayorToolAvailableFields_IsTabbedToNextFieldIfLinked, \r\n            T");
            viewString.Append(".IsCalculatedField AS MasterPayorToolAvailableFields_IsCalculatedField, \r\n      ");
            viewString.Append("      T.IsOverrideOfCalcAllowed AS MasterPayorToolAvailableFields_IsOverrideOfCa");
            viewString.Append("lcAllowed, \r\n            T.DefaultNumeric AS MasterPayorToolAvailableFields_Defa");
            viewString.Append("ultNumeric, \r\n            T.IsOorBlankAllowed AS MasterPayorToolAvailableFields_");
            viewString.Append("IsOorBlankAllowed, \r\n            T.AllignedDirection AS MasterPayorToolAvailable");
            viewString.Append("Fields_AllignedDirection, \r\n            T.EquivalentIncomingField AS MasterPayor");
            viewString.Append("ToolAvailableFields_EquivalentIncomingField, \r\n            T.EquivalentLearnedFi");
            viewString.Append("eld AS MasterPayorToolAvailableFields_EquivalentLearnedField, \r\n            T.Eq");
            viewString.Append("uivalentDeuField AS MasterPayorToolAvailableFields_EquivalentDeuField, \r\n       ");
            viewString.Append("     T.HelpText AS MasterPayorToolAvailableFields_HelpText, \r\n            T.IsDe");
            viewString.Append("leted AS MasterPayorToolAvailableFields_IsDeleted, \r\n            T.IsDeletable A");
            viewString.Append("S MasterPayorToolAvailableFields_IsDeletable, \r\n            True AS _from0\r\n    ");
            viewString.Append("    FROM CommissionDepartmentEntities.MasterPayorToolAvailableFields AS T\r\n    )");
            viewString.Append(" AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorToolAvailableFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorToolMaskFieldTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorToolMaskFieldTypes", @"
    SELECT VALUE -- Constructing MasterPayorToolMaskFieldTypes
        [Model.Store.MasterPayorToolMaskFieldTypes](T1.MasterPayorToolMaskFieldTypes_PTMaskFieldTypeId, T1.MasterPayorToolMaskFieldTypes_Name, T1.MasterPayorToolMaskFieldTypes_Description, T1.MasterPayorToolMaskFieldTypes_Type)
    FROM (
        SELECT 
            T.PTMaskFieldTypeId AS MasterPayorToolMaskFieldTypes_PTMaskFieldTypeId, 
            T.Name AS MasterPayorToolMaskFieldTypes_Name, 
            T.Description AS MasterPayorToolMaskFieldTypes_Description, 
            T.Type AS MasterPayorToolMaskFieldTypes_Type, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorToolMaskFieldTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPolicyModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPolicyModes", @"
    SELECT VALUE -- Constructing MasterPolicyModes
        [Model.Store.MasterPolicyModes](T1.MasterPolicyModes_PolicyModeId, T1.MasterPolicyModes_Name, T1.MasterPolicyModes_Description)
    FROM (
        SELECT 
            T.PolicyModeId AS MasterPolicyModes_PolicyModeId, 
            T.Name AS MasterPolicyModes_Name, 
            T.Description AS MasterPolicyModes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPolicyModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPolicyStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPolicyStatus", @"
    SELECT VALUE -- Constructing MasterPolicyStatus
        [Model.Store.MasterPolicyStatus](T1.MasterPolicyStatus_PolicyStatusId, T1.MasterPolicyStatus_Name, T1.MasterPolicyStatus_Description)
    FROM (
        SELECT 
            T.PolicyStatusId AS MasterPolicyStatus_PolicyStatusId, 
            T.Name AS MasterPolicyStatus_Name, 
            T.Description AS MasterPolicyStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPolicyStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPolicyTerminationReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPolicyTerminationReasons", @"
    SELECT VALUE -- Constructing MasterPolicyTerminationReasons
        [Model.Store.MasterPolicyTerminationReasons](T1.MasterPolicyTerminationReasons_PTReasonId, T1.MasterPolicyTerminationReasons_Name, T1.MasterPolicyTerminationReasons_Description)
    FROM (
        SELECT 
            T.PTReasonId AS MasterPolicyTerminationReasons_PTReasonId, 
            T.Name AS MasterPolicyTerminationReasons_Name, 
            T.Description AS MasterPolicyTerminationReasons_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPolicyTerminationReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPostStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPostStatus", @"
    SELECT VALUE -- Constructing MasterPostStatus
        [Model.Store.MasterPostStatus](T1.MasterPostStatus_PostStatusID, T1.MasterPostStatus_Name)
    FROM (
        SELECT 
            T.PostStatusID AS MasterPostStatus_PostStatusID, 
            T.Name AS MasterPostStatus_Name, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPostStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterRoles", @"
    SELECT VALUE -- Constructing MasterRoles
        [Model.Store.MasterRoles](T1.MasterRoles_RoleId, T1.MasterRoles_Name, T1.MasterRoles_Description)
    FROM (
        SELECT 
            T.RoleId AS MasterRoles_RoleId, 
            T.Name AS MasterRoles_Name, 
            T.Description AS MasterRoles_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterScheduleTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterScheduleTypes", @"
    SELECT VALUE -- Constructing MasterScheduleTypes
        [Model.Store.MasterScheduleTypes](T1.MasterScheduleTypes_ScheduleTypeId, T1.MasterScheduleTypes_Name, T1.MasterScheduleTypes_Description)
    FROM (
        SELECT 
            T.ScheduleTypeId AS MasterScheduleTypes_ScheduleTypeId, 
            T.Name AS MasterScheduleTypes_Name, 
            T.Description AS MasterScheduleTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterScheduleTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterServiceChargeTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterServiceChargeTypes", @"
    SELECT VALUE -- Constructing MasterServiceChargeTypes
        [Model.Store.MasterServiceChargeTypes](T1.MasterServiceChargeTypes_SCTypeId, T1.MasterServiceChargeTypes_Name, T1.MasterServiceChargeTypes_Description)
    FROM (
        SELECT 
            T.SCTypeId AS MasterServiceChargeTypes_SCTypeId, 
            T.Name AS MasterServiceChargeTypes_Name, 
            T.Description AS MasterServiceChargeTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterServiceChargeTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterServices", @"
    SELECT VALUE -- Constructing MasterServices
        [Model.Store.MasterServices](T1.MasterServices_ServiceId, T1.MasterServices_ServiceName, T1.MasterServices_Description)
    FROM (
        SELECT 
            T.ServiceId AS MasterServices_ServiceId, 
            T.ServiceName AS MasterServices_ServiceName, 
            T.Description AS MasterServices_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterSourceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterSourceTypes", @"
    SELECT VALUE -- Constructing MasterSourceTypes
        [Model.Store.MasterSourceTypes](T1.MasterSourceTypes_SourceTypeId, T1.MasterSourceTypes_Name, T1.MasterSourceTypes_Description)
    FROM (
        SELECT 
            T.SourceTypeId AS MasterSourceTypes_SourceTypeId, 
            T.Name AS MasterSourceTypes_Name, 
            T.Description AS MasterSourceTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterSourceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterStatementStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterStatementStatus", @"
    SELECT VALUE -- Constructing MasterStatementStatus
        [Model.Store.MasterStatementStatus](T1.MasterStatementStatus_StatementStatusId, T1.MasterStatementStatus_Name, T1.MasterStatementStatus_Description)
    FROM (
        SELECT 
            T.StatementStatusId AS MasterStatementStatus_StatementStatusId, 
            T.Name AS MasterStatementStatus_Name, 
            T.Description AS MasterStatementStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterStatementStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Payors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Payors", @"
    SELECT VALUE -- Constructing Payors
        [Model.Store.Payors](T1.Payors_PayorId, T1.Payors_PayorName, T1.Payors_PayorRegionId, T1.Payors_PayorTypeId, T1.Payors_PayorStatusId, T1.Payors_IsDeleted, T1.Payors_IsGlobal, T1.Payors_SourceID, T1.Payors_CreatedBy, T1.Payors_NickName, T1.Payors_LicenseeId, T1.Payors_CreatedOn)
    FROM (
        SELECT 
            T.PayorId AS Payors_PayorId, 
            T.PayorName AS Payors_PayorName, 
            T.PayorRegionId AS Payors_PayorRegionId, 
            T.PayorTypeId AS Payors_PayorTypeId, 
            T.PayorStatusId AS Payors_PayorStatusId, 
            T.IsDeleted AS Payors_IsDeleted, 
            T.IsGlobal AS Payors_IsGlobal, 
            T.SourceID AS Payors_SourceID, 
            T.CreatedBy AS Payors_CreatedBy, 
            T.NickName AS Payors_NickName, 
            T.LicenseeId AS Payors_LicenseeId, 
            T.CreatedOn AS Payors_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.Payors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PayorSiteLoginInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PayorSiteLoginInfo", @"
    SELECT VALUE -- Constructing PayorSiteLoginInfo
        [Model.Store.PayorSiteLoginInfo](T1.PayorSiteLoginInfo_SiteLoginID, T1.PayorSiteLoginInfo_PayorID, T1.PayorSiteLoginInfo_Login, T1.PayorSiteLoginInfo_Password, T1.PayorSiteLoginInfo_LicenseeId)
    FROM (
        SELECT 
            T.SiteLoginID AS PayorSiteLoginInfo_SiteLoginID, 
            T.PayorID AS PayorSiteLoginInfo_PayorID, 
            T.Login AS PayorSiteLoginInfo_Login, 
            T.Password AS PayorSiteLoginInfo_Password, 
            T.LicenseeId AS PayorSiteLoginInfo_LicenseeId, 
            True AS _from0
        FROM CommissionDepartmentEntities.PayorSiteLoginInfoes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PayorSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PayorSource", @"
    SELECT VALUE -- Constructing PayorSource
        [Model.Store.PayorSource](T1.PayorSource_PayorId, T1.PayorSource_LicenseeId, T1.PayorSource_SourceType, T1.PayorSource_Notes, T1.PayorSource_ConfigNotes)
    FROM (
        SELECT 
            T.PayorId AS PayorSource_PayorId, 
            T.LicenseeId AS PayorSource_LicenseeId, 
            T.SourceType AS PayorSource_SourceType, 
            T.Notes AS PayorSource_Notes, 
            T.ConfigNotes AS PayorSource_ConfigNotes, 
            True AS _from0
        FROM CommissionDepartmentEntities.PayorSources AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PayorToolFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2927);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PayorToolFields\r\n        [Model.Store.PayorTo");
            viewString.Append("olFields](T1.PayorToolFields_PayorToolFieldId, T1.PayorToolFields_PayorToolId, T");
            viewString.Append("1.PayorToolFields_LabelOnImage, T1.PayorToolFields_FieldStatus, T1.PayorToolFiel");
            viewString.Append("ds_FieldOrder, T1.PayorToolFields_IsPartOfPrimary, T1.PayorToolFields_IsPopulate");
            viewString.Append("dIfLinked, T1.PayorToolFields_IsTabbedToNextFieldIfLinked, T1.PayorToolFields_Is");
            viewString.Append("CalculatedField, T1.PayorToolFields_IsOverrideOfCalcAllowed, T1.PayorToolFields_");
            viewString.Append("DefaultNumeric, T1.PayorToolFields_IsOorBlankAllowed, T1.PayorToolFields_Alligne");
            viewString.Append("dDirection, T1.PayorToolFields_EquivalentIncomingField, T1.PayorToolFields_Equiv");
            viewString.Append("alentLearnedField, T1.PayorToolFields_EquivalentDeuField, T1.PayorToolFields_For");
            viewString.Append("mulaId, T1.PayorToolFields_HelpText, T1.PayorToolFields_IsDeleted, T1.PayorToolF");
            viewString.Append("ields_FieldPositionX, T1.PayorToolFields_FieldPositionY, T1.PayorToolFields_Fiel");
            viewString.Append("dWidth, T1.PayorToolFields_FieldHeight, T1.PayorToolFields_PTAvailableFieldId, T");
            viewString.Append("1.PayorToolFields_MaskFieldTypeId, T1.PayorToolFields_TemplateID)\r\n    FROM (\r\n ");
            viewString.Append("       SELECT \r\n            T.PayorToolFieldId AS PayorToolFields_PayorToolField");
            viewString.Append("Id, \r\n            T.PayorToolId AS PayorToolFields_PayorToolId, \r\n            T.");
            viewString.Append("LabelOnImage AS PayorToolFields_LabelOnImage, \r\n            T.FieldStatus AS Pay");
            viewString.Append("orToolFields_FieldStatus, \r\n            T.FieldOrder AS PayorToolFields_FieldOrd");
            viewString.Append("er, \r\n            T.IsPartOfPrimary AS PayorToolFields_IsPartOfPrimary, \r\n      ");
            viewString.Append("      T.IsPopulatedIfLinked AS PayorToolFields_IsPopulatedIfLinked, \r\n          ");
            viewString.Append("  T.IsTabbedToNextFieldIfLinked AS PayorToolFields_IsTabbedToNextFieldIfLinked, ");
            viewString.Append("\r\n            T.IsCalculatedField AS PayorToolFields_IsCalculatedField, \r\n      ");
            viewString.Append("      T.IsOverrideOfCalcAllowed AS PayorToolFields_IsOverrideOfCalcAllowed, \r\n  ");
            viewString.Append("          T.DefaultNumeric AS PayorToolFields_DefaultNumeric, \r\n            T.Is");
            viewString.Append("OorBlankAllowed AS PayorToolFields_IsOorBlankAllowed, \r\n            T.AllignedDi");
            viewString.Append("rection AS PayorToolFields_AllignedDirection, \r\n            T.EquivalentIncoming");
            viewString.Append("Field AS PayorToolFields_EquivalentIncomingField, \r\n            T.EquivalentLear");
            viewString.Append("nedField AS PayorToolFields_EquivalentLearnedField, \r\n            T.EquivalentDe");
            viewString.Append("uField AS PayorToolFields_EquivalentDeuField, \r\n            T.FormulaId AS Payor");
            viewString.Append("ToolFields_FormulaId, \r\n            T.HelpText AS PayorToolFields_HelpText, \r\n  ");
            viewString.Append("          T.IsDeleted AS PayorToolFields_IsDeleted, \r\n            T.FieldPositio");
            viewString.Append("nX AS PayorToolFields_FieldPositionX, \r\n            T.FieldPositionY AS PayorToo");
            viewString.Append("lFields_FieldPositionY, \r\n            T.FieldWidth AS PayorToolFields_FieldWidth");
            viewString.Append(", \r\n            T.FieldHeight AS PayorToolFields_FieldHeight, \r\n            T.PT");
            viewString.Append("AvailableFieldId AS PayorToolFields_PTAvailableFieldId, \r\n            T.MaskFiel");
            viewString.Append("dTypeId AS PayorToolFields_MaskFieldTypeId, \r\n            T.TemplateID AS PayorT");
            viewString.Append("oolFields_TemplateID, \r\n            True AS _from0\r\n        FROM CommissionDepar");
            viewString.Append("tmentEntities.PayorToolFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PayorToolFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PayorTools
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PayorTools", @"
    SELECT VALUE -- Constructing PayorTools
        [Model.Store.PayorTools](T1.PayorTools_PayorToolId, T1.PayorTools_PayorId, T1.PayorTools_StatementImageFile, T1.PayorTools_ChequeImageFile, T1.PayorTools_IsDeleted, T1.PayorTools_TemplateID)
    FROM (
        SELECT 
            T.PayorToolId AS PayorTools_PayorToolId, 
            T.PayorId AS PayorTools_PayorId, 
            T.StatementImageFile AS PayorTools_StatementImageFile, 
            T.ChequeImageFile AS PayorTools_ChequeImageFile, 
            T.IsDeleted AS PayorTools_IsDeleted, 
            T.TemplateID AS PayorTools_TemplateID, 
            True AS _from0
        FROM CommissionDepartmentEntities.PayorTools AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Policies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4105);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Policies\r\n        [Model.Store.Policies](T1.P");
            viewString.Append("olicies_PolicyId, T1.Policies_PolicyNumber, T1.Policies_PolicyStatusId, T1.Polic");
            viewString.Append("ies_PolicyType, T1.Policies_PolicyClientId, T1.Policies_PolicyLicenseeId, T1.Pol");
            viewString.Append("icies_OriginalEffectiveDate, T1.Policies_TrackFromDate, T1.Policies_PolicyModeId");
            viewString.Append(", T1.Policies_MonthlyPremium, T1.Policies_CoverageId, T1.Policies_SubmittedThrou");
            viewString.Append("gh, T1.Policies_Enrolled, T1.Policies_Eligible, T1.Policies_PolicyTerminationDat");
            viewString.Append("e, T1.Policies_TerminationReasonId, T1.Policies_IsTrackMissingMonth, T1.Policies");
            viewString.Append("_IsTrackIncomingPercentage, T1.Policies_IsTrackPayment, T1.Policies_IncomingPaym");
            viewString.Append("entTypeId, T1.Policies_IsDeleted, T1.Policies_ReplacedBy, T1.Policies_PayorId, T");
            viewString.Append("1.Policies_DuplicateFrom, T1.Policies_CreatedBy, T1.Policies_CreatedOn, T1.Polic");
            viewString.Append("ies_IsIncomingBasicSchedule, T1.Policies_IsOutGoingBasicSchedule, T1.Policies_Ca");
            viewString.Append("rrierId, T1.Policies_SplitPercentage, T1.Policies_Insured, T1.Policies_Activated");
            viewString.Append("On, T1.Policies_IsLocked, T1.Policies_LastFollowUpRuns, T1.Policies_RowVersion, ");
            viewString.Append("T1.Policies_Advance, T1.Policies_ProductType, T1.Policies_UserCredentialId, T1.P");
            viewString.Append("olicies_AccoutExec, T1.Policies_LastNoVarIssueDate, T1.Policies_LastNoMissIssueD");
            viewString.Append("ate, T1.Policies_IsCustomBasicSchedule, T1.Policies_CustomScheduleDateType, T1.P");
            viewString.Append("olicies_PrimaryAgent, T1.Policies_IsTieredSchedule)\r\n    FROM (\r\n        SELECT ");
            viewString.Append("\r\n            T.PolicyId AS Policies_PolicyId, \r\n            T.PolicyNumber AS P");
            viewString.Append("olicies_PolicyNumber, \r\n            T.PolicyStatusId AS Policies_PolicyStatusId,");
            viewString.Append(" \r\n            T.PolicyType AS Policies_PolicyType, \r\n            T.PolicyClient");
            viewString.Append("Id AS Policies_PolicyClientId, \r\n            T.PolicyLicenseeId AS Policies_Poli");
            viewString.Append("cyLicenseeId, \r\n            T.OriginalEffectiveDate AS Policies_OriginalEffectiv");
            viewString.Append("eDate, \r\n            T.TrackFromDate AS Policies_TrackFromDate, \r\n            T.");
            viewString.Append("PolicyModeId AS Policies_PolicyModeId, \r\n            T.MonthlyPremium AS Policie");
            viewString.Append("s_MonthlyPremium, \r\n            T.CoverageId AS Policies_CoverageId, \r\n         ");
            viewString.Append("   T.SubmittedThrough AS Policies_SubmittedThrough, \r\n            T.Enrolled AS ");
            viewString.Append("Policies_Enrolled, \r\n            T.Eligible AS Policies_Eligible, \r\n            ");
            viewString.Append("T.PolicyTerminationDate AS Policies_PolicyTerminationDate, \r\n            T.Termi");
            viewString.Append("nationReasonId AS Policies_TerminationReasonId, \r\n            T.IsTrackMissingMo");
            viewString.Append("nth AS Policies_IsTrackMissingMonth, \r\n            T.IsTrackIncomingPercentage A");
            viewString.Append("S Policies_IsTrackIncomingPercentage, \r\n            T.IsTrackPayment AS Policies");
            viewString.Append("_IsTrackPayment, \r\n            T.IncomingPaymentTypeId AS Policies_IncomingPayme");
            viewString.Append("ntTypeId, \r\n            T.IsDeleted AS Policies_IsDeleted, \r\n            T.Repla");
            viewString.Append("cedBy AS Policies_ReplacedBy, \r\n            T.PayorId AS Policies_PayorId, \r\n   ");
            viewString.Append("         T.DuplicateFrom AS Policies_DuplicateFrom, \r\n            T.CreatedBy AS");
            viewString.Append(" Policies_CreatedBy, \r\n            T.CreatedOn AS Policies_CreatedOn, \r\n        ");
            viewString.Append("    T.IsIncomingBasicSchedule AS Policies_IsIncomingBasicSchedule, \r\n           ");
            viewString.Append(" T.IsOutGoingBasicSchedule AS Policies_IsOutGoingBasicSchedule, \r\n            T.");
            viewString.Append("CarrierId AS Policies_CarrierId, \r\n            T.SplitPercentage AS Policies_Spl");
            viewString.Append("itPercentage, \r\n            T.Insured AS Policies_Insured, \r\n            T.Activ");
            viewString.Append("atedOn AS Policies_ActivatedOn, \r\n            T.IsLocked AS Policies_IsLocked, \r");
            viewString.Append("\n            T.LastFollowUpRuns AS Policies_LastFollowUpRuns, \r\n            T.Ro");
            viewString.Append("wVersion AS Policies_RowVersion, \r\n            T.Advance AS Policies_Advance, \r\n");
            viewString.Append("            T.ProductType AS Policies_ProductType, \r\n            T.UserCredentia");
            viewString.Append("lId AS Policies_UserCredentialId, \r\n            T.AccoutExec AS Policies_AccoutE");
            viewString.Append("xec, \r\n            T.LastNoVarIssueDate AS Policies_LastNoVarIssueDate, \r\n      ");
            viewString.Append("      T.LastNoMissIssueDate AS Policies_LastNoMissIssueDate, \r\n            T.IsC");
            viewString.Append("ustomBasicSchedule AS Policies_IsCustomBasicSchedule, \r\n            T.CustomSche");
            viewString.Append("duleDateType AS Policies_CustomScheduleDateType, \r\n            T.PrimaryAgent AS");
            viewString.Append(" Policies_PrimaryAgent, \r\n            T.IsTieredSchedule AS Policies_IsTieredSch");
            viewString.Append("edule, \r\n            True AS _from0\r\n        FROM CommissionDepartmentEntities.P");
            viewString.Append("olicies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Policies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PoliciesHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3513);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PoliciesHistory\r\n        [Model.Store.Policie");
            viewString.Append("sHistory](T1.PoliciesHistory_PolicyId, T1.PoliciesHistory_PolicyNumber, T1.Polic");
            viewString.Append("iesHistory_PolicyStatusId, T1.PoliciesHistory_PolicyType, T1.PoliciesHistory_Pol");
            viewString.Append("icyClientId, T1.PoliciesHistory_PolicyLicenseeId, T1.PoliciesHistory_OriginalEff");
            viewString.Append("ectiveDate, T1.PoliciesHistory_TrackFromDate, T1.PoliciesHistory_PolicyModeId, T");
            viewString.Append("1.PoliciesHistory_MonthlyPremium, T1.PoliciesHistory_CoverageId, T1.PoliciesHist");
            viewString.Append("ory_SubmittedThrough, T1.PoliciesHistory_Enrolled, T1.PoliciesHistory_Eligible, ");
            viewString.Append("T1.PoliciesHistory_PolicyTerminationDate, T1.PoliciesHistory_TerminationReasonId");
            viewString.Append(", T1.PoliciesHistory_IsTrackMissingMonth, T1.PoliciesHistory_IsTrackIncomingPerc");
            viewString.Append("entage, T1.PoliciesHistory_IsTrackPayment, T1.PoliciesHistory_IncomingPaymentTyp");
            viewString.Append("eId, T1.PoliciesHistory_IsDeleted, T1.PoliciesHistory_ReplacedBy, T1.PoliciesHis");
            viewString.Append("tory_PayorId, T1.PoliciesHistory_DuplicateFrom, T1.PoliciesHistory_CreatedBy, T1");
            viewString.Append(".PoliciesHistory_CreatedOn, T1.PoliciesHistory_IsIncomingBasicSchedule, T1.Polic");
            viewString.Append("iesHistory_IsOutGoingBasicSchedule, T1.PoliciesHistory_CarrierId, T1.PoliciesHis");
            viewString.Append("tory_SplitPercentage, T1.PoliciesHistory_Insured, T1.PoliciesHistory_Advance, T1");
            viewString.Append(".PoliciesHistory_ProductType)\r\n    FROM (\r\n        SELECT \r\n            T.Policy");
            viewString.Append("Id AS PoliciesHistory_PolicyId, \r\n            T.PolicyNumber AS PoliciesHistory_");
            viewString.Append("PolicyNumber, \r\n            T.PolicyStatusId AS PoliciesHistory_PolicyStatusId, ");
            viewString.Append("\r\n            T.PolicyType AS PoliciesHistory_PolicyType, \r\n            T.Policy");
            viewString.Append("ClientId AS PoliciesHistory_PolicyClientId, \r\n            T.PolicyLicenseeId AS ");
            viewString.Append("PoliciesHistory_PolicyLicenseeId, \r\n            T.OriginalEffectiveDate AS Polic");
            viewString.Append("iesHistory_OriginalEffectiveDate, \r\n            T.TrackFromDate AS PoliciesHisto");
            viewString.Append("ry_TrackFromDate, \r\n            T.PolicyModeId AS PoliciesHistory_PolicyModeId, ");
            viewString.Append("\r\n            T.MonthlyPremium AS PoliciesHistory_MonthlyPremium, \r\n            ");
            viewString.Append("T.CoverageId AS PoliciesHistory_CoverageId, \r\n            T.SubmittedThrough AS ");
            viewString.Append("PoliciesHistory_SubmittedThrough, \r\n            T.Enrolled AS PoliciesHistory_En");
            viewString.Append("rolled, \r\n            T.Eligible AS PoliciesHistory_Eligible, \r\n            T.Po");
            viewString.Append("licyTerminationDate AS PoliciesHistory_PolicyTerminationDate, \r\n            T.Te");
            viewString.Append("rminationReasonId AS PoliciesHistory_TerminationReasonId, \r\n            T.IsTrac");
            viewString.Append("kMissingMonth AS PoliciesHistory_IsTrackMissingMonth, \r\n            T.IsTrackInc");
            viewString.Append("omingPercentage AS PoliciesHistory_IsTrackIncomingPercentage, \r\n            T.Is");
            viewString.Append("TrackPayment AS PoliciesHistory_IsTrackPayment, \r\n            T.IncomingPaymentT");
            viewString.Append("ypeId AS PoliciesHistory_IncomingPaymentTypeId, \r\n            T.IsDeleted AS Pol");
            viewString.Append("iciesHistory_IsDeleted, \r\n            T.ReplacedBy AS PoliciesHistory_ReplacedBy");
            viewString.Append(", \r\n            T.PayorId AS PoliciesHistory_PayorId, \r\n            T.DuplicateF");
            viewString.Append("rom AS PoliciesHistory_DuplicateFrom, \r\n            T.CreatedBy AS PoliciesHisto");
            viewString.Append("ry_CreatedBy, \r\n            T.CreatedOn AS PoliciesHistory_CreatedOn, \r\n        ");
            viewString.Append("    T.IsIncomingBasicSchedule AS PoliciesHistory_IsIncomingBasicSchedule, \r\n    ");
            viewString.Append("        T.IsOutGoingBasicSchedule AS PoliciesHistory_IsOutGoingBasicSchedule, \r\n");
            viewString.Append("            T.CarrierId AS PoliciesHistory_CarrierId, \r\n            T.SplitPerce");
            viewString.Append("ntage AS PoliciesHistory_SplitPercentage, \r\n            T.Insured AS PoliciesHis");
            viewString.Append("tory_Insured, \r\n            T.Advance AS PoliciesHistory_Advance, \r\n            ");
            viewString.Append("T.ProductType AS PoliciesHistory_ProductType, \r\n            True AS _from0\r\n    ");
            viewString.Append("    FROM CommissionDepartmentEntities.PoliciesHistories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PoliciesHistory", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyIncomingAdvancedSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyIncomingAdvancedSchedules", @"
    SELECT VALUE -- Constructing PolicyIncomingAdvancedSchedules
        [Model.Store.PolicyIncomingAdvancedSchedules](T1.PolicyIncomingAdvancedSchedules_IncomingAdvancedScheduleId, T1.PolicyIncomingAdvancedSchedules_PolicyId, T1.PolicyIncomingAdvancedSchedules_ScheduleTypeId, T1.PolicyIncomingAdvancedSchedules_FromRange, T1.PolicyIncomingAdvancedSchedules_ToRange, T1.PolicyIncomingAdvancedSchedules_EffectiveFromDate, T1.PolicyIncomingAdvancedSchedules_EffectiveToDate, T1.PolicyIncomingAdvancedSchedules_Rate)
    FROM (
        SELECT 
            T.IncomingAdvancedScheduleId AS PolicyIncomingAdvancedSchedules_IncomingAdvancedScheduleId, 
            T.PolicyId AS PolicyIncomingAdvancedSchedules_PolicyId, 
            T.ScheduleTypeId AS PolicyIncomingAdvancedSchedules_ScheduleTypeId, 
            T.FromRange AS PolicyIncomingAdvancedSchedules_FromRange, 
            T.ToRange AS PolicyIncomingAdvancedSchedules_ToRange, 
            T.EffectiveFromDate AS PolicyIncomingAdvancedSchedules_EffectiveFromDate, 
            T.EffectiveToDate AS PolicyIncomingAdvancedSchedules_EffectiveToDate, 
            T.Rate AS PolicyIncomingAdvancedSchedules_Rate, 
            True AS _from0
        FROM CommissionDepartmentEntities.PolicyIncomingAdvancedSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyLevelBillingDetail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyLevelBillingDetail", @"
    SELECT VALUE -- Constructing PolicyLevelBillingDetail
        [Model.Store.PolicyLevelBillingDetail](T1.PolicyLevelBillingDetail_BillingLineId, T1.PolicyLevelBillingDetail_TotalUnits, T1.PolicyLevelBillingDetail_PolicyId)
    FROM (
        SELECT 
            T.BillingLineId AS PolicyLevelBillingDetail_BillingLineId, 
            T.TotalUnits AS PolicyLevelBillingDetail_TotalUnits, 
            T.PolicyId AS PolicyLevelBillingDetail_PolicyId, 
            True AS _from0
        FROM CommissionDepartmentEntities.PolicyLevelBillingDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyOutgoingAdvancedSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyOutgoingAdvancedSchedules", "\r\n    SELECT VALUE -- Constructing PolicyOutgoingAdvancedSchedules\r\n        [Mode" +
                    "l.Store.PolicyOutgoingAdvancedSchedules](T1.PolicyOutgoingAdvancedSchedules_Outg" +
                    "oingAdvancedScheduleId, T1.PolicyOutgoingAdvancedSchedules_PolicyId, T1.PolicyOu" +
                    "tgoingAdvancedSchedules_ScheduleTypeId, T1.PolicyOutgoingAdvancedSchedules_FromR" +
                    "ange, T1.PolicyOutgoingAdvancedSchedules_ToRange, T1.PolicyOutgoingAdvancedSched" +
                    "ules_EffectiveFromDate, T1.PolicyOutgoingAdvancedSchedules_EffectiveToDate, T1.P" +
                    "olicyOutgoingAdvancedSchedules_Rate, T1.PolicyOutgoingAdvancedSchedules_PayeeUse" +
                    "rCredentialId, T1.PolicyOutgoingAdvancedSchedules_IsPrimaryAgent, T1.PolicyOutgo" +
                    "ingAdvancedSchedules_ModifiedOn, T1.PolicyOutgoingAdvancedSchedules_PayeeName)\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.OutgoingAdvancedScheduleId AS PolicyO" +
                    "utgoingAdvancedSchedules_OutgoingAdvancedScheduleId, \r\n            T.PolicyId AS" +
                    " PolicyOutgoingAdvancedSchedules_PolicyId, \r\n            T.ScheduleTypeId AS Pol" +
                    "icyOutgoingAdvancedSchedules_ScheduleTypeId, \r\n            T.FromRange AS Policy" +
                    "OutgoingAdvancedSchedules_FromRange, \r\n            T.ToRange AS PolicyOutgoingAd" +
                    "vancedSchedules_ToRange, \r\n            T.EffectiveFromDate AS PolicyOutgoingAdva" +
                    "ncedSchedules_EffectiveFromDate, \r\n            T.EffectiveToDate AS PolicyOutgoi" +
                    "ngAdvancedSchedules_EffectiveToDate, \r\n            T.Rate AS PolicyOutgoingAdvan" +
                    "cedSchedules_Rate, \r\n            T.PayeeUserCredentialId AS PolicyOutgoingAdvanc" +
                    "edSchedules_PayeeUserCredentialId, \r\n            T.IsPrimaryAgent AS PolicyOutgo" +
                    "ingAdvancedSchedules_IsPrimaryAgent, \r\n            T.ModifiedOn AS PolicyOutgoin" +
                    "gAdvancedSchedules_ModifiedOn, \r\n            T.PayeeName AS PolicyOutgoingAdvanc" +
                    "edSchedules_PayeeName, \r\n            True AS _from0\r\n        FROM CommissionDepa" +
                    "rtmentEntities.PolicyOutgoingAdvancedSchedules AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyOutgoingSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyOutgoingSchedules", "\r\n    SELECT VALUE -- Constructing PolicyOutgoingSchedules\r\n        [Model.Store." +
                    "PolicyOutgoingSchedules](T1.PolicyOutgoingSchedules_OutgoingScheduleId, T1.Polic" +
                    "yOutgoingSchedules_PolicyId, T1.PolicyOutgoingSchedules_PayeeUserCredentialId, T" +
                    "1.PolicyOutgoingSchedules_IsPrimaryAgent, T1.PolicyOutgoingSchedules_FirstYearPe" +
                    "rcentage, T1.PolicyOutgoingSchedules_RenewalPercentage, T1.PolicyOutgoingSchedul" +
                    "es_CreatedOn, T1.PolicyOutgoingSchedules_ScheduleTypeId, T1.PolicyOutgoingSchedu" +
                    "les_CustomStartDate, T1.PolicyOutgoingSchedules_CustomEndDate, T1.PolicyOutgoing" +
                    "Schedules_SplitPercent, T1.PolicyOutgoingSchedules_TierNumber)\r\n    FROM (\r\n    " +
                    "    SELECT \r\n            T.OutgoingScheduleId AS PolicyOutgoingSchedules_Outgoin" +
                    "gScheduleId, \r\n            T.PolicyId AS PolicyOutgoingSchedules_PolicyId, \r\n   " +
                    "         T.PayeeUserCredentialId AS PolicyOutgoingSchedules_PayeeUserCredentialI" +
                    "d, \r\n            T.IsPrimaryAgent AS PolicyOutgoingSchedules_IsPrimaryAgent, \r\n " +
                    "           T.FirstYearPercentage AS PolicyOutgoingSchedules_FirstYearPercentage," +
                    " \r\n            T.RenewalPercentage AS PolicyOutgoingSchedules_RenewalPercentage," +
                    " \r\n            T.CreatedOn AS PolicyOutgoingSchedules_CreatedOn, \r\n            T" +
                    ".ScheduleTypeId AS PolicyOutgoingSchedules_ScheduleTypeId, \r\n            T.Custo" +
                    "mStartDate AS PolicyOutgoingSchedules_CustomStartDate, \r\n            T.CustomEnd" +
                    "Date AS PolicyOutgoingSchedules_CustomEndDate, \r\n            T.SplitPercent AS P" +
                    "olicyOutgoingSchedules_SplitPercent, \r\n            T.TierNumber AS PolicyOutgoin" +
                    "gSchedules_TierNumber, \r\n            True AS _from0\r\n        FROM CommissionDepa" +
                    "rtmentEntities.PolicyOutgoingSchedules AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyPaymentEntries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2377);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PolicyPaymentEntries\r\n        [Model.Store.Po");
            viewString.Append("licyPaymentEntries](T1.PolicyPaymentEntries_PaymentEntryId, T1.PolicyPaymentEntr");
            viewString.Append("ies_StatementId, T1.PolicyPaymentEntries_PolicyId, T1.PolicyPaymentEntries_Invoi");
            viewString.Append("ceDate, T1.PolicyPaymentEntries_PaymentRecived, T1.PolicyPaymentEntries_Commissi");
            viewString.Append("onPercentage, T1.PolicyPaymentEntries_NumberOfUnits, T1.PolicyPaymentEntries_Fee");
            viewString.Append(", T1.PolicyPaymentEntries_SplitPercentage, T1.PolicyPaymentEntries_TotalPayment,");
            viewString.Append(" T1.PolicyPaymentEntries_CreatedOn, T1.PolicyPaymentEntries_CreatedBy, T1.Policy");
            viewString.Append("PaymentEntries_PostStatusID, T1.PolicyPaymentEntries_Bonus, T1.PolicyPaymentEntr");
            viewString.Append("ies_DollerPerUnit, T1.PolicyPaymentEntries_DEUEntryId, T1.PolicyPaymentEntries_E");
            viewString.Append("xpectedPayment, T1.PolicyPaymentEntries_FollowUpVarIssueId, T1.PolicyPaymentEntr");
            viewString.Append("ies_FollowUpIssueResolveOrClosed, T1.PolicyPaymentEntries_IsLinkPayment)\r\n    FR");
            viewString.Append("OM (\r\n        SELECT \r\n            T.PaymentEntryId AS PolicyPaymentEntries_Paym");
            viewString.Append("entEntryId, \r\n            T.StatementId AS PolicyPaymentEntries_StatementId, \r\n ");
            viewString.Append("           T.PolicyId AS PolicyPaymentEntries_PolicyId, \r\n            T.InvoiceD");
            viewString.Append("ate AS PolicyPaymentEntries_InvoiceDate, \r\n            T.PaymentRecived AS Polic");
            viewString.Append("yPaymentEntries_PaymentRecived, \r\n            T.CommissionPercentage AS PolicyPa");
            viewString.Append("ymentEntries_CommissionPercentage, \r\n            T.NumberOfUnits AS PolicyPaymen");
            viewString.Append("tEntries_NumberOfUnits, \r\n            T.Fee AS PolicyPaymentEntries_Fee, \r\n     ");
            viewString.Append("       T.SplitPercentage AS PolicyPaymentEntries_SplitPercentage, \r\n            ");
            viewString.Append("T.TotalPayment AS PolicyPaymentEntries_TotalPayment, \r\n            T.CreatedOn A");
            viewString.Append("S PolicyPaymentEntries_CreatedOn, \r\n            T.CreatedBy AS PolicyPaymentEntr");
            viewString.Append("ies_CreatedBy, \r\n            T.PostStatusID AS PolicyPaymentEntries_PostStatusID");
            viewString.Append(", \r\n            T.Bonus AS PolicyPaymentEntries_Bonus, \r\n            T.DollerPer");
            viewString.Append("Unit AS PolicyPaymentEntries_DollerPerUnit, \r\n            T.DEUEntryId AS Policy");
            viewString.Append("PaymentEntries_DEUEntryId, \r\n            T.ExpectedPayment AS PolicyPaymentEntri");
            viewString.Append("es_ExpectedPayment, \r\n            T.FollowUpVarIssueId AS PolicyPaymentEntries_F");
            viewString.Append("ollowUpVarIssueId, \r\n            T.FollowUpIssueResolveOrClosed AS PolicyPayment");
            viewString.Append("Entries_FollowUpIssueResolveOrClosed, \r\n            T.IsLinkPayment AS PolicyPay");
            viewString.Append("mentEntries_IsLinkPayment, \r\n            True AS _from0\r\n        FROM Commission");
            viewString.Append("DepartmentEntities.PolicyPaymentEntries AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyPaymentEntries", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ServiceLines
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ServiceLines", @"
    SELECT VALUE -- Constructing ServiceLines
        [Model.Store.ServiceLines](T1.ServiceLines_ServiceLineId, T1.ServiceLines_LicenseeId, T1.ServiceLines_ServiceId, T1.ServiceLines_ServiceChargeTypeId, T1.ServiceLines_Min, T1.ServiceLines_Range1, T1.ServiceLines_Range2, T1.ServiceLines_Rate, T1.ServiceLines_Discount, T1.ServiceLines_StartDate, T1.ServiceLines_EndDate, T1.ServiceLines_IsTaxable, T1.ServiceLines_ModifiedOn, T1.ServiceLines_ConsumedUnit)
    FROM (
        SELECT 
            T.ServiceLineId AS ServiceLines_ServiceLineId, 
            T.LicenseeId AS ServiceLines_LicenseeId, 
            T.ServiceId AS ServiceLines_ServiceId, 
            T.ServiceChargeTypeId AS ServiceLines_ServiceChargeTypeId, 
            T.Min AS ServiceLines_Min, 
            T.Range1 AS ServiceLines_Range1, 
            T.Range2 AS ServiceLines_Range2, 
            T.Rate AS ServiceLines_Rate, 
            T.Discount AS ServiceLines_Discount, 
            T.StartDate AS ServiceLines_StartDate, 
            T.EndDate AS ServiceLines_EndDate, 
            T.IsTaxable AS ServiceLines_IsTaxable, 
            T.ModifiedOn AS ServiceLines_ModifiedOn, 
            T.ConsumedUnit AS ServiceLines_ConsumedUnit, 
            True AS _from0
        FROM CommissionDepartmentEntities.ServiceLines AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Templates", @"
    SELECT VALUE -- Constructing Templates
        [Model.Store.Templates](T1.Templates_ExcelColumnList, T1.Templates_SheetName, T1.Templates_DataStartIndex, T1.Templates_PayorID, T1.Templates_IsDeleted, T1.Templates_LastModified, T1.Templates_LastRowsToSkip)
    FROM (
        SELECT 
            T.ExcelColumnList AS Templates_ExcelColumnList, 
            T.SheetName AS Templates_SheetName, 
            T.DataStartIndex AS Templates_DataStartIndex, 
            T.PayorID AS Templates_PayorID, 
            T.IsDeleted AS Templates_IsDeleted, 
            T.LastModified AS Templates_LastModified, 
            T.LastRowsToSkip AS Templates_LastRowsToSkip, 
            True AS _from0
        FROM CommissionDepartmentEntities.Templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.UserCredentials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.UserCredentials", @"
    SELECT VALUE -- Constructing UserCredentials
        [Model.Store.UserCredentials](T1.UserCredentials_UserCredentialId, T1.UserCredentials_UserName, T1.UserCredentials_Password, T1.UserCredentials_RoleId, T1.UserCredentials_PasswordHintQuestion, T1.UserCredentials_PasswordHintAnswer, T1.UserCredentials_IsHouseAccount, T1.UserCredentials_IsDeleted, T1.UserCredentials_IsNewsToFlash, T1.UserCredentials_LicenseeId, T1.UserCredentials_CreatedOn, T1.UserCredentials_IsAccountExec, T1.UserCredentials_BGUserId)
    FROM (
        SELECT 
            T.UserCredentialId AS UserCredentials_UserCredentialId, 
            T.UserName AS UserCredentials_UserName, 
            T.Password AS UserCredentials_Password, 
            T.RoleId AS UserCredentials_RoleId, 
            T.PasswordHintQuestion AS UserCredentials_PasswordHintQuestion, 
            T.PasswordHintAnswer AS UserCredentials_PasswordHintAnswer, 
            T.IsHouseAccount AS UserCredentials_IsHouseAccount, 
            T.IsDeleted AS UserCredentials_IsDeleted, 
            T.IsNewsToFlash AS UserCredentials_IsNewsToFlash, 
            T.LicenseeId AS UserCredentials_LicenseeId, 
            T.CreatedOn AS UserCredentials_CreatedOn, 
            T.IsAccountExec AS UserCredentials_IsAccountExec, 
            T.BGUserId AS UserCredentials_BGUserId, 
            True AS _from0
        FROM CommissionDepartmentEntities.UserCredentials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.UserDetail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.UserDetail", "\r\n    SELECT VALUE -- Constructing UserDetail\r\n        [Model.Store.UserDetail](T" +
                    "1.UserDetail_UserCredentialId, T1.UserDetail_FirstName, T1.UserDetail_LastName, " +
                    "T1.UserDetail_Company, T1.UserDetail_NickName, T1.UserDetail_Address, T1.UserDet" +
                    "ail_ZipCode, T1.UserDetail_City, T1.UserDetail_State, T1.UserDetail_Email, T1.Us" +
                    "erDetail_OfficePhone, T1.UserDetail_CellPhone, T1.UserDetail_Fax, T1.UserDetail_" +
                    "FirstYearDefault, T1.UserDetail_RenewalDefault, T1.UserDetail_ReportForEntireAge" +
                    "ncy, T1.UserDetail_ReportForOwnBusiness, T1.UserDetail_AddPayeeOn, T1.UserDetail" +
                    "_DisableAgentEditing)\r\n    FROM (\r\n        SELECT \r\n            T.UserCredential" +
                    "Id AS UserDetail_UserCredentialId, \r\n            T.FirstName AS UserDetail_First" +
                    "Name, \r\n            T.LastName AS UserDetail_LastName, \r\n            T.Company A" +
                    "S UserDetail_Company, \r\n            T.NickName AS UserDetail_NickName, \r\n       " +
                    "     T.Address AS UserDetail_Address, \r\n            T.ZipCode AS UserDetail_ZipC" +
                    "ode, \r\n            T.City AS UserDetail_City, \r\n            T.State AS UserDetai" +
                    "l_State, \r\n            T.Email AS UserDetail_Email, \r\n            T.OfficePhone " +
                    "AS UserDetail_OfficePhone, \r\n            T.CellPhone AS UserDetail_CellPhone, \r\n" +
                    "            T.Fax AS UserDetail_Fax, \r\n            T.FirstYearDefault AS UserDet" +
                    "ail_FirstYearDefault, \r\n            T.RenewalDefault AS UserDetail_RenewalDefaul" +
                    "t, \r\n            T.ReportForEntireAgency AS UserDetail_ReportForEntireAgency, \r\n" +
                    "            T.ReportForOwnBusiness AS UserDetail_ReportForOwnBusiness, \r\n       " +
                    "     T.AddPayeeOn AS UserDetail_AddPayeeOn, \r\n            T.DisableAgentEditing " +
                    "AS UserDetail_DisableAgentEditing, \r\n            True AS _from0\r\n        FROM Co" +
                    "mmissionDepartmentEntities.UserDetails AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.UserPermissions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.UserPermissions", @"
    SELECT VALUE -- Constructing UserPermissions
        [Model.Store.UserPermissions](T1.UserPermissions_UserPermissionId, T1.UserPermissions_UserCredentialId, T1.UserPermissions_ModuleId, T1.UserPermissions_AccessRightId)
    FROM (
        SELECT 
            T.UserPermissionId AS UserPermissions_UserPermissionId, 
            T.UserCredentialId AS UserPermissions_UserCredentialId, 
            T.ModuleId AS UserPermissions_ModuleId, 
            T.AccessRightId AS UserPermissions_AccessRightId, 
            True AS _from0
        FROM CommissionDepartmentEntities.UserPermissions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.VariablesForBillingLine
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.VariablesForBillingLine", @"
    SELECT VALUE -- Constructing VariablesForBillingLine
        [Model.Store.VariablesForBillingLine](T1.VariablesForBillingLine_NoOfPolicies, T1.VariablesForBillingLine_NoOfUsers, T1.VariablesForBillingLine_NoOfPayees, T1.VariablesForBillingLine_NoOfEntries, T1.VariablesForBillingLine_NoOfAdjustment, T1.VariablesForBillingLine_NoOfWebstatement, T1.VariablesForBillingLine_NoOfEDI, T1.VariablesForBillingLine_NoOfTrackableMonth, T1.VariablesForBillingLine_UnbilledTrackableMonth, T1.VariablesForBillingLine_BillingLineId)
    FROM (
        SELECT 
            T.NoOfPolicies AS VariablesForBillingLine_NoOfPolicies, 
            T.NoOfUsers AS VariablesForBillingLine_NoOfUsers, 
            T.NoOfPayees AS VariablesForBillingLine_NoOfPayees, 
            T.NoOfEntries AS VariablesForBillingLine_NoOfEntries, 
            T.NoOfAdjustment AS VariablesForBillingLine_NoOfAdjustment, 
            T.NoOfWebstatement AS VariablesForBillingLine_NoOfWebstatement, 
            T.NoOfEDI AS VariablesForBillingLine_NoOfEDI, 
            T.NoOfTrackableMonth AS VariablesForBillingLine_NoOfTrackableMonth, 
            T.UnbilledTrackableMonth AS VariablesForBillingLine_UnbilledTrackableMonth, 
            T.BillingLineId AS VariablesForBillingLine_BillingLineId, 
            True AS _from0
        FROM CommissionDepartmentEntities.VariablesForBillingLines AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Statements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Statements", @"
    SELECT VALUE -- Constructing Statements
        [Model.Store.Statements](T1.Statements_StatementId, T1.Statements_StatementNumber, T1.Statements_BatchId, T1.Statements_PayorId, T1.Statements_CheckAmount, T1.Statements_StatementStatusId, T1.Statements_Entries, T1.Statements_CreatedOn, T1.Statements_LastModified, T1.Statements_CreatedBy, T1.Statements_BalAdj, T1.Statements_EnteredAmount, T1.Statements_StatementDate, T1.Statements_TemplateID, T1.Statements_FromPage, T1.Statements_ToPage)
    FROM (
        SELECT 
            T.StatementId AS Statements_StatementId, 
            T.StatementNumber AS Statements_StatementNumber, 
            T.BatchId AS Statements_BatchId, 
            T.PayorId AS Statements_PayorId, 
            T.CheckAmount AS Statements_CheckAmount, 
            T.StatementStatusId AS Statements_StatementStatusId, 
            T.Entries AS Statements_Entries, 
            T.CreatedOn AS Statements_CreatedOn, 
            T.LastModified AS Statements_LastModified, 
            T.CreatedBy AS Statements_CreatedBy, 
            T.BalAdj AS Statements_BalAdj, 
            T.EnteredAmount AS Statements_EnteredAmount, 
            T.StatementDate AS Statements_StatementDate, 
            T.TemplateID AS Statements_TemplateID, 
            T.FromPage AS Statements_FromPage, 
            T.ToPage AS Statements_ToPage, 
            True AS _from0
        FROM CommissionDepartmentEntities.Statements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyLearnedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3592);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PolicyLearnedFields\r\n        [Model.Store.Pol");
            viewString.Append("icyLearnedFields](T1.PolicyLearnedFields_PolicyId, T1.PolicyLearnedFields_Insure");
            viewString.Append("d, T1.PolicyLearnedFields_PolicyNumber, T1.PolicyLearnedFields_Effective, T1.Pol");
            viewString.Append("icyLearnedFields_TrackFrom, T1.PolicyLearnedFields_PAC, T1.PolicyLearnedFields_P");
            viewString.Append("MC, T1.PolicyLearnedFields_ModalAvgPremium, T1.PolicyLearnedFields_PolicyModeId,");
            viewString.Append(" T1.PolicyLearnedFields_Enrolled, T1.PolicyLearnedFields_Eligible, T1.PolicyLear");
            viewString.Append("nedFields_AutoTerminationDate, T1.PolicyLearnedFields_Link1, T1.PolicyLearnedFie");
            viewString.Append("lds_LastModifiedOn, T1.PolicyLearnedFields_LastModifiedUserCredentialid, T1.Poli");
            viewString.Append("cyLearnedFields_ClientID, T1.PolicyLearnedFields_CompTypeID, T1.PolicyLearnedFie");
            viewString.Append("lds_PayorSysID, T1.PolicyLearnedFields_Renewal, T1.PolicyLearnedFields_SplitPerc");
            viewString.Append("entage, T1.PolicyLearnedFields_CompScheduleType, T1.PolicyLearnedFields_CarrierI");
            viewString.Append("d, T1.PolicyLearnedFields_CoverageId, T1.PolicyLearnedFields_PayorId, T1.PolicyL");
            viewString.Append("earnedFields_PreviousEffectiveDate, T1.PolicyLearnedFields_PreviousPolicyModeId,");
            viewString.Append(" T1.PolicyLearnedFields_CarrierNickName, T1.PolicyLearnedFields_CoverageNickName");
            viewString.Append(", T1.PolicyLearnedFields_Advance, T1.PolicyLearnedFields_ProductType, T1.PolicyL");
            viewString.Append("earnedFields_UserCredentialId, T1.PolicyLearnedFields_AccoutExec, T1.PolicyLearn");
            viewString.Append("edFields_ImportPolicyID)\r\n    FROM (\r\n        SELECT \r\n            T.PolicyId AS");
            viewString.Append(" PolicyLearnedFields_PolicyId, \r\n            T.Insured AS PolicyLearnedFields_In");
            viewString.Append("sured, \r\n            T.PolicyNumber AS PolicyLearnedFields_PolicyNumber, \r\n     ");
            viewString.Append("       T.Effective AS PolicyLearnedFields_Effective, \r\n            T.TrackFrom A");
            viewString.Append("S PolicyLearnedFields_TrackFrom, \r\n            T.PAC AS PolicyLearnedFields_PAC,");
            viewString.Append(" \r\n            T.PMC AS PolicyLearnedFields_PMC, \r\n            T.ModalAvgPremium");
            viewString.Append(" AS PolicyLearnedFields_ModalAvgPremium, \r\n            T.PolicyModeId AS PolicyL");
            viewString.Append("earnedFields_PolicyModeId, \r\n            T.Enrolled AS PolicyLearnedFields_Enrol");
            viewString.Append("led, \r\n            T.Eligible AS PolicyLearnedFields_Eligible, \r\n            T.A");
            viewString.Append("utoTerminationDate AS PolicyLearnedFields_AutoTerminationDate, \r\n            T.L");
            viewString.Append("ink1 AS PolicyLearnedFields_Link1, \r\n            T.LastModifiedOn AS PolicyLearn");
            viewString.Append("edFields_LastModifiedOn, \r\n            T.LastModifiedUserCredentialid AS PolicyL");
            viewString.Append("earnedFields_LastModifiedUserCredentialid, \r\n            T.ClientID AS PolicyLea");
            viewString.Append("rnedFields_ClientID, \r\n            T.CompTypeID AS PolicyLearnedFields_CompTypeI");
            viewString.Append("D, \r\n            T.PayorSysID AS PolicyLearnedFields_PayorSysID, \r\n            T");
            viewString.Append(".Renewal AS PolicyLearnedFields_Renewal, \r\n            T.SplitPercentage AS Poli");
            viewString.Append("cyLearnedFields_SplitPercentage, \r\n            T.CompScheduleType AS PolicyLearn");
            viewString.Append("edFields_CompScheduleType, \r\n            T.CarrierId AS PolicyLearnedFields_Carr");
            viewString.Append("ierId, \r\n            T.CoverageId AS PolicyLearnedFields_CoverageId, \r\n         ");
            viewString.Append("   T.PayorId AS PolicyLearnedFields_PayorId, \r\n            T.PreviousEffectiveDa");
            viewString.Append("te AS PolicyLearnedFields_PreviousEffectiveDate, \r\n            T.PreviousPolicyM");
            viewString.Append("odeId AS PolicyLearnedFields_PreviousPolicyModeId, \r\n            T.CarrierNickNa");
            viewString.Append("me AS PolicyLearnedFields_CarrierNickName, \r\n            T.CoverageNickName AS P");
            viewString.Append("olicyLearnedFields_CoverageNickName, \r\n            T.Advance AS PolicyLearnedFie");
            viewString.Append("lds_Advance, \r\n            T.ProductType AS PolicyLearnedFields_ProductType, \r\n ");
            viewString.Append("           T.UserCredentialId AS PolicyLearnedFields_UserCredentialId, \r\n       ");
            viewString.Append("     T.AccoutExec AS PolicyLearnedFields_AccoutExec, \r\n            T.ImportPolic");
            viewString.Append("yID AS PolicyLearnedFields_ImportPolicyID, \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM CommissionDepartmentEntities.PolicyLearnedFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyLearnedFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyLearnedFieldsHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3837);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PolicyLearnedFieldsHistory\r\n        [Model.St");
            viewString.Append("ore.PolicyLearnedFieldsHistory](T1.PolicyLearnedFieldsHistory_PolicyId, T1.Polic");
            viewString.Append("yLearnedFieldsHistory_Insured, T1.PolicyLearnedFieldsHistory_PolicyNumber, T1.Po");
            viewString.Append("licyLearnedFieldsHistory_Effective, T1.PolicyLearnedFieldsHistory_TrackFrom, T1.");
            viewString.Append("PolicyLearnedFieldsHistory_PAC, T1.PolicyLearnedFieldsHistory_PMC, T1.PolicyLear");
            viewString.Append("nedFieldsHistory_ModalAvgPremium, T1.PolicyLearnedFieldsHistory_PolicyModeId, T1");
            viewString.Append(".PolicyLearnedFieldsHistory_Enrolled, T1.PolicyLearnedFieldsHistory_Eligible, T1");
            viewString.Append(".PolicyLearnedFieldsHistory_AutoTerminationDate, T1.PolicyLearnedFieldsHistory_L");
            viewString.Append("ink1, T1.PolicyLearnedFieldsHistory_LastModifiedOn, T1.PolicyLearnedFieldsHistor");
            viewString.Append("y_LastModifiedUserCredentialid, T1.PolicyLearnedFieldsHistory_ClientID, T1.Polic");
            viewString.Append("yLearnedFieldsHistory_CompTypeID, T1.PolicyLearnedFieldsHistory_PayorSysID, T1.P");
            viewString.Append("olicyLearnedFieldsHistory_Renewal, T1.PolicyLearnedFieldsHistory_SplitPercentage");
            viewString.Append(", T1.PolicyLearnedFieldsHistory_CompScheduleType, T1.PolicyLearnedFieldsHistory_");
            viewString.Append("CarrierId, T1.PolicyLearnedFieldsHistory_CoverageId, T1.PolicyLearnedFieldsHisto");
            viewString.Append("ry_PayorId, T1.PolicyLearnedFieldsHistory_PreviousEffectiveDate, T1.PolicyLearne");
            viewString.Append("dFieldsHistory_PreviousPolicyModeId, T1.PolicyLearnedFieldsHistory_CarrierNickNa");
            viewString.Append("me, T1.PolicyLearnedFieldsHistory_CoverageNickName, T1.PolicyLearnedFieldsHistor");
            viewString.Append("y_Advance, T1.PolicyLearnedFieldsHistory_ProductType, T1.PolicyLearnedFieldsHist");
            viewString.Append("ory_ImportPolicyID)\r\n    FROM (\r\n        SELECT \r\n            T.PolicyId AS Poli");
            viewString.Append("cyLearnedFieldsHistory_PolicyId, \r\n            T.Insured AS PolicyLearnedFieldsH");
            viewString.Append("istory_Insured, \r\n            T.PolicyNumber AS PolicyLearnedFieldsHistory_Polic");
            viewString.Append("yNumber, \r\n            T.Effective AS PolicyLearnedFieldsHistory_Effective, \r\n  ");
            viewString.Append("          T.TrackFrom AS PolicyLearnedFieldsHistory_TrackFrom, \r\n            T.P");
            viewString.Append("AC AS PolicyLearnedFieldsHistory_PAC, \r\n            T.PMC AS PolicyLearnedFields");
            viewString.Append("History_PMC, \r\n            T.ModalAvgPremium AS PolicyLearnedFieldsHistory_Modal");
            viewString.Append("AvgPremium, \r\n            T.PolicyModeId AS PolicyLearnedFieldsHistory_PolicyMod");
            viewString.Append("eId, \r\n            T.Enrolled AS PolicyLearnedFieldsHistory_Enrolled, \r\n        ");
            viewString.Append("    T.Eligible AS PolicyLearnedFieldsHistory_Eligible, \r\n            T.AutoTermi");
            viewString.Append("nationDate AS PolicyLearnedFieldsHistory_AutoTerminationDate, \r\n            T.Li");
            viewString.Append("nk1 AS PolicyLearnedFieldsHistory_Link1, \r\n            T.LastModifiedOn AS Polic");
            viewString.Append("yLearnedFieldsHistory_LastModifiedOn, \r\n            T.LastModifiedUserCredential");
            viewString.Append("id AS PolicyLearnedFieldsHistory_LastModifiedUserCredentialid, \r\n            T.C");
            viewString.Append("lientID AS PolicyLearnedFieldsHistory_ClientID, \r\n            T.CompTypeID AS Po");
            viewString.Append("licyLearnedFieldsHistory_CompTypeID, \r\n            T.PayorSysID AS PolicyLearned");
            viewString.Append("FieldsHistory_PayorSysID, \r\n            T.Renewal AS PolicyLearnedFieldsHistory_");
            viewString.Append("Renewal, \r\n            T.SplitPercentage AS PolicyLearnedFieldsHistory_SplitPerc");
            viewString.Append("entage, \r\n            T.CompScheduleType AS PolicyLearnedFieldsHistory_CompSched");
            viewString.Append("uleType, \r\n            T.CarrierId AS PolicyLearnedFieldsHistory_CarrierId, \r\n  ");
            viewString.Append("          T.CoverageId AS PolicyLearnedFieldsHistory_CoverageId, \r\n            T");
            viewString.Append(".PayorId AS PolicyLearnedFieldsHistory_PayorId, \r\n            T.PreviousEffectiv");
            viewString.Append("eDate AS PolicyLearnedFieldsHistory_PreviousEffectiveDate, \r\n            T.Previ");
            viewString.Append("ousPolicyModeId AS PolicyLearnedFieldsHistory_PreviousPolicyModeId, \r\n          ");
            viewString.Append("  T.CarrierNickName AS PolicyLearnedFieldsHistory_CarrierNickName, \r\n           ");
            viewString.Append(" T.CoverageNickName AS PolicyLearnedFieldsHistory_CoverageNickName, \r\n          ");
            viewString.Append("  T.Advance AS PolicyLearnedFieldsHistory_Advance, \r\n            T.ProductType A");
            viewString.Append("S PolicyLearnedFieldsHistory_ProductType, \r\n            T.ImportPolicyID AS Poli");
            viewString.Append("cyLearnedFieldsHistory_ImportPolicyID, \r\n            True AS _from0\r\n        FRO");
            viewString.Append("M CommissionDepartmentEntities.PolicyLearnedFieldsHistories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyLearnedFieldsHistory", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.CoverageNickName
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.CoverageNickName", @"
    SELECT VALUE -- Constructing CoverageNickName
        [Model.Store.CoverageNickName](T1.CoverageNickName_CoverageNickID, T1.CoverageNickName_PayorId, T1.CoverageNickName_CarrierId, T1.CoverageNickName_CoverageId, T1.CoverageNickName_NickName, T1.CoverageNickName_CreatedBy, T1.CoverageNickName_ModifiedBy, T1.CoverageNickName_ModifiedOn, T1.CoverageNickName_IsDeleted, T1.CoverageNickName_CreatedOn)
    FROM (
        SELECT 
            T.CoverageNickID AS CoverageNickName_CoverageNickID, 
            T.PayorId AS CoverageNickName_PayorId, 
            T.CarrierId AS CoverageNickName_CarrierId, 
            T.CoverageId AS CoverageNickName_CoverageId, 
            T.NickName AS CoverageNickName_NickName, 
            T.CreatedBy AS CoverageNickName_CreatedBy, 
            T.ModifiedBy AS CoverageNickName_ModifiedBy, 
            T.ModifiedOn AS CoverageNickName_ModifiedOn, 
            T.IsDeleted AS CoverageNickName_IsDeleted, 
            T.CreatedOn AS CoverageNickName_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.CoverageNickNames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyOutgoingPayments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyOutgoingPayments", @"
    SELECT VALUE -- Constructing PolicyOutgoingPayments
        [Model.Store.PolicyOutgoingPayments](T1.PolicyOutgoingPayments_OutgoingPaymentId, T1.PolicyOutgoingPayments_PaymentEntryId, T1.PolicyOutgoingPayments_RecipientUserCredentialId, T1.PolicyOutgoingPayments_PaidAmount, T1.PolicyOutgoingPayments_CreatedOn, T1.PolicyOutgoingPayments_IsPaid, T1.PolicyOutgoingPayments_Premium, T1.PolicyOutgoingPayments_OutgoingPerUnit, T1.PolicyOutgoingPayments_Payment, T1.PolicyOutgoingPayments_ReverseOutgoingPaymentID)
    FROM (
        SELECT 
            T.OutgoingPaymentId AS PolicyOutgoingPayments_OutgoingPaymentId, 
            T.PaymentEntryId AS PolicyOutgoingPayments_PaymentEntryId, 
            T.RecipientUserCredentialId AS PolicyOutgoingPayments_RecipientUserCredentialId, 
            T.PaidAmount AS PolicyOutgoingPayments_PaidAmount, 
            T.CreatedOn AS PolicyOutgoingPayments_CreatedOn, 
            T.IsPaid AS PolicyOutgoingPayments_IsPaid, 
            T.Premium AS PolicyOutgoingPayments_Premium, 
            T.OutgoingPerUnit AS PolicyOutgoingPayments_OutgoingPerUnit, 
            T.Payment AS PolicyOutgoingPayments_Payment, 
            CAST(NULL AS [Edm.Guid]) AS PolicyOutgoingPayments_ReverseOutgoingPaymentID, 
            True AS _from0
        FROM CommissionDepartmentEntities.PolicyOutgoingPayments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.CarrierCoverage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.CarrierCoverage", @"
    SELECT VALUE -- Constructing CarrierCoverage
        [Model.Store.CarrierCoverage](T1.CarrierCoverage_CarrierId, T1.CarrierCoverage_CoverageId)
    FROM (
        SELECT 
            Key(T.Carriers).CarrierId AS CarrierCoverage_CarrierId, 
            Key(T.Coverages).CoverageId AS CarrierCoverage_CoverageId, 
            True AS _from0
        FROM CommissionDepartmentEntities.CarrierCoverage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LinkedAgent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LinkedAgent", @"
    SELECT VALUE -- Constructing LinkedAgent
        [Model.Store.LinkedAgent](T1.LinkedAgent_UserID, T1.LinkedAgent_UserConnectedID)
    FROM (
        SELECT 
            Key(T.UserCredentials1).UserCredentialId AS LinkedAgent_UserID, 
            Key(T.UserCredentials).UserCredentialId AS LinkedAgent_UserConnectedID, 
            True AS _from0
        FROM CommissionDepartmentEntities.LinkedAgent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Batches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Batches", @"
    SELECT VALUE -- Constructing Batches
        [Model.Batch](T1.Batch_BatchId, T1.Batch_BatchNumber, T1.Batch_LicenseeId, T1.Batch_CreatedOn, T1.Batch_FileType, T1.Batch_EntryStatusId, T1.Batch_AssignedUserCredentialId, T1.Batch_CreatedFromUpload, T1.Batch_UploadStatusId, T1.Batch_FileName, T1.Batch_LastModifiedDate, T1.Batch_IsManuallyUploaded, T1.Batch_SiteLoginID, T1.Batch_PayorId, T1.Batch_BatchNote)
    FROM (
        SELECT 
            T.BatchId AS Batch_BatchId, 
            T.BatchNumber AS Batch_BatchNumber, 
            T.LicenseeId AS Batch_LicenseeId, 
            T.CreatedOn AS Batch_CreatedOn, 
            T.FileType AS Batch_FileType, 
            T.EntryStatusId AS Batch_EntryStatusId, 
            T.AssignedUserCredentialId AS Batch_AssignedUserCredentialId, 
            T.CreatedFromUpload AS Batch_CreatedFromUpload, 
            T.UploadStatusId AS Batch_UploadStatusId, 
            T.FileName AS Batch_FileName, 
            T.LastModifiedDate AS Batch_LastModifiedDate, 
            T.IsManuallyUploaded AS Batch_IsManuallyUploaded, 
            T.SiteLoginID AS Batch_SiteLoginID, 
            T.PayorId AS Batch_PayorId, 
            T.BatchNote AS Batch_BatchNote, 
            True AS _from0
        FROM ModelStoreContainer.Batches AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.CarrierNickNames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.CarrierNickNames", @"
    SELECT VALUE -- Constructing CarrierNickNames
        [Model.CarrierNickName](T1.CarrierNickName_PayorId, T1.CarrierNickName_CarrierId, T1.CarrierNickName_NickName, T1.CarrierNickName_CreatedBy, T1.CarrierNickName_ModifiedBy, T1.CarrierNickName_ModifiedOn, T1.CarrierNickName_IsDeleted, T1.CarrierNickName_IsTrackMissingMonth, T1.CarrierNickName_IsTrackIncomingPercentage, T1.CarrierNickName_CreatedOn)
    FROM (
        SELECT 
            T.PayorId AS CarrierNickName_PayorId, 
            T.CarrierId AS CarrierNickName_CarrierId, 
            T.NickName AS CarrierNickName_NickName, 
            T.CreatedBy AS CarrierNickName_CreatedBy, 
            T.ModifiedBy AS CarrierNickName_ModifiedBy, 
            T.ModifiedOn AS CarrierNickName_ModifiedOn, 
            T.IsDeleted AS CarrierNickName_IsDeleted, 
            T.IsTrackMissingMonth AS CarrierNickName_IsTrackMissingMonth, 
            T.IsTrackIncomingPercentage AS CarrierNickName_IsTrackIncomingPercentage, 
            T.CreatedOn AS CarrierNickName_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.CarrierNickName AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Carriers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Carriers", @"
    SELECT VALUE -- Constructing Carriers
        [Model.Carrier](T1.Carrier_CarrierId, T1.Carrier_CarrierName, T1.Carrier_IsDeleted, T1.Carrier_IsGlobal, T1.Carrier_CreatedBy, T1.Carrier_LicenseeId, T1.Carrier_CreatedOn)
    FROM (
        SELECT 
            T.CarrierId AS Carrier_CarrierId, 
            T.CarrierName AS Carrier_CarrierName, 
            T.IsDeleted AS Carrier_IsDeleted, 
            T.IsGlobal AS Carrier_IsGlobal, 
            T.CreatedBy AS Carrier_CreatedBy, 
            T.LicenseeId AS Carrier_LicenseeId, 
            T.CreatedOn AS Carrier_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.Carriers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Clients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Clients", @"
    SELECT VALUE -- Constructing Clients
        [Model.Client](T1.Client_ClientId, T1.Client_LicenseeId, T1.Client_Name, T1.Client_Address, T1.Client_Zip, T1.Client_City, T1.Client_State, T1.Client_Email, T1.Client_IsDeleted, T1.Client_CreatedOn)
    FROM (
        SELECT 
            T.ClientId AS Client_ClientId, 
            T.LicenseeId AS Client_LicenseeId, 
            T.Name AS Client_Name, 
            T.Address AS Client_Address, 
            T.Zip AS Client_Zip, 
            T.City AS Client_City, 
            T.State AS Client_State, 
            T.Email AS Client_Email, 
            T.IsDeleted AS Client_IsDeleted, 
            T.CreatedOn AS Client_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.Clients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Coverages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Coverages", @"
    SELECT VALUE -- Constructing Coverages
        [Model.Coverage](T1.Coverage_CoverageId, T1.Coverage_ProductName, T1.Coverage_IsDeleted, T1.Coverage_IsGlobal, T1.Coverage_CreatedBy, T1.Coverage_LicenseeId, T1.Coverage_CreatedOn)
    FROM (
        SELECT 
            T.CoverageId AS Coverage_CoverageId, 
            T.ProductName AS Coverage_ProductName, 
            T.IsDeleted AS Coverage_IsDeleted, 
            T.IsGlobal AS Coverage_IsGlobal, 
            T.CreatedBy AS Coverage_CreatedBy, 
            T.LicenseeId AS Coverage_LicenseeId, 
            T.CreatedOn AS Coverage_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.Coverages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.EntriesByDEUs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3896);
            viewString.Append("\r\n    SELECT VALUE -- Constructing EntriesByDEUs\r\n        [Model.EntriesByDEU](T");
            viewString.Append("1.EntriesByDEU_DEUEntryID, T1.EntriesByDEU_OriginalEffectiveDate, T1.EntriesByDE");
            viewString.Append("U_PaymentReceived, T1.EntriesByDEU_CommissionPercentage, T1.EntriesByDEU_OtherDa");
            viewString.Append("ta, T1.EntriesByDEU_Insured, T1.EntriesByDEU_PolicyNumber, T1.EntriesByDEU_Enrol");
            viewString.Append("led, T1.EntriesByDEU_Eligible, T1.EntriesByDEU_Link1, T1.EntriesByDEU_SplitPer, ");
            viewString.Append("T1.EntriesByDEU_PolicyModeID, T1.EntriesByDEU_PolicyModeValue, T1.EntriesByDEU_T");
            viewString.Append("rackFromDate, T1.EntriesByDEU_CompTypeID, T1.EntriesByDEU_ClientID, T1.EntriesBy");
            viewString.Append("DEU_StatementID, T1.EntriesByDEU_PostStatusID, T1.EntriesByDEU_PolicyID, T1.Entr");
            viewString.Append("iesByDEU_InvoiceDate, T1.EntriesByDEU_PayorId, T1.EntriesByDEU_NumberOfUnits, T1");
            viewString.Append(".EntriesByDEU_DollerPerUnit, T1.EntriesByDEU_Fee, T1.EntriesByDEU_Bonus, T1.Entr");
            viewString.Append("iesByDEU_CommissionTotal, T1.EntriesByDEU_PayorSysID, T1.EntriesByDEU_Renewal, T");
            viewString.Append("1.EntriesByDEU_CarrierId, T1.EntriesByDEU_CoverageId, T1.EntriesByDEU_IsEntrybyC");
            viewString.Append("ommissiondashBoard, T1.EntriesByDEU_CreatedBy, T1.EntriesByDEU_PostCompleteStatu");
            viewString.Append("s, T1.EntriesByDEU_ModalAvgPremium, T1.EntriesByDEU_CompScheduleType, T1.Entries");
            viewString.Append("ByDEU_ClientValue, T1.EntriesByDEU_CarrierName, T1.EntriesByDEU_ProductName, T1.");
            viewString.Append("EntriesByDEU_EntryDate, T1.EntriesByDEU_UnlinkClientName, T1.EntriesByDEU_Covera");
            viewString.Append("geNickName, T1.EntriesByDEU_CarrierNickName)\r\n    FROM (\r\n        SELECT \r\n     ");
            viewString.Append("       T.DEUEntryID AS EntriesByDEU_DEUEntryID, \r\n            T.OriginalEffectiv");
            viewString.Append("eDate AS EntriesByDEU_OriginalEffectiveDate, \r\n            T.PaymentReceived AS ");
            viewString.Append("EntriesByDEU_PaymentReceived, \r\n            T.CommissionPercentage AS EntriesByD");
            viewString.Append("EU_CommissionPercentage, \r\n            T.OtherData AS EntriesByDEU_OtherData, \r\n");
            viewString.Append("            T.Insured AS EntriesByDEU_Insured, \r\n            T.PolicyNumber AS E");
            viewString.Append("ntriesByDEU_PolicyNumber, \r\n            T.Enrolled AS EntriesByDEU_Enrolled, \r\n ");
            viewString.Append("           T.Eligible AS EntriesByDEU_Eligible, \r\n            T.Link1 AS Entries");
            viewString.Append("ByDEU_Link1, \r\n            T.SplitPer AS EntriesByDEU_SplitPer, \r\n            T.");
            viewString.Append("PolicyModeID AS EntriesByDEU_PolicyModeID, \r\n            T.PolicyModeValue AS En");
            viewString.Append("triesByDEU_PolicyModeValue, \r\n            T.TrackFromDate AS EntriesByDEU_TrackF");
            viewString.Append("romDate, \r\n            T.CompTypeID AS EntriesByDEU_CompTypeID, \r\n            T.");
            viewString.Append("ClientID AS EntriesByDEU_ClientID, \r\n            T.StatementID AS EntriesByDEU_S");
            viewString.Append("tatementID, \r\n            T.PostStatusID AS EntriesByDEU_PostStatusID, \r\n       ");
            viewString.Append("     T.PolicyID AS EntriesByDEU_PolicyID, \r\n            T.InvoiceDate AS Entries");
            viewString.Append("ByDEU_InvoiceDate, \r\n            T.PayorId AS EntriesByDEU_PayorId, \r\n          ");
            viewString.Append("  T.NumberOfUnits AS EntriesByDEU_NumberOfUnits, \r\n            T.DollerPerUnit A");
            viewString.Append("S EntriesByDEU_DollerPerUnit, \r\n            T.Fee AS EntriesByDEU_Fee, \r\n       ");
            viewString.Append("     T.Bonus AS EntriesByDEU_Bonus, \r\n            T.CommissionTotal AS EntriesBy");
            viewString.Append("DEU_CommissionTotal, \r\n            T.PayorSysID AS EntriesByDEU_PayorSysID, \r\n  ");
            viewString.Append("          T.Renewal AS EntriesByDEU_Renewal, \r\n            T.CarrierId AS Entrie");
            viewString.Append("sByDEU_CarrierId, \r\n            T.CoverageId AS EntriesByDEU_CoverageId, \r\n     ");
            viewString.Append("       T.IsEntrybyCommissiondashBoard AS EntriesByDEU_IsEntrybyCommissiondashBoa");
            viewString.Append("rd, \r\n            T.CreatedBy AS EntriesByDEU_CreatedBy, \r\n            T.PostCom");
            viewString.Append("pleteStatus AS EntriesByDEU_PostCompleteStatus, \r\n            T.ModalAvgPremium ");
            viewString.Append("AS EntriesByDEU_ModalAvgPremium, \r\n            T.CompScheduleType AS EntriesByDE");
            viewString.Append("U_CompScheduleType, \r\n            T.ClientValue AS EntriesByDEU_ClientValue, \r\n ");
            viewString.Append("           T.CarrierName AS EntriesByDEU_CarrierName, \r\n            T.ProductNam");
            viewString.Append("e AS EntriesByDEU_ProductName, \r\n            T.EntryDate AS EntriesByDEU_EntryDa");
            viewString.Append("te, \r\n            T.UnlinkClientName AS EntriesByDEU_UnlinkClientName, \r\n       ");
            viewString.Append("     T.CoverageNickName AS EntriesByDEU_CoverageNickName, \r\n            T.Carrie");
            viewString.Append("rNickName AS EntriesByDEU_CarrierNickName, \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM ModelStoreContainer.EntriesByDEU AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.EntriesByDEUs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ExportBatchFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ExportBatchFiles", @"
    SELECT VALUE -- Constructing ExportBatchFiles
        [Model.ExportBatchFile](T1.ExportBatchFile_ExportBatchId, T1.ExportBatchFile_FileName, T1.ExportBatchFile_CreatedOn, T1.ExportBatchFile_IsFileImported, T1.ExportBatchFile_InvoiceDate)
    FROM (
        SELECT 
            T.ExportBatchId AS ExportBatchFile_ExportBatchId, 
            T.FileName AS ExportBatchFile_FileName, 
            T.CreatedOn AS ExportBatchFile_CreatedOn, 
            T.IsFileImported AS ExportBatchFile_IsFileImported, 
            T.InvoiceDate AS ExportBatchFile_InvoiceDate, 
            True AS _from0
        FROM ModelStoreContainer.ExportBatchFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.FieldMappings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.FieldMappings", @"
    SELECT VALUE -- Constructing FieldMappings
        [Model.FieldMapping](T1.FieldMapping_ID, T1.FieldMapping_ExcelFieldNo, T1.FieldMapping_DBFieldName, T1.FieldMapping_IsDeleted, T1.FieldMapping_PayorID, T1.FieldMapping_ExcelFieldName, T1.FieldMapping_ExcelFieldFormat)
    FROM (
        SELECT 
            T.ID AS FieldMapping_ID, 
            T.ExcelFieldNo AS FieldMapping_ExcelFieldNo, 
            T.DBFieldName AS FieldMapping_DBFieldName, 
            T.IsDeleted AS FieldMapping_IsDeleted, 
            T.PayorID AS FieldMapping_PayorID, 
            T.ExcelFieldName AS FieldMapping_ExcelFieldName, 
            T.ExcelFieldFormat AS FieldMapping_ExcelFieldFormat, 
            True AS _from0
        FROM ModelStoreContainer.FieldMapping AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Formulas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Formulas", @"
    SELECT VALUE -- Constructing Formulas
        [Model.Formula](T1.Formula_FormulaId, T1.Formula_FormulaTtitle, T1.Formula_FormulaExpression, T1.Formula_IsDeleted)
    FROM (
        SELECT 
            T.FormulaId AS Formula_FormulaId, 
            T.FormulaTtitle AS Formula_FormulaTtitle, 
            T.FormulaExpression AS Formula_FormulaExpression, 
            T.IsDeleted AS Formula_IsDeleted, 
            True AS _from0
        FROM ModelStoreContainer.Formulas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.GlobalCoveragesSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.GlobalCoveragesSchedules", @"
    SELECT VALUE -- Constructing GlobalCoveragesSchedules
        [Model.GlobalCoveragesSchedule](T1.GlobalCoveragesSchedule_CoveragesScheduleId, T1.GlobalCoveragesSchedule_CarrierId, T1.GlobalCoveragesSchedule_CoverageId, T1.GlobalCoveragesSchedule_ScheduleTypeId, T1.GlobalCoveragesSchedule_FromRange, T1.GlobalCoveragesSchedule_ToRange, T1.GlobalCoveragesSchedule_EffectiveFromDate, T1.GlobalCoveragesSchedule_EffectiveToDate, T1.GlobalCoveragesSchedule_Rate, T1.GlobalCoveragesSchedule_IsDeleted)
    FROM (
        SELECT 
            T.CoveragesScheduleId AS GlobalCoveragesSchedule_CoveragesScheduleId, 
            T.CarrierId AS GlobalCoveragesSchedule_CarrierId, 
            T.CoverageId AS GlobalCoveragesSchedule_CoverageId, 
            T.ScheduleTypeId AS GlobalCoveragesSchedule_ScheduleTypeId, 
            T.FromRange AS GlobalCoveragesSchedule_FromRange, 
            T.ToRange AS GlobalCoveragesSchedule_ToRange, 
            T.EffectiveFromDate AS GlobalCoveragesSchedule_EffectiveFromDate, 
            T.EffectiveToDate AS GlobalCoveragesSchedule_EffectiveToDate, 
            T.Rate AS GlobalCoveragesSchedule_Rate, 
            T.IsDeleted AS GlobalCoveragesSchedule_IsDeleted, 
            True AS _from0
        FROM ModelStoreContainer.GlobalCoveragesSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.GlobalPayorContacts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.GlobalPayorContacts", @"
    SELECT VALUE -- Constructing GlobalPayorContacts
        [Model.GlobalPayorContact](T1.GlobalPayorContact_PayorContactId, T1.GlobalPayorContact_GlobalPayorId, T1.GlobalPayorContact_FirstName, T1.GlobalPayorContact_LastName, T1.GlobalPayorContact_ZipCode, T1.GlobalPayorContact_city, T1.GlobalPayorContact_state, T1.GlobalPayorContact_email, T1.GlobalPayorContact_OfficePhone, T1.GlobalPayorContact_Fax, T1.GlobalPayorContact_Priority, T1.GlobalPayorContact_ContactPref, T1.GlobalPayorContact_IsDeleted)
    FROM (
        SELECT 
            T.PayorContactId AS GlobalPayorContact_PayorContactId, 
            T.GlobalPayorId AS GlobalPayorContact_GlobalPayorId, 
            T.FirstName AS GlobalPayorContact_FirstName, 
            T.LastName AS GlobalPayorContact_LastName, 
            T.ZipCode AS GlobalPayorContact_ZipCode, 
            T.city AS GlobalPayorContact_city, 
            T.state AS GlobalPayorContact_state, 
            T.email AS GlobalPayorContact_email, 
            T.OfficePhone AS GlobalPayorContact_OfficePhone, 
            T.Fax AS GlobalPayorContact_Fax, 
            T.Priority AS GlobalPayorContact_Priority, 
            T.ContactPref AS GlobalPayorContact_ContactPref, 
            T.IsDeleted AS GlobalPayorContact_IsDeleted, 
            True AS _from0
        FROM ModelStoreContainer.GlobalPayorContacts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.GlobalPayorDefaults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.GlobalPayorDefaults", "\r\n    SELECT VALUE -- Constructing GlobalPayorDefaults\r\n        [Model.GlobalPayo" +
                    "rDefault](T1.GlobalPayorDefault_PayorDefaultSettingsId, T1.GlobalPayorDefault_Gl" +
                    "obalPayorId, T1.GlobalPayorDefault_FirstPaymentOnRow, T1.GlobalPayorDefault_Fiel" +
                    "dNamesRow, T1.GlobalPayorDefault_IsTotalExists, T1.GlobalPayorDefault_LocationCo" +
                    "lumn, T1.GlobalPayorDefault_LocationRow, T1.GlobalPayorDefault_FileTypeId, T1.Gl" +
                    "obalPayorDefault_WebSiteUrl, T1.GlobalPayorDefault_NavigationInstructions, T1.Gl" +
                    "obalPayorDefault_LoginControl, T1.GlobalPayorDefault_PasswordControl)\r\n    FROM " +
                    "(\r\n        SELECT \r\n            T.PayorDefaultSettingsId AS GlobalPayorDefault_P" +
                    "ayorDefaultSettingsId, \r\n            T.GlobalPayorId AS GlobalPayorDefault_Globa" +
                    "lPayorId, \r\n            T.FirstPaymentOnRow AS GlobalPayorDefault_FirstPaymentOn" +
                    "Row, \r\n            T.FieldNamesRow AS GlobalPayorDefault_FieldNamesRow, \r\n      " +
                    "      T.IsTotalExists AS GlobalPayorDefault_IsTotalExists, \r\n            T.Locat" +
                    "ionColumn AS GlobalPayorDefault_LocationColumn, \r\n            T.LocationRow AS G" +
                    "lobalPayorDefault_LocationRow, \r\n            T.FileTypeId AS GlobalPayorDefault_" +
                    "FileTypeId, \r\n            T.WebSiteUrl AS GlobalPayorDefault_WebSiteUrl, \r\n     " +
                    "       T.NavigationInstructions AS GlobalPayorDefault_NavigationInstructions, \r\n" +
                    "            T.LoginControl AS GlobalPayorDefault_LoginControl, \r\n            T.P" +
                    "asswordControl AS GlobalPayorDefault_PasswordControl, \r\n            True AS _fro" +
                    "m0\r\n        FROM ModelStoreContainer.GlobalPayorDefaults AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.GlobalPayorStatementDates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.GlobalPayorStatementDates", @"
    SELECT VALUE -- Constructing GlobalPayorStatementDates
        [Model.GlobalPayorStatementDate](T1.GlobalPayorStatementDate_PayorStatementDateID, T1.GlobalPayorStatementDate_PayorID, T1.GlobalPayorStatementDate_StatementDate, T1.GlobalPayorStatementDate_IsBatchCreated)
    FROM (
        SELECT 
            T.PayorStatementDateID AS GlobalPayorStatementDate_PayorStatementDateID, 
            T.PayorID AS GlobalPayorStatementDate_PayorID, 
            T.StatementDate AS GlobalPayorStatementDate_StatementDate, 
            T.IsBatchCreated AS GlobalPayorStatementDate_IsBatchCreated, 
            True AS _from0
        FROM ModelStoreContainer.GlobalPayorStatementDate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportBatchFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportBatchFiles", @"
    SELECT VALUE -- Constructing ImportBatchFiles
        [Model.ImportBatchFile](T1.ImportBatchFile_ImportBatchId, T1.ImportBatchFile_FileName, T1.ImportBatchFile_CreatedOn)
    FROM (
        SELECT 
            T.ImportBatchId AS ImportBatchFile_ImportBatchId, 
            T.FileName AS ImportBatchFile_FileName, 
            T.CreatedOn AS ImportBatchFile_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.ImportBatchFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.InvoiceBillingLineDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.InvoiceBillingLineDetails", "\r\n    SELECT VALUE -- Constructing InvoiceBillingLineDetails\r\n        [Model.Invo" +
                    "iceBillingLineDetail](T1.InvoiceBillingLineDetail_BillingLineId, T1.InvoiceBilli" +
                    "ngLineDetail_InvoiceId, T1.InvoiceBillingLineDetail_ServiceId, T1.InvoiceBilling" +
                    "LineDetail_ConsumedUnit, T1.InvoiceBillingLineDetail_ChargedAmount, T1.InvoiceBi" +
                    "llingLineDetail_Min, T1.InvoiceBillingLineDetail_Range1, T1.InvoiceBillingLineDe" +
                    "tail_Range2, T1.InvoiceBillingLineDetail_Rate, T1.InvoiceBillingLineDetail_Disco" +
                    "unt, T1.InvoiceBillingLineDetail_StartDate, T1.InvoiceBillingLineDetail_EndDate," +
                    " T1.InvoiceBillingLineDetail_Tax, T1.InvoiceBillingLineDetail_ServiceChargeTypeI" +
                    "d)\r\n    FROM (\r\n        SELECT \r\n            T.BillingLineId AS InvoiceBillingLi" +
                    "neDetail_BillingLineId, \r\n            T.InvoiceId AS InvoiceBillingLineDetail_In" +
                    "voiceId, \r\n            T.ServiceId AS InvoiceBillingLineDetail_ServiceId, \r\n    " +
                    "        T.ConsumedUnit AS InvoiceBillingLineDetail_ConsumedUnit, \r\n            T" +
                    ".ChargedAmount AS InvoiceBillingLineDetail_ChargedAmount, \r\n            T.Min AS" +
                    " InvoiceBillingLineDetail_Min, \r\n            T.Range1 AS InvoiceBillingLineDetai" +
                    "l_Range1, \r\n            T.Range2 AS InvoiceBillingLineDetail_Range2, \r\n         " +
                    "   T.Rate AS InvoiceBillingLineDetail_Rate, \r\n            T.Discount AS InvoiceB" +
                    "illingLineDetail_Discount, \r\n            T.StartDate AS InvoiceBillingLineDetail" +
                    "_StartDate, \r\n            T.EndDate AS InvoiceBillingLineDetail_EndDate, \r\n     " +
                    "       T.Tax AS InvoiceBillingLineDetail_Tax, \r\n            T.ServiceChargeTypeI" +
                    "d AS InvoiceBillingLineDetail_ServiceChargeTypeId, \r\n            True AS _from0\r" +
                    "\n        FROM ModelStoreContainer.InvoiceBillingLineDetail AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Invoices", @"
    SELECT VALUE -- Constructing Invoices
        [Model.Invoice](T1.Invoice_InvoiceId, T1.Invoice_LicenseeId, T1.Invoice_BillingStartDate, T1.Invoice_BillingDate, T1.Invoice_InvoiceAmount, T1.Invoice_DueBalance, T1.Invoice_InvoiceGeneratedOn, T1.Invoice_ExportBatchId, T1.Invoice_BillingEndDate)
    FROM (
        SELECT 
            T.InvoiceId AS Invoice_InvoiceId, 
            T.LicenseeId AS Invoice_LicenseeId, 
            T.BillingStartDate AS Invoice_BillingStartDate, 
            T.BillingDate AS Invoice_BillingDate, 
            T.InvoiceAmount AS Invoice_InvoiceAmount, 
            T.DueBalance AS Invoice_DueBalance, 
            T.InvoiceGeneratedOn AS Invoice_InvoiceGeneratedOn, 
            T.ExportBatchId AS Invoice_ExportBatchId, 
            T.BillingEndDate AS Invoice_BillingEndDate, 
            True AS _from0
        FROM ModelStoreContainer.Invoices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.IssuedFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.IssuedFiles", @"
    SELECT VALUE -- Constructing IssuedFiles
        [Model.IssuedFile](T1.IssuedFile_PayorID, T1.IssuedFile_FileName)
    FROM (
        SELECT 
            T.PayorID AS IssuedFile_PayorID, 
            T.FileName AS IssuedFile_FileName, 
            True AS _from0
        FROM ModelStoreContainer.IssuedFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Journals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Journals", @"
    SELECT VALUE -- Constructing Journals
        [Model.Journal](T1.Journal_JournalId, T1.Journal_InvoiceId, T1.Journal_ImportBatchId, T1.Journal_TransactionId, T1.Journal_ReceivedDate, T1.Journal_BillingEndDate, T1.Journal_TypeOfEntry, T1.Journal_JournalAmount, T1.Journal_TransactionDateTime, T1.Journal_CreatedOn, T1.Journal_ModifiedOn, T1.Journal_IsManuallEntry, T1.Journal_LicenseeId, T1.Journal_PaymentStatus)
    FROM (
        SELECT 
            T.JournalId AS Journal_JournalId, 
            T.InvoiceId AS Journal_InvoiceId, 
            T.ImportBatchId AS Journal_ImportBatchId, 
            T.TransactionId AS Journal_TransactionId, 
            T.ReceivedDate AS Journal_ReceivedDate, 
            T.BillingEndDate AS Journal_BillingEndDate, 
            T.TypeOfEntry AS Journal_TypeOfEntry, 
            T.JournalAmount AS Journal_JournalAmount, 
            T.TransactionDateTime AS Journal_TransactionDateTime, 
            T.CreatedOn AS Journal_CreatedOn, 
            T.ModifiedOn AS Journal_ModifiedOn, 
            T.IsManuallEntry AS Journal_IsManuallEntry, 
            T.LicenseeId AS Journal_LicenseeId, 
            T.PaymentStatus AS Journal_PaymentStatus, 
            True AS _from0
        FROM ModelStoreContainer.Journals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LastPolicyVieweds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LastPolicyVieweds", @"
    SELECT VALUE -- Constructing LastPolicyVieweds
        [Model.LastPolicyViewed](T1.LastPolicyViewed_ID, T1.LastPolicyViewed_UserCredentialId, T1.LastPolicyViewed_Clientid, T1.LastPolicyViewed_SNo, T1.LastPolicyViewed_PolicyId)
    FROM (
        SELECT 
            T.ID AS LastPolicyViewed_ID, 
            T.UserCredentialId AS LastPolicyViewed_UserCredentialId, 
            T.Clientid AS LastPolicyViewed_Clientid, 
            T.SNo AS LastPolicyViewed_SNo, 
            T.PolicyId AS LastPolicyViewed_PolicyId, 
            True AS _from0
        FROM ModelStoreContainer.LastPolicyViewed AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LicenseeNotes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LicenseeNotes", @"
    SELECT VALUE -- Constructing LicenseeNotes
        [Model.LicenseeNote](T1.LicenseeNote_LicenseeNoteId, T1.LicenseeNote_LicenseeId, T1.LicenseeNote_Note, T1.LicenseeNote_CreatedDate, T1.LicenseeNote_LastModifiedDate)
    FROM (
        SELECT 
            T.LicenseeNoteId AS LicenseeNote_LicenseeNoteId, 
            T.LicenseeId AS LicenseeNote_LicenseeId, 
            T.Note AS LicenseeNote_Note, 
            T.CreatedDate AS LicenseeNote_CreatedDate, 
            T.LastModifiedDate AS LicenseeNote_LastModifiedDate, 
            True AS _from0
        FROM ModelStoreContainer.LicenseeNotes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LicenseePayors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LicenseePayors", @"
    SELECT VALUE -- Constructing LicenseePayors
        [Model.LicenseePayor](T1.LicenseePayor_LicenseePayorId, T1.LicenseePayor_PayorId, T1.LicenseePayor_LicenseeId, T1.LicenseePayor_SourceTypeId, T1.LicenseePayor_IsDeleted)
    FROM (
        SELECT 
            T.LicenseePayorId AS LicenseePayor_LicenseePayorId, 
            T.PayorId AS LicenseePayor_PayorId, 
            T.LicenseeId AS LicenseePayor_LicenseeId, 
            T.SourceTypeId AS LicenseePayor_SourceTypeId, 
            T.IsDeleted AS LicenseePayor_IsDeleted, 
            True AS _from0
        FROM ModelStoreContainer.LicenseePayors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Licensees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2259);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Licensees\r\n        [Model.Licensee](T1.Licens");
            viewString.Append("ee_LicenseeId, T1.Licensee_LicenseStatusId, T1.Licensee_Company, T1.Licensee_Con");
            viewString.Append("tactFirst, T1.Licensee_ContactLast, T1.Licensee_Address1, T1.Licensee_Address2, ");
            viewString.Append("T1.Licensee_City, T1.Licensee_State, T1.Licensee_ZipCode, T1.Licensee_Phone, T1.");
            viewString.Append("Licensee_Fax, T1.Licensee_Email, T1.Licensee_LicensePaymentModeId, T1.Licensee_A");
            viewString.Append("ccountCode, T1.Licensee_LicenseeSource, T1.Licensee_Commissionable, T1.Licensee_");
            viewString.Append("TrackDateDefault, T1.Licensee_TaxRate, T1.Licensee_CutOffDay1, T1.Licensee_CutOf");
            viewString.Append("fDay2, T1.Licensee_LastLogin, T1.Licensee_LastUpload, T1.Licensee_IsDeleted, T1.");
            viewString.Append("Licensee_DueBalance, T1.Licensee_UserName, T1.Licensee_Password, T1.Licensee_IsC");
            viewString.Append("lientEnable)\r\n    FROM (\r\n        SELECT \r\n            T.LicenseeId AS Licensee_");
            viewString.Append("LicenseeId, \r\n            T.LicenseStatusId AS Licensee_LicenseStatusId, \r\n     ");
            viewString.Append("       T.Company AS Licensee_Company, \r\n            T.ContactFirst AS Licensee_C");
            viewString.Append("ontactFirst, \r\n            T.ContactLast AS Licensee_ContactLast, \r\n            ");
            viewString.Append("T.Address1 AS Licensee_Address1, \r\n            T.Address2 AS Licensee_Address2, ");
            viewString.Append("\r\n            T.City AS Licensee_City, \r\n            T.State AS Licensee_State, ");
            viewString.Append("\r\n            T.ZipCode AS Licensee_ZipCode, \r\n            T.Phone AS Licensee_P");
            viewString.Append("hone, \r\n            T.Fax AS Licensee_Fax, \r\n            T.Email AS Licensee_Ema");
            viewString.Append("il, \r\n            T.LicensePaymentModeId AS Licensee_LicensePaymentModeId, \r\n   ");
            viewString.Append("         T.AccountCode AS Licensee_AccountCode, \r\n            T.LicenseeSource A");
            viewString.Append("S Licensee_LicenseeSource, \r\n            T.Commissionable AS Licensee_Commission");
            viewString.Append("able, \r\n            T.TrackDateDefault AS Licensee_TrackDateDefault, \r\n         ");
            viewString.Append("   T.TaxRate AS Licensee_TaxRate, \r\n            T.CutOffDay1 AS Licensee_CutOffD");
            viewString.Append("ay1, \r\n            T.CutOffDay2 AS Licensee_CutOffDay2, \r\n            T.LastLogi");
            viewString.Append("n AS Licensee_LastLogin, \r\n            T.LastUpload AS Licensee_LastUpload, \r\n  ");
            viewString.Append("          T.IsDeleted AS Licensee_IsDeleted, \r\n            T.DueBalance AS Licen");
            viewString.Append("see_DueBalance, \r\n            T.UserName AS Licensee_UserName, \r\n            T.P");
            viewString.Append("assword AS Licensee_Password, \r\n            T.IsClientEnable AS Licensee_IsClien");
            viewString.Append("tEnable, \r\n            True AS _from0\r\n        FROM ModelStoreContainer.Licensee");
            viewString.Append("s AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Licensees", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LicenseeServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LicenseeServices", @"
    SELECT VALUE -- Constructing LicenseeServices
        [Model.LicenseeService](T1.LicenseeService_LicenseeServiceId, T1.LicenseeService_LicenseeId, T1.LicenseeService_ServiceId)
    FROM (
        SELECT 
            T.LicenseeServiceId AS LicenseeService_LicenseeServiceId, 
            T.LicenseeId AS LicenseeService_LicenseeId, 
            T.ServiceId AS LicenseeService_ServiceId, 
            True AS _from0
        FROM ModelStoreContainer.LicenseeServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterAccessRights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterAccessRights", @"
    SELECT VALUE -- Constructing MasterAccessRights
        [Model.MasterAccessRight](T1.MasterAccessRight_AccessRightId, T1.MasterAccessRight_Name, T1.MasterAccessRight_Description)
    FROM (
        SELECT 
            T.AccessRightId AS MasterAccessRight_AccessRightId, 
            T.Name AS MasterAccessRight_Name, 
            T.Description AS MasterAccessRight_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterAccessRights AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterBasicOutgoingSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterBasicOutgoingSchedules", @"
    SELECT VALUE -- Constructing MasterBasicOutgoingSchedules
        [Model.MasterBasicOutgoingSchedule](T1.MasterBasicOutgoingSchedule_ScheduleId, T1.MasterBasicOutgoingSchedule_Name, T1.MasterBasicOutgoingSchedule_Description)
    FROM (
        SELECT 
            T.ScheduleId AS MasterBasicOutgoingSchedule_ScheduleId, 
            T.Name AS MasterBasicOutgoingSchedule_Name, 
            T.Description AS MasterBasicOutgoingSchedule_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterBasicOutgoingSchedule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterBatchEntryStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterBatchEntryStatus", @"
    SELECT VALUE -- Constructing MasterBatchEntryStatus
        [Model.MasterBatchEntryStatu](T1.MasterBatchEntryStatu_BatchEntryStatusId, T1.MasterBatchEntryStatu_Name, T1.MasterBatchEntryStatu_Description)
    FROM (
        SELECT 
            T.BatchEntryStatusId AS MasterBatchEntryStatu_BatchEntryStatusId, 
            T.Name AS MasterBatchEntryStatu_Name, 
            T.Description AS MasterBatchEntryStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterBatchEntryStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterBatchUploadStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterBatchUploadStatus", @"
    SELECT VALUE -- Constructing MasterBatchUploadStatus
        [Model.MasterBatchUploadStatu](T1.MasterBatchUploadStatu_BatchUploadStatusId, T1.MasterBatchUploadStatu_Name)
    FROM (
        SELECT 
            T.BatchUploadStatusId AS MasterBatchUploadStatu_BatchUploadStatusId, 
            T.Name AS MasterBatchUploadStatu_Name, 
            True AS _from0
        FROM ModelStoreContainer.MasterBatchUploadStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterFileTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterFileTypes", @"
    SELECT VALUE -- Constructing MasterFileTypes
        [Model.MasterFileType](T1.MasterFileType_FileTypeId, T1.MasterFileType_Name, T1.MasterFileType_Description)
    FROM (
        SELECT 
            T.FileTypeId AS MasterFileType_FileTypeId, 
            T.Name AS MasterFileType_Name, 
            T.Description AS MasterFileType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterFileTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterIncomingPaymentTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterIncomingPaymentTypes", @"
    SELECT VALUE -- Constructing MasterIncomingPaymentTypes
        [Model.MasterIncomingPaymentType](T1.MasterIncomingPaymentType_IncomingPaymentTypeId, T1.MasterIncomingPaymentType_Name, T1.MasterIncomingPaymentType_Description)
    FROM (
        SELECT 
            T.IncomingPaymentTypeId AS MasterIncomingPaymentType_IncomingPaymentTypeId, 
            T.Name AS MasterIncomingPaymentType_Name, 
            T.Description AS MasterIncomingPaymentType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterIncomingPaymentTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterLicensePaymentModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterLicensePaymentModes", @"
    SELECT VALUE -- Constructing MasterLicensePaymentModes
        [Model.MasterLicensePaymentMode](T1.MasterLicensePaymentMode_LicensePaymentModeId, T1.MasterLicensePaymentMode_Name, T1.MasterLicensePaymentMode_Description)
    FROM (
        SELECT 
            T.LicensePaymentModeId AS MasterLicensePaymentMode_LicensePaymentModeId, 
            T.Name AS MasterLicensePaymentMode_Name, 
            T.Description AS MasterLicensePaymentMode_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterLicensePaymentModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterLicenseStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterLicenseStatus", @"
    SELECT VALUE -- Constructing MasterLicenseStatus
        [Model.MasterLicenseStatu](T1.MasterLicenseStatu_LicenseStatusId, T1.MasterLicenseStatu_Name, T1.MasterLicenseStatu_Description)
    FROM (
        SELECT 
            T.LicenseStatusId AS MasterLicenseStatu_LicenseStatusId, 
            T.Name AS MasterLicenseStatu_Name, 
            T.Description AS MasterLicenseStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterLicenseStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterModules", @"
    SELECT VALUE -- Constructing MasterModules
        [Model.MasterModule](T1.MasterModule_ModuleId, T1.MasterModule_Name, T1.MasterModule_Description)
    FROM (
        SELECT 
            T.ModuleId AS MasterModule_ModuleId, 
            T.Name AS MasterModule_Name, 
            T.Description AS MasterModule_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorRegions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorRegions", @"
    SELECT VALUE -- Constructing MasterPayorRegions
        [Model.MasterPayorRegion](T1.MasterPayorRegion_PayorRegionId, T1.MasterPayorRegion_Name, T1.MasterPayorRegion_Description, T1.MasterPayorRegion_SortOrder)
    FROM (
        SELECT 
            T.PayorRegionId AS MasterPayorRegion_PayorRegionId, 
            T.Name AS MasterPayorRegion_Name, 
            T.Description AS MasterPayorRegion_Description, 
            T.SortOrder AS MasterPayorRegion_SortOrder, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorRegions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorToolAvailableFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2910);
            viewString.Append("\r\n    SELECT VALUE -- Constructing MasterPayorToolAvailableFields\r\n        [Mode");
            viewString.Append("l.MasterPayorToolAvailableField](T1.MasterPayorToolAvailableField_PTAvailableFie");
            viewString.Append("ldId, T1.MasterPayorToolAvailableField_Name, T1.MasterPayorToolAvailableField_De");
            viewString.Append("scription, T1.MasterPayorToolAvailableField_LabelOnImage, T1.MasterPayorToolAvai");
            viewString.Append("lableField_FieldStatus, T1.MasterPayorToolAvailableField_FieldOrder, T1.MasterPa");
            viewString.Append("yorToolAvailableField_IsPartOfPrimary, T1.MasterPayorToolAvailableField_IsPopula");
            viewString.Append("tedIfLinked, T1.MasterPayorToolAvailableField_IsTabbedToNextFieldIfLinked, T1.Ma");
            viewString.Append("sterPayorToolAvailableField_IsCalculatedField, T1.MasterPayorToolAvailableField_");
            viewString.Append("IsOverrideOfCalcAllowed, T1.MasterPayorToolAvailableField_DefaultNumeric, T1.Mas");
            viewString.Append("terPayorToolAvailableField_IsOorBlankAllowed, T1.MasterPayorToolAvailableField_A");
            viewString.Append("llignedDirection, T1.MasterPayorToolAvailableField_EquivalentIncomingField, T1.M");
            viewString.Append("asterPayorToolAvailableField_EquivalentLearnedField, T1.MasterPayorToolAvailable");
            viewString.Append("Field_EquivalentDeuField, T1.MasterPayorToolAvailableField_HelpText, T1.MasterPa");
            viewString.Append("yorToolAvailableField_IsDeleted, T1.MasterPayorToolAvailableField_IsDeletable)\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.PTAvailableFieldId AS MasterPayorTool");
            viewString.Append("AvailableField_PTAvailableFieldId, \r\n            T.Name AS MasterPayorToolAvaila");
            viewString.Append("bleField_Name, \r\n            T.Description AS MasterPayorToolAvailableField_Desc");
            viewString.Append("ription, \r\n            T.LabelOnImage AS MasterPayorToolAvailableField_LabelOnIm");
            viewString.Append("age, \r\n            T.FieldStatus AS MasterPayorToolAvailableField_FieldStatus, \r");
            viewString.Append("\n            T.FieldOrder AS MasterPayorToolAvailableField_FieldOrder, \r\n       ");
            viewString.Append("     T.IsPartOfPrimary AS MasterPayorToolAvailableField_IsPartOfPrimary, \r\n     ");
            viewString.Append("       T.IsPopulatedIfLinked AS MasterPayorToolAvailableField_IsPopulatedIfLinke");
            viewString.Append("d, \r\n            T.IsTabbedToNextFieldIfLinked AS MasterPayorToolAvailableField_");
            viewString.Append("IsTabbedToNextFieldIfLinked, \r\n            T.IsCalculatedField AS MasterPayorToo");
            viewString.Append("lAvailableField_IsCalculatedField, \r\n            T.IsOverrideOfCalcAllowed AS Ma");
            viewString.Append("sterPayorToolAvailableField_IsOverrideOfCalcAllowed, \r\n            T.DefaultNume");
            viewString.Append("ric AS MasterPayorToolAvailableField_DefaultNumeric, \r\n            T.IsOorBlankA");
            viewString.Append("llowed AS MasterPayorToolAvailableField_IsOorBlankAllowed, \r\n            T.Allig");
            viewString.Append("nedDirection AS MasterPayorToolAvailableField_AllignedDirection, \r\n            T");
            viewString.Append(".EquivalentIncomingField AS MasterPayorToolAvailableField_EquivalentIncomingFiel");
            viewString.Append("d, \r\n            T.EquivalentLearnedField AS MasterPayorToolAvailableField_Equiv");
            viewString.Append("alentLearnedField, \r\n            T.EquivalentDeuField AS MasterPayorToolAvailabl");
            viewString.Append("eField_EquivalentDeuField, \r\n            T.HelpText AS MasterPayorToolAvailableF");
            viewString.Append("ield_HelpText, \r\n            T.IsDeleted AS MasterPayorToolAvailableField_IsDele");
            viewString.Append("ted, \r\n            T.IsDeletable AS MasterPayorToolAvailableField_IsDeletable, \r");
            viewString.Append("\n            True AS _from0\r\n        FROM ModelStoreContainer.MasterPayorToolAva");
            viewString.Append("ilableFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorToolAvailableFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorToolMaskFieldTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorToolMaskFieldTypes", @"
    SELECT VALUE -- Constructing MasterPayorToolMaskFieldTypes
        [Model.MasterPayorToolMaskFieldType](T1.MasterPayorToolMaskFieldType_PTMaskFieldTypeId, T1.MasterPayorToolMaskFieldType_Name, T1.MasterPayorToolMaskFieldType_Description, T1.MasterPayorToolMaskFieldType_Type)
    FROM (
        SELECT 
            T.PTMaskFieldTypeId AS MasterPayorToolMaskFieldType_PTMaskFieldTypeId, 
            T.Name AS MasterPayorToolMaskFieldType_Name, 
            T.Description AS MasterPayorToolMaskFieldType_Description, 
            T.Type AS MasterPayorToolMaskFieldType_Type, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorToolMaskFieldTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPolicyModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPolicyModes", @"
    SELECT VALUE -- Constructing MasterPolicyModes
        [Model.MasterPolicyMode](T1.MasterPolicyMode_PolicyModeId, T1.MasterPolicyMode_Name, T1.MasterPolicyMode_Description)
    FROM (
        SELECT 
            T.PolicyModeId AS MasterPolicyMode_PolicyModeId, 
            T.Name AS MasterPolicyMode_Name, 
            T.Description AS MasterPolicyMode_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPolicyModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPolicyStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPolicyStatus", @"
    SELECT VALUE -- Constructing MasterPolicyStatus
        [Model.MasterPolicyStatu](T1.MasterPolicyStatu_PolicyStatusId, T1.MasterPolicyStatu_Name, T1.MasterPolicyStatu_Description)
    FROM (
        SELECT 
            T.PolicyStatusId AS MasterPolicyStatu_PolicyStatusId, 
            T.Name AS MasterPolicyStatu_Name, 
            T.Description AS MasterPolicyStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPolicyStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPolicyTerminationReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPolicyTerminationReasons", @"
    SELECT VALUE -- Constructing MasterPolicyTerminationReasons
        [Model.MasterPolicyTerminationReason](T1.MasterPolicyTerminationReason_PTReasonId, T1.MasterPolicyTerminationReason_Name, T1.MasterPolicyTerminationReason_Description)
    FROM (
        SELECT 
            T.PTReasonId AS MasterPolicyTerminationReason_PTReasonId, 
            T.Name AS MasterPolicyTerminationReason_Name, 
            T.Description AS MasterPolicyTerminationReason_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPolicyTerminationReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPostStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPostStatus", @"
    SELECT VALUE -- Constructing MasterPostStatus
        [Model.MasterPostStatu](T1.MasterPostStatu_PostStatusID, T1.MasterPostStatu_Name)
    FROM (
        SELECT 
            T.PostStatusID AS MasterPostStatu_PostStatusID, 
            T.Name AS MasterPostStatu_Name, 
            True AS _from0
        FROM ModelStoreContainer.MasterPostStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterRoles", @"
    SELECT VALUE -- Constructing MasterRoles
        [Model.MasterRole](T1.MasterRole_RoleId, T1.MasterRole_Name, T1.MasterRole_Description)
    FROM (
        SELECT 
            T.RoleId AS MasterRole_RoleId, 
            T.Name AS MasterRole_Name, 
            T.Description AS MasterRole_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterScheduleTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterScheduleTypes", @"
    SELECT VALUE -- Constructing MasterScheduleTypes
        [Model.MasterScheduleType](T1.MasterScheduleType_ScheduleTypeId, T1.MasterScheduleType_Name, T1.MasterScheduleType_Description)
    FROM (
        SELECT 
            T.ScheduleTypeId AS MasterScheduleType_ScheduleTypeId, 
            T.Name AS MasterScheduleType_Name, 
            T.Description AS MasterScheduleType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterScheduleTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterServiceChargeTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterServiceChargeTypes", @"
    SELECT VALUE -- Constructing MasterServiceChargeTypes
        [Model.MasterServiceChargeType](T1.MasterServiceChargeType_SCTypeId, T1.MasterServiceChargeType_Name, T1.MasterServiceChargeType_Description)
    FROM (
        SELECT 
            T.SCTypeId AS MasterServiceChargeType_SCTypeId, 
            T.Name AS MasterServiceChargeType_Name, 
            T.Description AS MasterServiceChargeType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterServiceChargeTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterServices", @"
    SELECT VALUE -- Constructing MasterServices
        [Model.MasterService](T1.MasterService_ServiceId, T1.MasterService_ServiceName, T1.MasterService_Description)
    FROM (
        SELECT 
            T.ServiceId AS MasterService_ServiceId, 
            T.ServiceName AS MasterService_ServiceName, 
            T.Description AS MasterService_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterSourceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterSourceTypes", @"
    SELECT VALUE -- Constructing MasterSourceTypes
        [Model.MasterSourceType](T1.MasterSourceType_SourceTypeId, T1.MasterSourceType_Name, T1.MasterSourceType_Description)
    FROM (
        SELECT 
            T.SourceTypeId AS MasterSourceType_SourceTypeId, 
            T.Name AS MasterSourceType_Name, 
            T.Description AS MasterSourceType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterSourceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterStatementStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterStatementStatus", @"
    SELECT VALUE -- Constructing MasterStatementStatus
        [Model.MasterStatementStatu](T1.MasterStatementStatu_StatementStatusId, T1.MasterStatementStatu_Name, T1.MasterStatementStatu_Description)
    FROM (
        SELECT 
            T.StatementStatusId AS MasterStatementStatu_StatementStatusId, 
            T.Name AS MasterStatementStatu_Name, 
            T.Description AS MasterStatementStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterStatementStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Payors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Payors", @"
    SELECT VALUE -- Constructing Payors
        [Model.Payor](T1.Payor_PayorId, T1.Payor_PayorName, T1.Payor_PayorRegionId, T1.Payor_PayorTypeId, T1.Payor_PayorStatusId, T1.Payor_IsDeleted, T1.Payor_IsGlobal, T1.Payor_SourceID, T1.Payor_CreatedBy, T1.Payor_NickName, T1.Payor_LicenseeId, T1.Payor_CreatedOn)
    FROM (
        SELECT 
            T.PayorId AS Payor_PayorId, 
            T.PayorName AS Payor_PayorName, 
            T.PayorRegionId AS Payor_PayorRegionId, 
            T.PayorTypeId AS Payor_PayorTypeId, 
            T.PayorStatusId AS Payor_PayorStatusId, 
            T.IsDeleted AS Payor_IsDeleted, 
            T.IsGlobal AS Payor_IsGlobal, 
            T.SourceID AS Payor_SourceID, 
            T.CreatedBy AS Payor_CreatedBy, 
            T.NickName AS Payor_NickName, 
            T.LicenseeId AS Payor_LicenseeId, 
            T.CreatedOn AS Payor_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.Payors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PayorSiteLoginInfoes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PayorSiteLoginInfoes", @"
    SELECT VALUE -- Constructing PayorSiteLoginInfoes
        [Model.PayorSiteLoginInfo](T1.PayorSiteLoginInfo_SiteLoginID, T1.PayorSiteLoginInfo_PayorID, T1.PayorSiteLoginInfo_Login, T1.PayorSiteLoginInfo_Password, T1.PayorSiteLoginInfo_LicenseeId)
    FROM (
        SELECT 
            T.SiteLoginID AS PayorSiteLoginInfo_SiteLoginID, 
            T.PayorID AS PayorSiteLoginInfo_PayorID, 
            T.Login AS PayorSiteLoginInfo_Login, 
            T.Password AS PayorSiteLoginInfo_Password, 
            T.LicenseeId AS PayorSiteLoginInfo_LicenseeId, 
            True AS _from0
        FROM ModelStoreContainer.PayorSiteLoginInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PayorSources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PayorSources", @"
    SELECT VALUE -- Constructing PayorSources
        [Model.PayorSource](T1.PayorSource_PayorId, T1.PayorSource_LicenseeId, T1.PayorSource_SourceType, T1.PayorSource_Notes, T1.PayorSource_ConfigNotes)
    FROM (
        SELECT 
            T.PayorId AS PayorSource_PayorId, 
            T.LicenseeId AS PayorSource_LicenseeId, 
            T.SourceType AS PayorSource_SourceType, 
            T.Notes AS PayorSource_Notes, 
            T.ConfigNotes AS PayorSource_ConfigNotes, 
            True AS _from0
        FROM ModelStoreContainer.PayorSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PayorToolFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2859);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PayorToolFields\r\n        [Model.PayorToolFiel");
            viewString.Append("d](T1.PayorToolField_PayorToolFieldId, T1.PayorToolField_PayorToolId, T1.PayorTo");
            viewString.Append("olField_LabelOnImage, T1.PayorToolField_FieldStatus, T1.PayorToolField_FieldOrde");
            viewString.Append("r, T1.PayorToolField_IsPartOfPrimary, T1.PayorToolField_IsPopulatedIfLinked, T1.");
            viewString.Append("PayorToolField_IsTabbedToNextFieldIfLinked, T1.PayorToolField_IsCalculatedField,");
            viewString.Append(" T1.PayorToolField_IsOverrideOfCalcAllowed, T1.PayorToolField_DefaultNumeric, T1");
            viewString.Append(".PayorToolField_IsOorBlankAllowed, T1.PayorToolField_AllignedDirection, T1.Payor");
            viewString.Append("ToolField_EquivalentIncomingField, T1.PayorToolField_EquivalentLearnedField, T1.");
            viewString.Append("PayorToolField_EquivalentDeuField, T1.PayorToolField_FormulaId, T1.PayorToolFiel");
            viewString.Append("d_HelpText, T1.PayorToolField_IsDeleted, T1.PayorToolField_FieldPositionX, T1.Pa");
            viewString.Append("yorToolField_FieldPositionY, T1.PayorToolField_FieldWidth, T1.PayorToolField_Fie");
            viewString.Append("ldHeight, T1.PayorToolField_PTAvailableFieldId, T1.PayorToolField_MaskFieldTypeI");
            viewString.Append("d, T1.PayorToolField_TemplateID)\r\n    FROM (\r\n        SELECT \r\n            T.Pay");
            viewString.Append("orToolFieldId AS PayorToolField_PayorToolFieldId, \r\n            T.PayorToolId AS");
            viewString.Append(" PayorToolField_PayorToolId, \r\n            T.LabelOnImage AS PayorToolField_Labe");
            viewString.Append("lOnImage, \r\n            T.FieldStatus AS PayorToolField_FieldStatus, \r\n         ");
            viewString.Append("   T.FieldOrder AS PayorToolField_FieldOrder, \r\n            T.IsPartOfPrimary AS");
            viewString.Append(" PayorToolField_IsPartOfPrimary, \r\n            T.IsPopulatedIfLinked AS PayorToo");
            viewString.Append("lField_IsPopulatedIfLinked, \r\n            T.IsTabbedToNextFieldIfLinked AS Payor");
            viewString.Append("ToolField_IsTabbedToNextFieldIfLinked, \r\n            T.IsCalculatedField AS Payo");
            viewString.Append("rToolField_IsCalculatedField, \r\n            T.IsOverrideOfCalcAllowed AS PayorTo");
            viewString.Append("olField_IsOverrideOfCalcAllowed, \r\n            T.DefaultNumeric AS PayorToolFiel");
            viewString.Append("d_DefaultNumeric, \r\n            T.IsOorBlankAllowed AS PayorToolField_IsOorBlank");
            viewString.Append("Allowed, \r\n            T.AllignedDirection AS PayorToolField_AllignedDirection, ");
            viewString.Append("\r\n            T.EquivalentIncomingField AS PayorToolField_EquivalentIncomingFiel");
            viewString.Append("d, \r\n            T.EquivalentLearnedField AS PayorToolField_EquivalentLearnedFie");
            viewString.Append("ld, \r\n            T.EquivalentDeuField AS PayorToolField_EquivalentDeuField, \r\n ");
            viewString.Append("           T.FormulaId AS PayorToolField_FormulaId, \r\n            T.HelpText AS ");
            viewString.Append("PayorToolField_HelpText, \r\n            T.IsDeleted AS PayorToolField_IsDeleted, ");
            viewString.Append("\r\n            T.FieldPositionX AS PayorToolField_FieldPositionX, \r\n            T");
            viewString.Append(".FieldPositionY AS PayorToolField_FieldPositionY, \r\n            T.FieldWidth AS ");
            viewString.Append("PayorToolField_FieldWidth, \r\n            T.FieldHeight AS PayorToolField_FieldHe");
            viewString.Append("ight, \r\n            T.PTAvailableFieldId AS PayorToolField_PTAvailableFieldId, \r");
            viewString.Append("\n            T.MaskFieldTypeId AS PayorToolField_MaskFieldTypeId, \r\n            ");
            viewString.Append("T.TemplateID AS PayorToolField_TemplateID, \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM ModelStoreContainer.PayorToolFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PayorToolFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PayorTools
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PayorTools", @"
    SELECT VALUE -- Constructing PayorTools
        [Model.PayorTool](T1.PayorTool_PayorToolId, T1.PayorTool_PayorId, T1.PayorTool_StatementImageFile, T1.PayorTool_ChequeImageFile, T1.PayorTool_IsDeleted, T1.PayorTool_TemplateID)
    FROM (
        SELECT 
            T.PayorToolId AS PayorTool_PayorToolId, 
            T.PayorId AS PayorTool_PayorId, 
            T.StatementImageFile AS PayorTool_StatementImageFile, 
            T.ChequeImageFile AS PayorTool_ChequeImageFile, 
            T.IsDeleted AS PayorTool_IsDeleted, 
            T.TemplateID AS PayorTool_TemplateID, 
            True AS _from0
        FROM ModelStoreContainer.PayorTools AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Policies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3908);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Policies\r\n        [Model.Policy](T1.Policy_Po");
            viewString.Append("licyId, T1.Policy_PolicyNumber, T1.Policy_PolicyStatusId, T1.Policy_PolicyType, ");
            viewString.Append("T1.Policy_PolicyClientId, T1.Policy_PolicyLicenseeId, T1.Policy_OriginalEffectiv");
            viewString.Append("eDate, T1.Policy_TrackFromDate, T1.Policy_PolicyModeId, T1.Policy_MonthlyPremium");
            viewString.Append(", T1.Policy_CoverageId, T1.Policy_SubmittedThrough, T1.Policy_Enrolled, T1.Polic");
            viewString.Append("y_Eligible, T1.Policy_PolicyTerminationDate, T1.Policy_TerminationReasonId, T1.P");
            viewString.Append("olicy_IsTrackMissingMonth, T1.Policy_IsTrackIncomingPercentage, T1.Policy_IsTrac");
            viewString.Append("kPayment, T1.Policy_IncomingPaymentTypeId, T1.Policy_IsDeleted, T1.Policy_Replac");
            viewString.Append("edBy, T1.Policy_PayorId, T1.Policy_DuplicateFrom, T1.Policy_CreatedBy, T1.Policy");
            viewString.Append("_CreatedOn, T1.Policy_IsIncomingBasicSchedule, T1.Policy_IsOutGoingBasicSchedule");
            viewString.Append(", T1.Policy_CarrierId, T1.Policy_SplitPercentage, T1.Policy_Insured, T1.Policy_A");
            viewString.Append("ctivatedOn, T1.Policy_IsLocked, T1.Policy_LastFollowUpRuns, T1.Policy_RowVersion");
            viewString.Append(", T1.Policy_Advance, T1.Policy_ProductType, T1.Policy_UserCredentialId, T1.Polic");
            viewString.Append("y_AccoutExec, T1.Policy_LastNoMissIssueDate, T1.Policy_LastNoVarIssueDate, T1.Po");
            viewString.Append("licy_IsCustomBasicSchedule, T1.Policy_CustomScheduleDateType, T1.Policy_PrimaryA");
            viewString.Append("gent, T1.Policy_IsTieredSchedule)\r\n    FROM (\r\n        SELECT \r\n            T.Po");
            viewString.Append("licyId AS Policy_PolicyId, \r\n            T.PolicyNumber AS Policy_PolicyNumber, ");
            viewString.Append("\r\n            T.PolicyStatusId AS Policy_PolicyStatusId, \r\n            T.PolicyT");
            viewString.Append("ype AS Policy_PolicyType, \r\n            T.PolicyClientId AS Policy_PolicyClientI");
            viewString.Append("d, \r\n            T.PolicyLicenseeId AS Policy_PolicyLicenseeId, \r\n            T.");
            viewString.Append("OriginalEffectiveDate AS Policy_OriginalEffectiveDate, \r\n            T.TrackFrom");
            viewString.Append("Date AS Policy_TrackFromDate, \r\n            T.PolicyModeId AS Policy_PolicyModeI");
            viewString.Append("d, \r\n            T.MonthlyPremium AS Policy_MonthlyPremium, \r\n            T.Cove");
            viewString.Append("rageId AS Policy_CoverageId, \r\n            T.SubmittedThrough AS Policy_Submitte");
            viewString.Append("dThrough, \r\n            T.Enrolled AS Policy_Enrolled, \r\n            T.Eligible ");
            viewString.Append("AS Policy_Eligible, \r\n            T.PolicyTerminationDate AS Policy_PolicyTermin");
            viewString.Append("ationDate, \r\n            T.TerminationReasonId AS Policy_TerminationReasonId, \r\n");
            viewString.Append("            T.IsTrackMissingMonth AS Policy_IsTrackMissingMonth, \r\n            T");
            viewString.Append(".IsTrackIncomingPercentage AS Policy_IsTrackIncomingPercentage, \r\n            T.");
            viewString.Append("IsTrackPayment AS Policy_IsTrackPayment, \r\n            T.IncomingPaymentTypeId A");
            viewString.Append("S Policy_IncomingPaymentTypeId, \r\n            T.IsDeleted AS Policy_IsDeleted, \r");
            viewString.Append("\n            T.ReplacedBy AS Policy_ReplacedBy, \r\n            T.PayorId AS Polic");
            viewString.Append("y_PayorId, \r\n            T.DuplicateFrom AS Policy_DuplicateFrom, \r\n            ");
            viewString.Append("T.CreatedBy AS Policy_CreatedBy, \r\n            T.CreatedOn AS Policy_CreatedOn, ");
            viewString.Append("\r\n            T.IsIncomingBasicSchedule AS Policy_IsIncomingBasicSchedule, \r\n   ");
            viewString.Append("         T.IsOutGoingBasicSchedule AS Policy_IsOutGoingBasicSchedule, \r\n        ");
            viewString.Append("    T.CarrierId AS Policy_CarrierId, \r\n            T.SplitPercentage AS Policy_S");
            viewString.Append("plitPercentage, \r\n            T.Insured AS Policy_Insured, \r\n            T.Activ");
            viewString.Append("atedOn AS Policy_ActivatedOn, \r\n            T.IsLocked AS Policy_IsLocked, \r\n   ");
            viewString.Append("         T.LastFollowUpRuns AS Policy_LastFollowUpRuns, \r\n            T.RowVersi");
            viewString.Append("on AS Policy_RowVersion, \r\n            T.Advance AS Policy_Advance, \r\n          ");
            viewString.Append("  T.ProductType AS Policy_ProductType, \r\n            T.UserCredentialId AS Polic");
            viewString.Append("y_UserCredentialId, \r\n            T.AccoutExec AS Policy_AccoutExec, \r\n         ");
            viewString.Append("   T.LastNoMissIssueDate AS Policy_LastNoMissIssueDate, \r\n            T.LastNoVa");
            viewString.Append("rIssueDate AS Policy_LastNoVarIssueDate, \r\n            T.IsCustomBasicSchedule A");
            viewString.Append("S Policy_IsCustomBasicSchedule, \r\n            T.CustomScheduleDateType AS Policy");
            viewString.Append("_CustomScheduleDateType, \r\n            T.PrimaryAgent AS Policy_PrimaryAgent, \r\n");
            viewString.Append("            T.IsTieredSchedule AS Policy_IsTieredSchedule, \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM ModelStoreContainer.Policies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Policies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PoliciesHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3498);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PoliciesHistories\r\n        [Model.PoliciesHis");
            viewString.Append("tory](T1.PoliciesHistory_PolicyId, T1.PoliciesHistory_PolicyNumber, T1.PoliciesH");
            viewString.Append("istory_PolicyStatusId, T1.PoliciesHistory_PolicyType, T1.PoliciesHistory_PolicyC");
            viewString.Append("lientId, T1.PoliciesHistory_PolicyLicenseeId, T1.PoliciesHistory_OriginalEffecti");
            viewString.Append("veDate, T1.PoliciesHistory_TrackFromDate, T1.PoliciesHistory_PolicyModeId, T1.Po");
            viewString.Append("liciesHistory_MonthlyPremium, T1.PoliciesHistory_CoverageId, T1.PoliciesHistory_");
            viewString.Append("SubmittedThrough, T1.PoliciesHistory_Enrolled, T1.PoliciesHistory_Eligible, T1.P");
            viewString.Append("oliciesHistory_PolicyTerminationDate, T1.PoliciesHistory_TerminationReasonId, T1");
            viewString.Append(".PoliciesHistory_IsTrackMissingMonth, T1.PoliciesHistory_IsTrackIncomingPercenta");
            viewString.Append("ge, T1.PoliciesHistory_IsTrackPayment, T1.PoliciesHistory_IncomingPaymentTypeId,");
            viewString.Append(" T1.PoliciesHistory_IsDeleted, T1.PoliciesHistory_ReplacedBy, T1.PoliciesHistory");
            viewString.Append("_PayorId, T1.PoliciesHistory_DuplicateFrom, T1.PoliciesHistory_CreatedBy, T1.Pol");
            viewString.Append("iciesHistory_CreatedOn, T1.PoliciesHistory_IsIncomingBasicSchedule, T1.PoliciesH");
            viewString.Append("istory_IsOutGoingBasicSchedule, T1.PoliciesHistory_CarrierId, T1.PoliciesHistory");
            viewString.Append("_SplitPercentage, T1.PoliciesHistory_Insured, T1.PoliciesHistory_Advance, T1.Pol");
            viewString.Append("iciesHistory_ProductType)\r\n    FROM (\r\n        SELECT \r\n            T.PolicyId A");
            viewString.Append("S PoliciesHistory_PolicyId, \r\n            T.PolicyNumber AS PoliciesHistory_Poli");
            viewString.Append("cyNumber, \r\n            T.PolicyStatusId AS PoliciesHistory_PolicyStatusId, \r\n  ");
            viewString.Append("          T.PolicyType AS PoliciesHistory_PolicyType, \r\n            T.PolicyClie");
            viewString.Append("ntId AS PoliciesHistory_PolicyClientId, \r\n            T.PolicyLicenseeId AS Poli");
            viewString.Append("ciesHistory_PolicyLicenseeId, \r\n            T.OriginalEffectiveDate AS PoliciesH");
            viewString.Append("istory_OriginalEffectiveDate, \r\n            T.TrackFromDate AS PoliciesHistory_T");
            viewString.Append("rackFromDate, \r\n            T.PolicyModeId AS PoliciesHistory_PolicyModeId, \r\n  ");
            viewString.Append("          T.MonthlyPremium AS PoliciesHistory_MonthlyPremium, \r\n            T.Co");
            viewString.Append("verageId AS PoliciesHistory_CoverageId, \r\n            T.SubmittedThrough AS Poli");
            viewString.Append("ciesHistory_SubmittedThrough, \r\n            T.Enrolled AS PoliciesHistory_Enroll");
            viewString.Append("ed, \r\n            T.Eligible AS PoliciesHistory_Eligible, \r\n            T.Policy");
            viewString.Append("TerminationDate AS PoliciesHistory_PolicyTerminationDate, \r\n            T.Termin");
            viewString.Append("ationReasonId AS PoliciesHistory_TerminationReasonId, \r\n            T.IsTrackMis");
            viewString.Append("singMonth AS PoliciesHistory_IsTrackMissingMonth, \r\n            T.IsTrackIncomin");
            viewString.Append("gPercentage AS PoliciesHistory_IsTrackIncomingPercentage, \r\n            T.IsTrac");
            viewString.Append("kPayment AS PoliciesHistory_IsTrackPayment, \r\n            T.IncomingPaymentTypeI");
            viewString.Append("d AS PoliciesHistory_IncomingPaymentTypeId, \r\n            T.IsDeleted AS Policie");
            viewString.Append("sHistory_IsDeleted, \r\n            T.ReplacedBy AS PoliciesHistory_ReplacedBy, \r\n");
            viewString.Append("            T.PayorId AS PoliciesHistory_PayorId, \r\n            T.DuplicateFrom ");
            viewString.Append("AS PoliciesHistory_DuplicateFrom, \r\n            T.CreatedBy AS PoliciesHistory_C");
            viewString.Append("reatedBy, \r\n            T.CreatedOn AS PoliciesHistory_CreatedOn, \r\n            ");
            viewString.Append("T.IsIncomingBasicSchedule AS PoliciesHistory_IsIncomingBasicSchedule, \r\n        ");
            viewString.Append("    T.IsOutGoingBasicSchedule AS PoliciesHistory_IsOutGoingBasicSchedule, \r\n    ");
            viewString.Append("        T.CarrierId AS PoliciesHistory_CarrierId, \r\n            T.SplitPercentag");
            viewString.Append("e AS PoliciesHistory_SplitPercentage, \r\n            T.Insured AS PoliciesHistory");
            viewString.Append("_Insured, \r\n            T.Advance AS PoliciesHistory_Advance, \r\n            T.Pr");
            viewString.Append("oductType AS PoliciesHistory_ProductType, \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM ModelStoreContainer.PoliciesHistory AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PoliciesHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyIncomingAdvancedSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyIncomingAdvancedSchedules", @"
    SELECT VALUE -- Constructing PolicyIncomingAdvancedSchedules
        [Model.PolicyIncomingAdvancedSchedule](T1.PolicyIncomingAdvancedSchedule_IncomingAdvancedScheduleId, T1.PolicyIncomingAdvancedSchedule_PolicyId, T1.PolicyIncomingAdvancedSchedule_ScheduleTypeId, T1.PolicyIncomingAdvancedSchedule_FromRange, T1.PolicyIncomingAdvancedSchedule_ToRange, T1.PolicyIncomingAdvancedSchedule_EffectiveFromDate, T1.PolicyIncomingAdvancedSchedule_EffectiveToDate, T1.PolicyIncomingAdvancedSchedule_Rate)
    FROM (
        SELECT 
            T.IncomingAdvancedScheduleId AS PolicyIncomingAdvancedSchedule_IncomingAdvancedScheduleId, 
            T.PolicyId AS PolicyIncomingAdvancedSchedule_PolicyId, 
            T.ScheduleTypeId AS PolicyIncomingAdvancedSchedule_ScheduleTypeId, 
            T.FromRange AS PolicyIncomingAdvancedSchedule_FromRange, 
            T.ToRange AS PolicyIncomingAdvancedSchedule_ToRange, 
            T.EffectiveFromDate AS PolicyIncomingAdvancedSchedule_EffectiveFromDate, 
            T.EffectiveToDate AS PolicyIncomingAdvancedSchedule_EffectiveToDate, 
            T.Rate AS PolicyIncomingAdvancedSchedule_Rate, 
            True AS _from0
        FROM ModelStoreContainer.PolicyIncomingAdvancedSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyLevelBillingDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyLevelBillingDetails", @"
    SELECT VALUE -- Constructing PolicyLevelBillingDetails
        [Model.PolicyLevelBillingDetail](T1.PolicyLevelBillingDetail_BillingLineId, T1.PolicyLevelBillingDetail_TotalUnits, T1.PolicyLevelBillingDetail_PolicyId)
    FROM (
        SELECT 
            T.BillingLineId AS PolicyLevelBillingDetail_BillingLineId, 
            T.TotalUnits AS PolicyLevelBillingDetail_TotalUnits, 
            T.PolicyId AS PolicyLevelBillingDetail_PolicyId, 
            True AS _from0
        FROM ModelStoreContainer.PolicyLevelBillingDetail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyOutgoingAdvancedSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyOutgoingAdvancedSchedules", "\r\n    SELECT VALUE -- Constructing PolicyOutgoingAdvancedSchedules\r\n        [Mode" +
                    "l.PolicyOutgoingAdvancedSchedule](T1.PolicyOutgoingAdvancedSchedule_OutgoingAdva" +
                    "ncedScheduleId, T1.PolicyOutgoingAdvancedSchedule_PolicyId, T1.PolicyOutgoingAdv" +
                    "ancedSchedule_ScheduleTypeId, T1.PolicyOutgoingAdvancedSchedule_FromRange, T1.Po" +
                    "licyOutgoingAdvancedSchedule_ToRange, T1.PolicyOutgoingAdvancedSchedule_Effectiv" +
                    "eFromDate, T1.PolicyOutgoingAdvancedSchedule_EffectiveToDate, T1.PolicyOutgoingA" +
                    "dvancedSchedule_Rate, T1.PolicyOutgoingAdvancedSchedule_PayeeUserCredentialId, T" +
                    "1.PolicyOutgoingAdvancedSchedule_IsPrimaryAgent, T1.PolicyOutgoingAdvancedSchedu" +
                    "le_ModifiedOn, T1.PolicyOutgoingAdvancedSchedule_PayeeName)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.OutgoingAdvancedScheduleId AS PolicyOutgoingAdvancedSche" +
                    "dule_OutgoingAdvancedScheduleId, \r\n            T.PolicyId AS PolicyOutgoingAdvan" +
                    "cedSchedule_PolicyId, \r\n            T.ScheduleTypeId AS PolicyOutgoingAdvancedSc" +
                    "hedule_ScheduleTypeId, \r\n            T.FromRange AS PolicyOutgoingAdvancedSchedu" +
                    "le_FromRange, \r\n            T.ToRange AS PolicyOutgoingAdvancedSchedule_ToRange," +
                    " \r\n            T.EffectiveFromDate AS PolicyOutgoingAdvancedSchedule_EffectiveFr" +
                    "omDate, \r\n            T.EffectiveToDate AS PolicyOutgoingAdvancedSchedule_Effect" +
                    "iveToDate, \r\n            T.Rate AS PolicyOutgoingAdvancedSchedule_Rate, \r\n      " +
                    "      T.PayeeUserCredentialId AS PolicyOutgoingAdvancedSchedule_PayeeUserCredent" +
                    "ialId, \r\n            T.IsPrimaryAgent AS PolicyOutgoingAdvancedSchedule_IsPrimar" +
                    "yAgent, \r\n            T.ModifiedOn AS PolicyOutgoingAdvancedSchedule_ModifiedOn," +
                    " \r\n            T.PayeeName AS PolicyOutgoingAdvancedSchedule_PayeeName, \r\n      " +
                    "      True AS _from0\r\n        FROM ModelStoreContainer.PolicyOutgoingAdvancedSch" +
                    "edules AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyOutgoingSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyOutgoingSchedules", "\r\n    SELECT VALUE -- Constructing PolicyOutgoingSchedules\r\n        [Model.Policy" +
                    "OutgoingSchedule](T1.PolicyOutgoingSchedule_OutgoingScheduleId, T1.PolicyOutgoin" +
                    "gSchedule_PolicyId, T1.PolicyOutgoingSchedule_PayeeUserCredentialId, T1.PolicyOu" +
                    "tgoingSchedule_IsPrimaryAgent, T1.PolicyOutgoingSchedule_FirstYearPercentage, T1" +
                    ".PolicyOutgoingSchedule_RenewalPercentage, T1.PolicyOutgoingSchedule_CreatedOn, " +
                    "T1.PolicyOutgoingSchedule_ScheduleTypeId, T1.PolicyOutgoingSchedule_CustomStartD" +
                    "ate, T1.PolicyOutgoingSchedule_CustomEndDate, T1.PolicyOutgoingSchedule_SplitPer" +
                    "cent, T1.PolicyOutgoingSchedule_TierNumber)\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.OutgoingScheduleId AS PolicyOutgoingSchedule_OutgoingScheduleId, \r\n     " +
                    "       T.PolicyId AS PolicyOutgoingSchedule_PolicyId, \r\n            T.PayeeUserC" +
                    "redentialId AS PolicyOutgoingSchedule_PayeeUserCredentialId, \r\n            T.IsP" +
                    "rimaryAgent AS PolicyOutgoingSchedule_IsPrimaryAgent, \r\n            T.FirstYearP" +
                    "ercentage AS PolicyOutgoingSchedule_FirstYearPercentage, \r\n            T.Renewal" +
                    "Percentage AS PolicyOutgoingSchedule_RenewalPercentage, \r\n            T.CreatedO" +
                    "n AS PolicyOutgoingSchedule_CreatedOn, \r\n            T.ScheduleTypeId AS PolicyO" +
                    "utgoingSchedule_ScheduleTypeId, \r\n            T.CustomStartDate AS PolicyOutgoin" +
                    "gSchedule_CustomStartDate, \r\n            T.CustomEndDate AS PolicyOutgoingSchedu" +
                    "le_CustomEndDate, \r\n            T.SplitPercent AS PolicyOutgoingSchedule_SplitPe" +
                    "rcent, \r\n            T.TierNumber AS PolicyOutgoingSchedule_TierNumber, \r\n      " +
                    "      True AS _from0\r\n        FROM ModelStoreContainer.PolicyOutgoingSchedules A" +
                    "S T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyPaymentEntries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2280);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PolicyPaymentEntries\r\n        [Model.PolicyPa");
            viewString.Append("ymentEntry](T1.PolicyPaymentEntry_PaymentEntryId, T1.PolicyPaymentEntry_Statemen");
            viewString.Append("tId, T1.PolicyPaymentEntry_PolicyId, T1.PolicyPaymentEntry_InvoiceDate, T1.Polic");
            viewString.Append("yPaymentEntry_PaymentRecived, T1.PolicyPaymentEntry_CommissionPercentage, T1.Pol");
            viewString.Append("icyPaymentEntry_NumberOfUnits, T1.PolicyPaymentEntry_Fee, T1.PolicyPaymentEntry_");
            viewString.Append("SplitPercentage, T1.PolicyPaymentEntry_TotalPayment, T1.PolicyPaymentEntry_Creat");
            viewString.Append("edOn, T1.PolicyPaymentEntry_CreatedBy, T1.PolicyPaymentEntry_PostStatusID, T1.Po");
            viewString.Append("licyPaymentEntry_Bonus, T1.PolicyPaymentEntry_DollerPerUnit, T1.PolicyPaymentEnt");
            viewString.Append("ry_DEUEntryId, T1.PolicyPaymentEntry_ExpectedPayment, T1.PolicyPaymentEntry_Foll");
            viewString.Append("owUpVarIssueId, T1.PolicyPaymentEntry_FollowUpIssueResolveOrClosed, T1.PolicyPay");
            viewString.Append("mentEntry_IsLinkPayment)\r\n    FROM (\r\n        SELECT \r\n            T.PaymentEntr");
            viewString.Append("yId AS PolicyPaymentEntry_PaymentEntryId, \r\n            T.StatementId AS PolicyP");
            viewString.Append("aymentEntry_StatementId, \r\n            T.PolicyId AS PolicyPaymentEntry_PolicyId");
            viewString.Append(", \r\n            T.InvoiceDate AS PolicyPaymentEntry_InvoiceDate, \r\n            T");
            viewString.Append(".PaymentRecived AS PolicyPaymentEntry_PaymentRecived, \r\n            T.Commission");
            viewString.Append("Percentage AS PolicyPaymentEntry_CommissionPercentage, \r\n            T.NumberOfU");
            viewString.Append("nits AS PolicyPaymentEntry_NumberOfUnits, \r\n            T.Fee AS PolicyPaymentEn");
            viewString.Append("try_Fee, \r\n            T.SplitPercentage AS PolicyPaymentEntry_SplitPercentage, ");
            viewString.Append("\r\n            T.TotalPayment AS PolicyPaymentEntry_TotalPayment, \r\n            T");
            viewString.Append(".CreatedOn AS PolicyPaymentEntry_CreatedOn, \r\n            T.CreatedBy AS PolicyP");
            viewString.Append("aymentEntry_CreatedBy, \r\n            T.PostStatusID AS PolicyPaymentEntry_PostSt");
            viewString.Append("atusID, \r\n            T.Bonus AS PolicyPaymentEntry_Bonus, \r\n            T.Dolle");
            viewString.Append("rPerUnit AS PolicyPaymentEntry_DollerPerUnit, \r\n            T.DEUEntryId AS Poli");
            viewString.Append("cyPaymentEntry_DEUEntryId, \r\n            T.ExpectedPayment AS PolicyPaymentEntry");
            viewString.Append("_ExpectedPayment, \r\n            T.FollowUpVarIssueId AS PolicyPaymentEntry_Follo");
            viewString.Append("wUpVarIssueId, \r\n            T.FollowUpIssueResolveOrClosed AS PolicyPaymentEntr");
            viewString.Append("y_FollowUpIssueResolveOrClosed, \r\n            T.IsLinkPayment AS PolicyPaymentEn");
            viewString.Append("try_IsLinkPayment, \r\n            True AS _from0\r\n        FROM ModelStoreContaine");
            viewString.Append("r.PolicyPaymentEntries AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyPaymentEntries", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ServiceLines
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ServiceLines", @"
    SELECT VALUE -- Constructing ServiceLines
        [Model.ServiceLine](T1.ServiceLine_ServiceLineId, T1.ServiceLine_LicenseeId, T1.ServiceLine_ServiceId, T1.ServiceLine_ServiceChargeTypeId, T1.ServiceLine_Min, T1.ServiceLine_Range1, T1.ServiceLine_Range2, T1.ServiceLine_Rate, T1.ServiceLine_Discount, T1.ServiceLine_StartDate, T1.ServiceLine_EndDate, T1.ServiceLine_IsTaxable, T1.ServiceLine_ModifiedOn, T1.ServiceLine_ConsumedUnit)
    FROM (
        SELECT 
            T.ServiceLineId AS ServiceLine_ServiceLineId, 
            T.LicenseeId AS ServiceLine_LicenseeId, 
            T.ServiceId AS ServiceLine_ServiceId, 
            T.ServiceChargeTypeId AS ServiceLine_ServiceChargeTypeId, 
            T.Min AS ServiceLine_Min, 
            T.Range1 AS ServiceLine_Range1, 
            T.Range2 AS ServiceLine_Range2, 
            T.Rate AS ServiceLine_Rate, 
            T.Discount AS ServiceLine_Discount, 
            T.StartDate AS ServiceLine_StartDate, 
            T.EndDate AS ServiceLine_EndDate, 
            T.IsTaxable AS ServiceLine_IsTaxable, 
            T.ModifiedOn AS ServiceLine_ModifiedOn, 
            T.ConsumedUnit AS ServiceLine_ConsumedUnit, 
            True AS _from0
        FROM ModelStoreContainer.ServiceLines AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Templates", @"
    SELECT VALUE -- Constructing Templates
        [Model.Template](T1.Template_ExcelColumnList, T1.Template_SheetName, T1.Template_DataStartIndex, T1.Template_PayorID, T1.Template_IsDeleted, T1.Template_LastModified, T1.Template_LastRowsToSkip)
    FROM (
        SELECT 
            T.ExcelColumnList AS Template_ExcelColumnList, 
            T.SheetName AS Template_SheetName, 
            T.DataStartIndex AS Template_DataStartIndex, 
            T.PayorID AS Template_PayorID, 
            T.IsDeleted AS Template_IsDeleted, 
            T.LastModified AS Template_LastModified, 
            T.LastRowsToSkip AS Template_LastRowsToSkip, 
            True AS _from0
        FROM ModelStoreContainer.Templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.UserCredentials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.UserCredentials", @"
    SELECT VALUE -- Constructing UserCredentials
        [Model.UserCredential](T1.UserCredential_UserCredentialId, T1.UserCredential_UserName, T1.UserCredential_Password, T1.UserCredential_RoleId, T1.UserCredential_PasswordHintQuestion, T1.UserCredential_PasswordHintAnswer, T1.UserCredential_IsHouseAccount, T1.UserCredential_IsDeleted, T1.UserCredential_IsNewsToFlash, T1.UserCredential_LicenseeId, T1.UserCredential_CreatedOn, T1.UserCredential_IsAccountExec, T1.UserCredential_BGUserId)
    FROM (
        SELECT 
            T.UserCredentialId AS UserCredential_UserCredentialId, 
            T.UserName AS UserCredential_UserName, 
            T.Password AS UserCredential_Password, 
            T.RoleId AS UserCredential_RoleId, 
            T.PasswordHintQuestion AS UserCredential_PasswordHintQuestion, 
            T.PasswordHintAnswer AS UserCredential_PasswordHintAnswer, 
            T.IsHouseAccount AS UserCredential_IsHouseAccount, 
            T.IsDeleted AS UserCredential_IsDeleted, 
            T.IsNewsToFlash AS UserCredential_IsNewsToFlash, 
            T.LicenseeId AS UserCredential_LicenseeId, 
            T.CreatedOn AS UserCredential_CreatedOn, 
            T.IsAccountExec AS UserCredential_IsAccountExec, 
            T.BGUserId AS UserCredential_BGUserId, 
            True AS _from0
        FROM ModelStoreContainer.UserCredentials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.UserDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.UserDetails", "\r\n    SELECT VALUE -- Constructing UserDetails\r\n        [Model.UserDetail](T1.Use" +
                    "rDetail_UserCredentialId, T1.UserDetail_FirstName, T1.UserDetail_LastName, T1.Us" +
                    "erDetail_Company, T1.UserDetail_NickName, T1.UserDetail_Address, T1.UserDetail_Z" +
                    "ipCode, T1.UserDetail_City, T1.UserDetail_State, T1.UserDetail_Email, T1.UserDet" +
                    "ail_OfficePhone, T1.UserDetail_CellPhone, T1.UserDetail_Fax, T1.UserDetail_First" +
                    "YearDefault, T1.UserDetail_RenewalDefault, T1.UserDetail_ReportForEntireAgency, " +
                    "T1.UserDetail_ReportForOwnBusiness, T1.UserDetail_AddPayeeOn, T1.UserDetail_Disa" +
                    "bleAgentEditing)\r\n    FROM (\r\n        SELECT \r\n            T.UserCredentialId AS" +
                    " UserDetail_UserCredentialId, \r\n            T.FirstName AS UserDetail_FirstName," +
                    " \r\n            T.LastName AS UserDetail_LastName, \r\n            T.Company AS Use" +
                    "rDetail_Company, \r\n            T.NickName AS UserDetail_NickName, \r\n            " +
                    "T.Address AS UserDetail_Address, \r\n            T.ZipCode AS UserDetail_ZipCode, " +
                    "\r\n            T.City AS UserDetail_City, \r\n            T.State AS UserDetail_Sta" +
                    "te, \r\n            T.Email AS UserDetail_Email, \r\n            T.OfficePhone AS Us" +
                    "erDetail_OfficePhone, \r\n            T.CellPhone AS UserDetail_CellPhone, \r\n     " +
                    "       T.Fax AS UserDetail_Fax, \r\n            T.FirstYearDefault AS UserDetail_F" +
                    "irstYearDefault, \r\n            T.RenewalDefault AS UserDetail_RenewalDefault, \r\n" +
                    "            T.ReportForEntireAgency AS UserDetail_ReportForEntireAgency, \r\n     " +
                    "       T.ReportForOwnBusiness AS UserDetail_ReportForOwnBusiness, \r\n            " +
                    "T.AddPayeeOn AS UserDetail_AddPayeeOn, \r\n            T.DisableAgentEditing AS Us" +
                    "erDetail_DisableAgentEditing, \r\n            True AS _from0\r\n        FROM ModelSt" +
                    "oreContainer.UserDetail AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.UserPermissions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.UserPermissions", @"
    SELECT VALUE -- Constructing UserPermissions
        [Model.UserPermission](T1.UserPermission_UserPermissionId, T1.UserPermission_UserCredentialId, T1.UserPermission_ModuleId, T1.UserPermission_AccessRightId)
    FROM (
        SELECT 
            T.UserPermissionId AS UserPermission_UserPermissionId, 
            T.UserCredentialId AS UserPermission_UserCredentialId, 
            T.ModuleId AS UserPermission_ModuleId, 
            T.AccessRightId AS UserPermission_AccessRightId, 
            True AS _from0
        FROM ModelStoreContainer.UserPermissions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.VariablesForBillingLines
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.VariablesForBillingLines", @"
    SELECT VALUE -- Constructing VariablesForBillingLines
        [Model.VariablesForBillingLine](T1.VariablesForBillingLine_NoOfPolicies, T1.VariablesForBillingLine_NoOfUsers, T1.VariablesForBillingLine_NoOfPayees, T1.VariablesForBillingLine_NoOfEntries, T1.VariablesForBillingLine_NoOfAdjustment, T1.VariablesForBillingLine_NoOfWebstatement, T1.VariablesForBillingLine_NoOfEDI, T1.VariablesForBillingLine_NoOfTrackableMonth, T1.VariablesForBillingLine_UnbilledTrackableMonth, T1.VariablesForBillingLine_BillingLineId)
    FROM (
        SELECT 
            T.NoOfPolicies AS VariablesForBillingLine_NoOfPolicies, 
            T.NoOfUsers AS VariablesForBillingLine_NoOfUsers, 
            T.NoOfPayees AS VariablesForBillingLine_NoOfPayees, 
            T.NoOfEntries AS VariablesForBillingLine_NoOfEntries, 
            T.NoOfAdjustment AS VariablesForBillingLine_NoOfAdjustment, 
            T.NoOfWebstatement AS VariablesForBillingLine_NoOfWebstatement, 
            T.NoOfEDI AS VariablesForBillingLine_NoOfEDI, 
            T.NoOfTrackableMonth AS VariablesForBillingLine_NoOfTrackableMonth, 
            T.UnbilledTrackableMonth AS VariablesForBillingLine_UnbilledTrackableMonth, 
            T.BillingLineId AS VariablesForBillingLine_BillingLineId, 
            True AS _from0
        FROM ModelStoreContainer.VariablesForBillingLine AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Statements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Statements", @"
    SELECT VALUE -- Constructing Statements
        [Model.Statement](T1.Statement_StatementId, T1.Statement_StatementNumber, T1.Statement_BatchId, T1.Statement_PayorId, T1.Statement_CheckAmount, T1.Statement_StatementStatusId, T1.Statement_Entries, T1.Statement_CreatedOn, T1.Statement_LastModified, T1.Statement_CreatedBy, T1.Statement_BalAdj, T1.Statement_EnteredAmount, T1.Statement_StatementDate, T1.Statement_TemplateID, T1.Statement_FromPage, T1.Statement_ToPage)
    FROM (
        SELECT 
            T.StatementId AS Statement_StatementId, 
            T.StatementNumber AS Statement_StatementNumber, 
            T.BatchId AS Statement_BatchId, 
            T.PayorId AS Statement_PayorId, 
            T.CheckAmount AS Statement_CheckAmount, 
            T.StatementStatusId AS Statement_StatementStatusId, 
            T.Entries AS Statement_Entries, 
            T.CreatedOn AS Statement_CreatedOn, 
            T.LastModified AS Statement_LastModified, 
            T.CreatedBy AS Statement_CreatedBy, 
            T.BalAdj AS Statement_BalAdj, 
            T.EnteredAmount AS Statement_EnteredAmount, 
            T.StatementDate AS Statement_StatementDate, 
            T.TemplateID AS Statement_TemplateID, 
            T.FromPage AS Statement_FromPage, 
            T.ToPage AS Statement_ToPage, 
            True AS _from0
        FROM ModelStoreContainer.Statements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyLearnedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3510);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PolicyLearnedFields\r\n        [Model.PolicyLea");
            viewString.Append("rnedField](T1.PolicyLearnedField_PolicyId, T1.PolicyLearnedField_Insured, T1.Pol");
            viewString.Append("icyLearnedField_PolicyNumber, T1.PolicyLearnedField_Effective, T1.PolicyLearnedF");
            viewString.Append("ield_TrackFrom, T1.PolicyLearnedField_PAC, T1.PolicyLearnedField_PMC, T1.PolicyL");
            viewString.Append("earnedField_ModalAvgPremium, T1.PolicyLearnedField_PolicyModeId, T1.PolicyLearne");
            viewString.Append("dField_Enrolled, T1.PolicyLearnedField_Eligible, T1.PolicyLearnedField_AutoTermi");
            viewString.Append("nationDate, T1.PolicyLearnedField_Link1, T1.PolicyLearnedField_LastModifiedOn, T");
            viewString.Append("1.PolicyLearnedField_LastModifiedUserCredentialid, T1.PolicyLearnedField_ClientI");
            viewString.Append("D, T1.PolicyLearnedField_CompTypeID, T1.PolicyLearnedField_PayorSysID, T1.Policy");
            viewString.Append("LearnedField_Renewal, T1.PolicyLearnedField_SplitPercentage, T1.PolicyLearnedFie");
            viewString.Append("ld_CompScheduleType, T1.PolicyLearnedField_CarrierId, T1.PolicyLearnedField_Cove");
            viewString.Append("rageId, T1.PolicyLearnedField_PayorId, T1.PolicyLearnedField_PreviousEffectiveDa");
            viewString.Append("te, T1.PolicyLearnedField_PreviousPolicyModeId, T1.PolicyLearnedField_CarrierNic");
            viewString.Append("kName, T1.PolicyLearnedField_CoverageNickName, T1.PolicyLearnedField_Advance, T1");
            viewString.Append(".PolicyLearnedField_ProductType, T1.PolicyLearnedField_UserCredentialId, T1.Poli");
            viewString.Append("cyLearnedField_AccoutExec, T1.PolicyLearnedField_ImportPolicyID)\r\n    FROM (\r\n  ");
            viewString.Append("      SELECT \r\n            T.PolicyId AS PolicyLearnedField_PolicyId, \r\n        ");
            viewString.Append("    T.Insured AS PolicyLearnedField_Insured, \r\n            T.PolicyNumber AS Pol");
            viewString.Append("icyLearnedField_PolicyNumber, \r\n            T.Effective AS PolicyLearnedField_Ef");
            viewString.Append("fective, \r\n            T.TrackFrom AS PolicyLearnedField_TrackFrom, \r\n          ");
            viewString.Append("  T.PAC AS PolicyLearnedField_PAC, \r\n            T.PMC AS PolicyLearnedField_PMC");
            viewString.Append(", \r\n            T.ModalAvgPremium AS PolicyLearnedField_ModalAvgPremium, \r\n     ");
            viewString.Append("       T.PolicyModeId AS PolicyLearnedField_PolicyModeId, \r\n            T.Enroll");
            viewString.Append("ed AS PolicyLearnedField_Enrolled, \r\n            T.Eligible AS PolicyLearnedFiel");
            viewString.Append("d_Eligible, \r\n            T.AutoTerminationDate AS PolicyLearnedField_AutoTermin");
            viewString.Append("ationDate, \r\n            T.Link1 AS PolicyLearnedField_Link1, \r\n            T.La");
            viewString.Append("stModifiedOn AS PolicyLearnedField_LastModifiedOn, \r\n            T.LastModifiedU");
            viewString.Append("serCredentialid AS PolicyLearnedField_LastModifiedUserCredentialid, \r\n          ");
            viewString.Append("  T.ClientID AS PolicyLearnedField_ClientID, \r\n            T.CompTypeID AS Polic");
            viewString.Append("yLearnedField_CompTypeID, \r\n            T.PayorSysID AS PolicyLearnedField_Payor");
            viewString.Append("SysID, \r\n            T.Renewal AS PolicyLearnedField_Renewal, \r\n            T.Sp");
            viewString.Append("litPercentage AS PolicyLearnedField_SplitPercentage, \r\n            T.CompSchedul");
            viewString.Append("eType AS PolicyLearnedField_CompScheduleType, \r\n            T.CarrierId AS Polic");
            viewString.Append("yLearnedField_CarrierId, \r\n            T.CoverageId AS PolicyLearnedField_Covera");
            viewString.Append("geId, \r\n            T.PayorId AS PolicyLearnedField_PayorId, \r\n            T.Pre");
            viewString.Append("viousEffectiveDate AS PolicyLearnedField_PreviousEffectiveDate, \r\n            T.");
            viewString.Append("PreviousPolicyModeId AS PolicyLearnedField_PreviousPolicyModeId, \r\n            T");
            viewString.Append(".CarrierNickName AS PolicyLearnedField_CarrierNickName, \r\n            T.Coverage");
            viewString.Append("NickName AS PolicyLearnedField_CoverageNickName, \r\n            T.Advance AS Poli");
            viewString.Append("cyLearnedField_Advance, \r\n            T.ProductType AS PolicyLearnedField_Produc");
            viewString.Append("tType, \r\n            T.UserCredentialId AS PolicyLearnedField_UserCredentialId, ");
            viewString.Append("\r\n            T.AccoutExec AS PolicyLearnedField_AccoutExec, \r\n            T.Imp");
            viewString.Append("ortPolicyID AS PolicyLearnedField_ImportPolicyID, \r\n            True AS _from0\r\n");
            viewString.Append("        FROM ModelStoreContainer.PolicyLearnedFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyLearnedFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyLearnedFieldsHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3822);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PolicyLearnedFieldsHistories\r\n        [Model.");
            viewString.Append("PolicyLearnedFieldsHistory](T1.PolicyLearnedFieldsHistory_PolicyId, T1.PolicyLea");
            viewString.Append("rnedFieldsHistory_Insured, T1.PolicyLearnedFieldsHistory_PolicyNumber, T1.Policy");
            viewString.Append("LearnedFieldsHistory_Effective, T1.PolicyLearnedFieldsHistory_TrackFrom, T1.Poli");
            viewString.Append("cyLearnedFieldsHistory_PAC, T1.PolicyLearnedFieldsHistory_PMC, T1.PolicyLearnedF");
            viewString.Append("ieldsHistory_ModalAvgPremium, T1.PolicyLearnedFieldsHistory_PolicyModeId, T1.Pol");
            viewString.Append("icyLearnedFieldsHistory_Enrolled, T1.PolicyLearnedFieldsHistory_Eligible, T1.Pol");
            viewString.Append("icyLearnedFieldsHistory_AutoTerminationDate, T1.PolicyLearnedFieldsHistory_Link1");
            viewString.Append(", T1.PolicyLearnedFieldsHistory_LastModifiedOn, T1.PolicyLearnedFieldsHistory_La");
            viewString.Append("stModifiedUserCredentialid, T1.PolicyLearnedFieldsHistory_ClientID, T1.PolicyLea");
            viewString.Append("rnedFieldsHistory_CompTypeID, T1.PolicyLearnedFieldsHistory_PayorSysID, T1.Polic");
            viewString.Append("yLearnedFieldsHistory_Renewal, T1.PolicyLearnedFieldsHistory_SplitPercentage, T1");
            viewString.Append(".PolicyLearnedFieldsHistory_CompScheduleType, T1.PolicyLearnedFieldsHistory_Carr");
            viewString.Append("ierId, T1.PolicyLearnedFieldsHistory_CoverageId, T1.PolicyLearnedFieldsHistory_P");
            viewString.Append("ayorId, T1.PolicyLearnedFieldsHistory_PreviousEffectiveDate, T1.PolicyLearnedFie");
            viewString.Append("ldsHistory_PreviousPolicyModeId, T1.PolicyLearnedFieldsHistory_CarrierNickName, ");
            viewString.Append("T1.PolicyLearnedFieldsHistory_CoverageNickName, T1.PolicyLearnedFieldsHistory_Ad");
            viewString.Append("vance, T1.PolicyLearnedFieldsHistory_ProductType, T1.PolicyLearnedFieldsHistory_");
            viewString.Append("ImportPolicyID)\r\n    FROM (\r\n        SELECT \r\n            T.PolicyId AS PolicyLe");
            viewString.Append("arnedFieldsHistory_PolicyId, \r\n            T.Insured AS PolicyLearnedFieldsHisto");
            viewString.Append("ry_Insured, \r\n            T.PolicyNumber AS PolicyLearnedFieldsHistory_PolicyNum");
            viewString.Append("ber, \r\n            T.Effective AS PolicyLearnedFieldsHistory_Effective, \r\n      ");
            viewString.Append("      T.TrackFrom AS PolicyLearnedFieldsHistory_TrackFrom, \r\n            T.PAC A");
            viewString.Append("S PolicyLearnedFieldsHistory_PAC, \r\n            T.PMC AS PolicyLearnedFieldsHist");
            viewString.Append("ory_PMC, \r\n            T.ModalAvgPremium AS PolicyLearnedFieldsHistory_ModalAvgP");
            viewString.Append("remium, \r\n            T.PolicyModeId AS PolicyLearnedFieldsHistory_PolicyModeId,");
            viewString.Append(" \r\n            T.Enrolled AS PolicyLearnedFieldsHistory_Enrolled, \r\n            ");
            viewString.Append("T.Eligible AS PolicyLearnedFieldsHistory_Eligible, \r\n            T.AutoTerminati");
            viewString.Append("onDate AS PolicyLearnedFieldsHistory_AutoTerminationDate, \r\n            T.Link1 ");
            viewString.Append("AS PolicyLearnedFieldsHistory_Link1, \r\n            T.LastModifiedOn AS PolicyLea");
            viewString.Append("rnedFieldsHistory_LastModifiedOn, \r\n            T.LastModifiedUserCredentialid A");
            viewString.Append("S PolicyLearnedFieldsHistory_LastModifiedUserCredentialid, \r\n            T.Clien");
            viewString.Append("tID AS PolicyLearnedFieldsHistory_ClientID, \r\n            T.CompTypeID AS Policy");
            viewString.Append("LearnedFieldsHistory_CompTypeID, \r\n            T.PayorSysID AS PolicyLearnedFiel");
            viewString.Append("dsHistory_PayorSysID, \r\n            T.Renewal AS PolicyLearnedFieldsHistory_Rene");
            viewString.Append("wal, \r\n            T.SplitPercentage AS PolicyLearnedFieldsHistory_SplitPercenta");
            viewString.Append("ge, \r\n            T.CompScheduleType AS PolicyLearnedFieldsHistory_CompScheduleT");
            viewString.Append("ype, \r\n            T.CarrierId AS PolicyLearnedFieldsHistory_CarrierId, \r\n      ");
            viewString.Append("      T.CoverageId AS PolicyLearnedFieldsHistory_CoverageId, \r\n            T.Pay");
            viewString.Append("orId AS PolicyLearnedFieldsHistory_PayorId, \r\n            T.PreviousEffectiveDat");
            viewString.Append("e AS PolicyLearnedFieldsHistory_PreviousEffectiveDate, \r\n            T.PreviousP");
            viewString.Append("olicyModeId AS PolicyLearnedFieldsHistory_PreviousPolicyModeId, \r\n            T.");
            viewString.Append("CarrierNickName AS PolicyLearnedFieldsHistory_CarrierNickName, \r\n            T.C");
            viewString.Append("overageNickName AS PolicyLearnedFieldsHistory_CoverageNickName, \r\n            T.");
            viewString.Append("Advance AS PolicyLearnedFieldsHistory_Advance, \r\n            T.ProductType AS Po");
            viewString.Append("licyLearnedFieldsHistory_ProductType, \r\n            T.ImportPolicyID AS PolicyLe");
            viewString.Append("arnedFieldsHistory_ImportPolicyID, \r\n            True AS _from0\r\n        FROM Mo");
            viewString.Append("delStoreContainer.PolicyLearnedFieldsHistory AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyLearnedFieldsHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.CoverageNickNames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.CoverageNickNames", @"
    SELECT VALUE -- Constructing CoverageNickNames
        [Model.CoverageNickName](T1.CoverageNickName_CoverageNickID, T1.CoverageNickName_PayorId, T1.CoverageNickName_CarrierId, T1.CoverageNickName_CoverageId, T1.CoverageNickName_NickName, T1.CoverageNickName_CreatedBy, T1.CoverageNickName_ModifiedBy, T1.CoverageNickName_ModifiedOn, T1.CoverageNickName_IsDeleted, T1.CoverageNickName_CreatedOn)
    FROM (
        SELECT 
            T.CoverageNickID AS CoverageNickName_CoverageNickID, 
            T.PayorId AS CoverageNickName_PayorId, 
            T.CarrierId AS CoverageNickName_CarrierId, 
            T.CoverageId AS CoverageNickName_CoverageId, 
            T.NickName AS CoverageNickName_NickName, 
            T.CreatedBy AS CoverageNickName_CreatedBy, 
            T.ModifiedBy AS CoverageNickName_ModifiedBy, 
            T.ModifiedOn AS CoverageNickName_ModifiedOn, 
            T.IsDeleted AS CoverageNickName_IsDeleted, 
            T.CreatedOn AS CoverageNickName_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.CoverageNickName AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyOutgoingPayments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyOutgoingPayments", @"
    SELECT VALUE -- Constructing PolicyOutgoingPayments
        [Model.PolicyOutgoingPayment](T1.PolicyOutgoingPayment_OutgoingPaymentId, T1.PolicyOutgoingPayment_PaymentEntryId, T1.PolicyOutgoingPayment_RecipientUserCredentialId, T1.PolicyOutgoingPayment_PaidAmount, T1.PolicyOutgoingPayment_CreatedOn, T1.PolicyOutgoingPayment_IsPaid, T1.PolicyOutgoingPayment_Premium, T1.PolicyOutgoingPayment_OutgoingPerUnit, T1.PolicyOutgoingPayment_Payment)
    FROM (
        SELECT 
            T.OutgoingPaymentId AS PolicyOutgoingPayment_OutgoingPaymentId, 
            T.PaymentEntryId AS PolicyOutgoingPayment_PaymentEntryId, 
            T.RecipientUserCredentialId AS PolicyOutgoingPayment_RecipientUserCredentialId, 
            T.PaidAmount AS PolicyOutgoingPayment_PaidAmount, 
            T.CreatedOn AS PolicyOutgoingPayment_CreatedOn, 
            T.IsPaid AS PolicyOutgoingPayment_IsPaid, 
            T.Premium AS PolicyOutgoingPayment_Premium, 
            T.OutgoingPerUnit AS PolicyOutgoingPayment_OutgoingPerUnit, 
            T.Payment AS PolicyOutgoingPayment_Payment, 
            True AS _from0
        FROM ModelStoreContainer.PolicyOutgoingPayments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.CarrierCoverage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.CarrierCoverage", @"
    SELECT VALUE -- Constructing CarrierCoverage
        [Model.CarrierCoverage](T3.CarrierCoverage_Carriers, T3.CarrierCoverage_Coverages)
    FROM (
        SELECT -- Constructing Carriers
            CreateRef(CommissionDepartmentEntities.Carriers, row(T2.CarrierCoverage_Carriers_CarrierId), [Model.Carrier]) AS CarrierCoverage_Carriers, 
            T2.CarrierCoverage_Coverages
        FROM (
            SELECT -- Constructing Coverages
                T1.CarrierCoverage_Carriers_CarrierId, 
                CreateRef(CommissionDepartmentEntities.Coverages, row(T1.CarrierCoverage_Coverages_CoverageId), [Model.Coverage]) AS CarrierCoverage_Coverages
            FROM (
                SELECT 
                    T.CarrierId AS CarrierCoverage_Carriers_CarrierId, 
                    T.CoverageId AS CarrierCoverage_Coverages_CoverageId, 
                    True AS _from0
                FROM ModelStoreContainer.CarrierCoverage AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LinkedAgent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LinkedAgent", @"
    SELECT VALUE -- Constructing LinkedAgent
        [Model.LinkedAgent](T3.LinkedAgent_UserCredentials, T3.LinkedAgent_UserCredentials1)
    FROM (
        SELECT -- Constructing UserCredentials
            CreateRef(CommissionDepartmentEntities.UserCredentials, row(T2.LinkedAgent_UserCredentials_UserCredentialId), [Model.UserCredential]) AS LinkedAgent_UserCredentials, 
            T2.LinkedAgent_UserCredentials1
        FROM (
            SELECT -- Constructing UserCredentials1
                T1.LinkedAgent_UserCredentials_UserCredentialId, 
                CreateRef(CommissionDepartmentEntities.UserCredentials, row(T1.LinkedAgent_UserCredentials1_UserCredentialId), [Model.UserCredential]) AS LinkedAgent_UserCredentials1
            FROM (
                SELECT 
                    T.UserConnectedID AS LinkedAgent_UserCredentials_UserCredentialId, 
                    T.UserID AS LinkedAgent_UserCredentials1_UserCredentialId, 
                    True AS _from0
                FROM ModelStoreContainer.LinkedAgent AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Issuelog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Issuelog", @"
    SELECT VALUE -- Constructing Issuelog
        [Model.Store.Issuelog](T1.Issuelog_IssueId, T1.Issuelog_Issue)
    FROM (
        SELECT 
            T.IssueId AS Issuelog_IssueId, 
            T.Issue AS Issuelog_Issue, 
            True AS _from0
        FROM CommissionDepartmentEntities.Issuelogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Issuelogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Issuelogs", @"
    SELECT VALUE -- Constructing Issuelogs
        [Model.Issuelog](T1.Issuelog_IssueId, T1.Issuelog_Issue)
    FROM (
        SELECT 
            T.IssueId AS Issuelog_IssueId, 
            T.Issue AS Issuelog_Issue, 
            True AS _from0
        FROM ModelStoreContainer.Issuelog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LicenseePayorSiteInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LicenseePayorSiteInfo", @"
    SELECT VALUE -- Constructing LicenseePayorSiteInfo
        [Model.Store.LicenseePayorSiteInfo](T1.LicenseePayorSiteInfo_LicenseePayorSiteInfoId, T1.LicenseePayorSiteInfo_LicenseePayorId, T1.LicenseePayorSiteInfo_UserName, T1.LicenseePayorSiteInfo_UserPassword)
    FROM (
        SELECT 
            T.LicenseePayorSiteInfoId AS LicenseePayorSiteInfo_LicenseePayorSiteInfoId, 
            T.LicenseePayorId AS LicenseePayorSiteInfo_LicenseePayorId, 
            T.UserName AS LicenseePayorSiteInfo_UserName, 
            T.UserPassword AS LicenseePayorSiteInfo_UserPassword, 
            True AS _from0
        FROM CommissionDepartmentEntities.LicenseePayorSiteInfoes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LicenseePayorSiteInfoes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LicenseePayorSiteInfoes", @"
    SELECT VALUE -- Constructing LicenseePayorSiteInfoes
        [Model.LicenseePayorSiteInfo](T1.LicenseePayorSiteInfo_LicenseePayorSiteInfoId, T1.LicenseePayorSiteInfo_LicenseePayorId, T1.LicenseePayorSiteInfo_UserName, T1.LicenseePayorSiteInfo_UserPassword)
    FROM (
        SELECT 
            T.LicenseePayorSiteInfoId AS LicenseePayorSiteInfo_LicenseePayorSiteInfoId, 
            T.LicenseePayorId AS LicenseePayorSiteInfo_LicenseePayorId, 
            T.UserName AS LicenseePayorSiteInfo_UserName, 
            T.UserPassword AS LicenseePayorSiteInfo_UserPassword, 
            True AS _from0
        FROM ModelStoreContainer.LicenseePayorSiteInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterAlertTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView146()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterAlertTypes", @"
    SELECT VALUE -- Constructing MasterAlertTypes
        [Model.Store.MasterAlertTypes](T1.MasterAlertTypes_AlertTypeId, T1.MasterAlertTypes_Name, T1.MasterAlertTypes_Description)
    FROM (
        SELECT 
            T.AlertTypeId AS MasterAlertTypes_AlertTypeId, 
            T.Name AS MasterAlertTypes_Name, 
            T.Description AS MasterAlertTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterAlertTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterAlertTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView147()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterAlertTypes", @"
    SELECT VALUE -- Constructing MasterAlertTypes
        [Model.MasterAlertType](T1.MasterAlertType_AlertTypeId, T1.MasterAlertType_Name, T1.MasterAlertType_Description)
    FROM (
        SELECT 
            T.AlertTypeId AS MasterAlertType_AlertTypeId, 
            T.Name AS MasterAlertType_Name, 
            T.Description AS MasterAlertType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterAlertTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterBasicIncomingSchedule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterBasicIncomingSchedule", @"
    SELECT VALUE -- Constructing MasterBasicIncomingSchedule
        [Model.Store.MasterBasicIncomingSchedule](T1.MasterBasicIncomingSchedule_ScheduleId, T1.MasterBasicIncomingSchedule_Name, T1.MasterBasicIncomingSchedule_Description)
    FROM (
        SELECT 
            T.ScheduleId AS MasterBasicIncomingSchedule_ScheduleId, 
            T.Name AS MasterBasicIncomingSchedule_Name, 
            T.Description AS MasterBasicIncomingSchedule_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterBasicIncomingSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyIncomingSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView149()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyIncomingSchedules", @"
    SELECT VALUE -- Constructing PolicyIncomingSchedules
        [Model.Store.PolicyIncomingSchedules](T1.PolicyIncomingSchedules_IncomingScheduleId, T1.PolicyIncomingSchedules_PolicyId, T1.PolicyIncomingSchedules_FirstYearPercentage, T1.PolicyIncomingSchedules_RenewalPercentage, T1.PolicyIncomingSchedules_ScheduleTypeId)
    FROM (
        SELECT 
            T.IncomingScheduleId AS PolicyIncomingSchedules_IncomingScheduleId, 
            T.PolicyId AS PolicyIncomingSchedules_PolicyId, 
            T.FirstYearPercentage AS PolicyIncomingSchedules_FirstYearPercentage, 
            T.RenewalPercentage AS PolicyIncomingSchedules_RenewalPercentage, 
            T.ScheduleTypeId AS PolicyIncomingSchedules_ScheduleTypeId, 
            True AS _from0
        FROM CommissionDepartmentEntities.PolicyIncomingSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterBasicIncomingSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterBasicIncomingSchedules", @"
    SELECT VALUE -- Constructing MasterBasicIncomingSchedules
        [Model.MasterBasicIncomingSchedule](T1.MasterBasicIncomingSchedule_ScheduleId, T1.MasterBasicIncomingSchedule_Name, T1.MasterBasicIncomingSchedule_Description)
    FROM (
        SELECT 
            T.ScheduleId AS MasterBasicIncomingSchedule_ScheduleId, 
            T.Name AS MasterBasicIncomingSchedule_Name, 
            T.Description AS MasterBasicIncomingSchedule_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterBasicIncomingSchedule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyIncomingSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView151()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyIncomingSchedules", @"
    SELECT VALUE -- Constructing PolicyIncomingSchedules
        [Model.PolicyIncomingSchedule](T1.PolicyIncomingSchedule_IncomingScheduleId, T1.PolicyIncomingSchedule_PolicyId, T1.PolicyIncomingSchedule_FirstYearPercentage, T1.PolicyIncomingSchedule_RenewalPercentage, T1.PolicyIncomingSchedule_ScheduleTypeId)
    FROM (
        SELECT 
            T.IncomingScheduleId AS PolicyIncomingSchedule_IncomingScheduleId, 
            T.PolicyId AS PolicyIncomingSchedule_PolicyId, 
            T.FirstYearPercentage AS PolicyIncomingSchedule_FirstYearPercentage, 
            T.RenewalPercentage AS PolicyIncomingSchedule_RenewalPercentage, 
            T.ScheduleTypeId AS PolicyIncomingSchedule_ScheduleTypeId, 
            True AS _from0
        FROM ModelStoreContainer.PolicyIncomingSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterBatchDownloadStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterBatchDownloadStatus", @"
    SELECT VALUE -- Constructing MasterBatchDownloadStatus
        [Model.Store.MasterBatchDownloadStatus](T1.MasterBatchDownloadStatus_BatchDownloadStatusId, T1.MasterBatchDownloadStatus_Name, T1.MasterBatchDownloadStatus_Description)
    FROM (
        SELECT 
            T.BatchDownloadStatusId AS MasterBatchDownloadStatus_BatchDownloadStatusId, 
            T.Name AS MasterBatchDownloadStatus_Name, 
            T.Description AS MasterBatchDownloadStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterBatchDownloadStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterBatchDownloadStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView153()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterBatchDownloadStatus", @"
    SELECT VALUE -- Constructing MasterBatchDownloadStatus
        [Model.MasterBatchDownloadStatu](T1.MasterBatchDownloadStatu_BatchDownloadStatusId, T1.MasterBatchDownloadStatu_Name, T1.MasterBatchDownloadStatu_Description)
    FROM (
        SELECT 
            T.BatchDownloadStatusId AS MasterBatchDownloadStatu_BatchDownloadStatusId, 
            T.Name AS MasterBatchDownloadStatu_Name, 
            T.Description AS MasterBatchDownloadStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterBatchDownloadStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterBillPaymentTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView154()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterBillPaymentTypes", @"
    SELECT VALUE -- Constructing MasterBillPaymentTypes
        [Model.Store.MasterBillPaymentTypes](T1.MasterBillPaymentTypes_BillPaymentTypeId, T1.MasterBillPaymentTypes_Name, T1.MasterBillPaymentTypes_Description)
    FROM (
        SELECT 
            T.BillPaymentTypeId AS MasterBillPaymentTypes_BillPaymentTypeId, 
            T.Name AS MasterBillPaymentTypes_Name, 
            T.Description AS MasterBillPaymentTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterBillPaymentTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterBillPaymentTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterBillPaymentTypes", @"
    SELECT VALUE -- Constructing MasterBillPaymentTypes
        [Model.MasterBillPaymentType](T1.MasterBillPaymentType_BillPaymentTypeId, T1.MasterBillPaymentType_Name, T1.MasterBillPaymentType_Description)
    FROM (
        SELECT 
            T.BillPaymentTypeId AS MasterBillPaymentType_BillPaymentTypeId, 
            T.Name AS MasterBillPaymentType_Name, 
            T.Description AS MasterBillPaymentType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterBillPaymentTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterIssueCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterIssueCategories", @"
    SELECT VALUE -- Constructing MasterIssueCategories
        [Model.Store.MasterIssueCategories](T1.MasterIssueCategories_IssueCategoryId, T1.MasterIssueCategories_Name, T1.MasterIssueCategories_Description)
    FROM (
        SELECT 
            T.IssueCategoryId AS MasterIssueCategories_IssueCategoryId, 
            T.Name AS MasterIssueCategories_Name, 
            T.Description AS MasterIssueCategories_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterIssueCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterIssueReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterIssueReasons", @"
    SELECT VALUE -- Constructing MasterIssueReasons
        [Model.Store.MasterIssueReasons](T1.MasterIssueReasons_IssueReasonId, T1.MasterIssueReasons_Name, T1.MasterIssueReasons_Description)
    FROM (
        SELECT 
            T.IssueReasonId AS MasterIssueReasons_IssueReasonId, 
            T.Name AS MasterIssueReasons_Name, 
            T.Description AS MasterIssueReasons_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterIssueReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterIssueResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterIssueResults", @"
    SELECT VALUE -- Constructing MasterIssueResults
        [Model.Store.MasterIssueResults](T1.MasterIssueResults_IssueResultId, T1.MasterIssueResults_Name, T1.MasterIssueResults_Description)
    FROM (
        SELECT 
            T.IssueResultId AS MasterIssueResults_IssueResultId, 
            T.Name AS MasterIssueResults_Name, 
            T.Description AS MasterIssueResults_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterIssueResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterIssueStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView159()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterIssueStatus", @"
    SELECT VALUE -- Constructing MasterIssueStatus
        [Model.Store.MasterIssueStatus](T1.MasterIssueStatus_IssueStatusId, T1.MasterIssueStatus_Name, T1.MasterIssueStatus_Description)
    FROM (
        SELECT 
            T.IssueStatusId AS MasterIssueStatus_IssueStatusId, 
            T.Name AS MasterIssueStatus_Name, 
            T.Description AS MasterIssueStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterIssueStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.FollowupIssues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView160()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.FollowupIssues", "\r\n    SELECT VALUE -- Constructing FollowupIssues\r\n        [Model.Store.FollowupI" +
                    "ssues](T1.FollowupIssues_IssueId, T1.FollowupIssues_IssueCategoryId, T1.Followup" +
                    "Issues_IssueStatusId, T1.FollowupIssues_IssueResultId, T1.FollowupIssues_IssueRe" +
                    "asonId, T1.FollowupIssues_Notes, T1.FollowupIssues_InvoiceDate, T1.FollowupIssue" +
                    "s_NextFollowUpDate, T1.FollowupIssues_Payment, T1.FollowupIssues_PolicyId, T1.Fo" +
                    "llowupIssues_PreviousStatusId, T1.FollowupIssues_LastModifiedDate, T1.FollowupIs" +
                    "sues_IssueTrackNumber, T1.FollowupIssues_CreatedDate, T1.FollowupIssues_Modified" +
                    "By, T1.FollowupIssues_FromDate, T1.FollowupIssues_ToDate, T1.FollowupIssues_IsDe" +
                    "leted, T1.FollowupIssues_IsPMCVariance)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.IssueId AS FollowupIssues_IssueId, \r\n            T.IssueCategoryId AS Follow" +
                    "upIssues_IssueCategoryId, \r\n            T.IssueStatusId AS FollowupIssues_IssueS" +
                    "tatusId, \r\n            T.IssueResultId AS FollowupIssues_IssueResultId, \r\n      " +
                    "      T.IssueReasonId AS FollowupIssues_IssueReasonId, \r\n            T.Notes AS " +
                    "FollowupIssues_Notes, \r\n            T.InvoiceDate AS FollowupIssues_InvoiceDate," +
                    " \r\n            T.NextFollowUpDate AS FollowupIssues_NextFollowUpDate, \r\n        " +
                    "    T.Payment AS FollowupIssues_Payment, \r\n            T.PolicyId AS FollowupIss" +
                    "ues_PolicyId, \r\n            T.PreviousStatusId AS FollowupIssues_PreviousStatusI" +
                    "d, \r\n            T.LastModifiedDate AS FollowupIssues_LastModifiedDate, \r\n      " +
                    "      T.IssueTrackNumber AS FollowupIssues_IssueTrackNumber, \r\n            T.Cre" +
                    "atedDate AS FollowupIssues_CreatedDate, \r\n            T.ModifiedBy AS FollowupIs" +
                    "sues_ModifiedBy, \r\n            T.FromDate AS FollowupIssues_FromDate, \r\n        " +
                    "    T.ToDate AS FollowupIssues_ToDate, \r\n            T.IsDeleted AS FollowupIssu" +
                    "es_IsDeleted, \r\n            T.IsPMCVariance AS FollowupIssues_IsPMCVariance, \r\n " +
                    "           True AS _from0\r\n        FROM CommissionDepartmentEntities.FollowupIss" +
                    "ues AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterIssueCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterIssueCategories", @"
    SELECT VALUE -- Constructing MasterIssueCategories
        [Model.MasterIssueCategory](T1.MasterIssueCategory_IssueCategoryId, T1.MasterIssueCategory_Name, T1.MasterIssueCategory_Description)
    FROM (
        SELECT 
            T.IssueCategoryId AS MasterIssueCategory_IssueCategoryId, 
            T.Name AS MasterIssueCategory_Name, 
            T.Description AS MasterIssueCategory_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterIssueCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterIssueReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterIssueReasons", @"
    SELECT VALUE -- Constructing MasterIssueReasons
        [Model.MasterIssueReason](T1.MasterIssueReason_IssueReasonId, T1.MasterIssueReason_Name, T1.MasterIssueReason_Description)
    FROM (
        SELECT 
            T.IssueReasonId AS MasterIssueReason_IssueReasonId, 
            T.Name AS MasterIssueReason_Name, 
            T.Description AS MasterIssueReason_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterIssueReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterIssueResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterIssueResults", @"
    SELECT VALUE -- Constructing MasterIssueResults
        [Model.MasterIssueResult](T1.MasterIssueResult_IssueResultId, T1.MasterIssueResult_Name, T1.MasterIssueResult_Description)
    FROM (
        SELECT 
            T.IssueResultId AS MasterIssueResult_IssueResultId, 
            T.Name AS MasterIssueResult_Name, 
            T.Description AS MasterIssueResult_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterIssueResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterIssueStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView164()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterIssueStatus", @"
    SELECT VALUE -- Constructing MasterIssueStatus
        [Model.MasterIssueStatu](T1.MasterIssueStatu_IssueStatusId, T1.MasterIssueStatu_Name, T1.MasterIssueStatu_Description)
    FROM (
        SELECT 
            T.IssueStatusId AS MasterIssueStatu_IssueStatusId, 
            T.Name AS MasterIssueStatu_Name, 
            T.Description AS MasterIssueStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterIssueStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.FollowupIssues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.FollowupIssues", "\r\n    SELECT VALUE -- Constructing FollowupIssues\r\n        [Model.FollowupIssue](" +
                    "T1.FollowupIssue_IssueId, T1.FollowupIssue_IssueCategoryId, T1.FollowupIssue_Iss" +
                    "ueStatusId, T1.FollowupIssue_IssueResultId, T1.FollowupIssue_IssueReasonId, T1.F" +
                    "ollowupIssue_Notes, T1.FollowupIssue_InvoiceDate, T1.FollowupIssue_NextFollowUpD" +
                    "ate, T1.FollowupIssue_Payment, T1.FollowupIssue_PolicyId, T1.FollowupIssue_Previ" +
                    "ousStatusId, T1.FollowupIssue_LastModifiedDate, T1.FollowupIssue_IssueTrackNumbe" +
                    "r, T1.FollowupIssue_CreatedDate, T1.FollowupIssue_ModifiedBy, T1.FollowupIssue_F" +
                    "romDate, T1.FollowupIssue_ToDate, T1.FollowupIssue_IsDeleted, T1.FollowupIssue_I" +
                    "sPMCVariance)\r\n    FROM (\r\n        SELECT \r\n            T.IssueId AS FollowupIss" +
                    "ue_IssueId, \r\n            T.IssueCategoryId AS FollowupIssue_IssueCategoryId, \r\n" +
                    "            T.IssueStatusId AS FollowupIssue_IssueStatusId, \r\n            T.Issu" +
                    "eResultId AS FollowupIssue_IssueResultId, \r\n            T.IssueReasonId AS Follo" +
                    "wupIssue_IssueReasonId, \r\n            T.Notes AS FollowupIssue_Notes, \r\n        " +
                    "    T.InvoiceDate AS FollowupIssue_InvoiceDate, \r\n            T.NextFollowUpDate" +
                    " AS FollowupIssue_NextFollowUpDate, \r\n            T.Payment AS FollowupIssue_Pay" +
                    "ment, \r\n            T.PolicyId AS FollowupIssue_PolicyId, \r\n            T.Previo" +
                    "usStatusId AS FollowupIssue_PreviousStatusId, \r\n            T.LastModifiedDate A" +
                    "S FollowupIssue_LastModifiedDate, \r\n            T.IssueTrackNumber AS FollowupIs" +
                    "sue_IssueTrackNumber, \r\n            T.CreatedDate AS FollowupIssue_CreatedDate, " +
                    "\r\n            T.ModifiedBy AS FollowupIssue_ModifiedBy, \r\n            T.FromDate" +
                    " AS FollowupIssue_FromDate, \r\n            T.ToDate AS FollowupIssue_ToDate, \r\n  " +
                    "          T.IsDeleted AS FollowupIssue_IsDeleted, \r\n            T.IsPMCVariance " +
                    "AS FollowupIssue_IsPMCVariance, \r\n            True AS _from0\r\n        FROM Model" +
                    "StoreContainer.FollowupIssues AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterManagementReportsOrderByTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView166()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterManagementReportsOrderByTypes", @"
    SELECT VALUE -- Constructing MasterManagementReportsOrderByTypes
        [Model.Store.MasterManagementReportsOrderByTypes](T1.MasterManagementReportsOrderByTypes_MROrderByTypeId, T1.MasterManagementReportsOrderByTypes_Name, T1.MasterManagementReportsOrderByTypes_Description)
    FROM (
        SELECT 
            T.MROrderByTypeId AS MasterManagementReportsOrderByTypes_MROrderByTypeId, 
            T.Name AS MasterManagementReportsOrderByTypes_Name, 
            T.Description AS MasterManagementReportsOrderByTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterManagementReportsOrderByTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterManagementReportsOrderByTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView167()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterManagementReportsOrderByTypes", @"
    SELECT VALUE -- Constructing MasterManagementReportsOrderByTypes
        [Model.MasterManagementReportsOrderByType](T1.MasterManagementReportsOrderByType_MROrderByTypeId, T1.MasterManagementReportsOrderByType_Name, T1.MasterManagementReportsOrderByType_Description)
    FROM (
        SELECT 
            T.MROrderByTypeId AS MasterManagementReportsOrderByType_MROrderByTypeId, 
            T.Name AS MasterManagementReportsOrderByType_Name, 
            T.Description AS MasterManagementReportsOrderByType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterManagementReportsOrderByTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPasswordHintQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView168()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPasswordHintQuestions", @"
    SELECT VALUE -- Constructing MasterPasswordHintQuestions
        [Model.Store.MasterPasswordHintQuestions](T1.MasterPasswordHintQuestions_PHQuestionId, T1.MasterPasswordHintQuestions_Qestion)
    FROM (
        SELECT 
            T.PHQuestionId AS MasterPasswordHintQuestions_PHQuestionId, 
            T.Qestion AS MasterPasswordHintQuestions_Qestion, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPasswordHintQuestions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPasswordHintQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView169()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPasswordHintQuestions", @"
    SELECT VALUE -- Constructing MasterPasswordHintQuestions
        [Model.MasterPasswordHintQuestion](T1.MasterPasswordHintQuestion_PHQuestionId, T1.MasterPasswordHintQuestion_Qestion)
    FROM (
        SELECT 
            T.PHQuestionId AS MasterPasswordHintQuestion_PHQuestionId, 
            T.Qestion AS MasterPasswordHintQuestion_Qestion, 
            True AS _from0
        FROM ModelStoreContainer.MasterPasswordHintQuestions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPaymentStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView170()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPaymentStatus", @"
    SELECT VALUE -- Constructing MasterPaymentStatus
        [Model.Store.MasterPaymentStatus](T1.MasterPaymentStatus_PaymentStatusId, T1.MasterPaymentStatus_Name, T1.MasterPaymentStatus_Description)
    FROM (
        SELECT 
            T.PaymentStatusId AS MasterPaymentStatus_PaymentStatusId, 
            T.Name AS MasterPaymentStatus_Name, 
            T.Description AS MasterPaymentStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPaymentStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPaymentStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView171()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPaymentStatus", @"
    SELECT VALUE -- Constructing MasterPaymentStatus
        [Model.MasterPaymentStatu](T1.MasterPaymentStatu_PaymentStatusId, T1.MasterPaymentStatu_Name, T1.MasterPaymentStatu_Description)
    FROM (
        SELECT 
            T.PaymentStatusId AS MasterPaymentStatu_PaymentStatusId, 
            T.Name AS MasterPaymentStatu_Name, 
            T.Description AS MasterPaymentStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPaymentStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorSourceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorSourceTypes", @"
    SELECT VALUE -- Constructing MasterPayorSourceTypes
        [Model.Store.MasterPayorSourceTypes](T1.MasterPayorSourceTypes_SourceTypeId, T1.MasterPayorSourceTypes_Name, T1.MasterPayorSourceTypes_Description)
    FROM (
        SELECT 
            T.SourceTypeId AS MasterPayorSourceTypes_SourceTypeId, 
            T.Name AS MasterPayorSourceTypes_Name, 
            T.Description AS MasterPayorSourceTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorSourceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorSourceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorSourceTypes", @"
    SELECT VALUE -- Constructing MasterPayorSourceTypes
        [Model.MasterPayorSourceType](T1.MasterPayorSourceType_SourceTypeId, T1.MasterPayorSourceType_Name, T1.MasterPayorSourceType_Description)
    FROM (
        SELECT 
            T.SourceTypeId AS MasterPayorSourceType_SourceTypeId, 
            T.Name AS MasterPayorSourceType_Name, 
            T.Description AS MasterPayorSourceType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorSourceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorStatus", @"
    SELECT VALUE -- Constructing MasterPayorStatus
        [Model.Store.MasterPayorStatus](T1.MasterPayorStatus_PayorStatusId, T1.MasterPayorStatus_Name, T1.MasterPayorStatus_Description)
    FROM (
        SELECT 
            T.PayorStatusId AS MasterPayorStatus_PayorStatusId, 
            T.Name AS MasterPayorStatus_Name, 
            T.Description AS MasterPayorStatus_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorStatus", @"
    SELECT VALUE -- Constructing MasterPayorStatus
        [Model.MasterPayorStatu](T1.MasterPayorStatu_PayorStatusId, T1.MasterPayorStatu_Name, T1.MasterPayorStatu_Description)
    FROM (
        SELECT 
            T.PayorStatusId AS MasterPayorStatu_PayorStatusId, 
            T.Name AS MasterPayorStatu_Name, 
            T.Description AS MasterPayorStatu_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorToolIncomingFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorToolIncomingFields", @"
    SELECT VALUE -- Constructing MasterPayorToolIncomingFields
        [Model.Store.MasterPayorToolIncomingFields](T1.MasterPayorToolIncomingFields_PTIncomingFieldId, T1.MasterPayorToolIncomingFields_Name, T1.MasterPayorToolIncomingFields_Description, T1.MasterPayorToolIncomingFields_Type)
    FROM (
        SELECT 
            T.PTIncomingFieldId AS MasterPayorToolIncomingFields_PTIncomingFieldId, 
            T.Name AS MasterPayorToolIncomingFields_Name, 
            T.Description AS MasterPayorToolIncomingFields_Description, 
            T.Type AS MasterPayorToolIncomingFields_Type, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorToolIncomingFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorToolIncomingFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorToolIncomingFields", @"
    SELECT VALUE -- Constructing MasterPayorToolIncomingFields
        [Model.MasterPayorToolIncomingField](T1.MasterPayorToolIncomingField_PTIncomingFieldId, T1.MasterPayorToolIncomingField_Name, T1.MasterPayorToolIncomingField_Description, T1.MasterPayorToolIncomingField_Type)
    FROM (
        SELECT 
            T.PTIncomingFieldId AS MasterPayorToolIncomingField_PTIncomingFieldId, 
            T.Name AS MasterPayorToolIncomingField_Name, 
            T.Description AS MasterPayorToolIncomingField_Description, 
            T.Type AS MasterPayorToolIncomingField_Type, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorToolIncomingFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorToolLearnedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorToolLearnedFields", @"
    SELECT VALUE -- Constructing MasterPayorToolLearnedFields
        [Model.Store.MasterPayorToolLearnedFields](T1.MasterPayorToolLearnedFields_PTLearnedFieldId, T1.MasterPayorToolLearnedFields_Name, T1.MasterPayorToolLearnedFields_Description, T1.MasterPayorToolLearnedFields_Type)
    FROM (
        SELECT 
            T.PTLearnedFieldId AS MasterPayorToolLearnedFields_PTLearnedFieldId, 
            T.Name AS MasterPayorToolLearnedFields_Name, 
            T.Description AS MasterPayorToolLearnedFields_Description, 
            T.Type AS MasterPayorToolLearnedFields_Type, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorToolLearnedFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorToolLearnedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView179()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorToolLearnedFields", @"
    SELECT VALUE -- Constructing MasterPayorToolLearnedFields
        [Model.MasterPayorToolLearnedField](T1.MasterPayorToolLearnedField_PTLearnedFieldId, T1.MasterPayorToolLearnedField_Name, T1.MasterPayorToolLearnedField_Description, T1.MasterPayorToolLearnedField_Type)
    FROM (
        SELECT 
            T.PTLearnedFieldId AS MasterPayorToolLearnedField_PTLearnedFieldId, 
            T.Name AS MasterPayorToolLearnedField_Name, 
            T.Description AS MasterPayorToolLearnedField_Description, 
            T.Type AS MasterPayorToolLearnedField_Type, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorToolLearnedFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPayorTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPayorTypes", @"
    SELECT VALUE -- Constructing MasterPayorTypes
        [Model.Store.MasterPayorTypes](T1.MasterPayorTypes_PayorType, T1.MasterPayorTypes_Name, T1.MasterPayorTypes_Description)
    FROM (
        SELECT 
            T.PayorType AS MasterPayorTypes_PayorType, 
            T.Name AS MasterPayorTypes_Name, 
            T.Description AS MasterPayorTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPayorTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPayorTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPayorTypes", @"
    SELECT VALUE -- Constructing MasterPayorTypes
        [Model.MasterPayorType](T1.MasterPayorType_PayorType, T1.MasterPayorType_Name, T1.MasterPayorType_Description)
    FROM (
        SELECT 
            T.PayorType AS MasterPayorType_PayorType, 
            T.Name AS MasterPayorType_Name, 
            T.Description AS MasterPayorType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPayorTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterPermissionTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterPermissionTypes", @"
    SELECT VALUE -- Constructing MasterPermissionTypes
        [Model.Store.MasterPermissionTypes](T1.MasterPermissionTypes_PermissionTypeId, T1.MasterPermissionTypes_Name, T1.MasterPermissionTypes_Description)
    FROM (
        SELECT 
            T.PermissionTypeId AS MasterPermissionTypes_PermissionTypeId, 
            T.Name AS MasterPermissionTypes_Name, 
            T.Description AS MasterPermissionTypes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterPermissionTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterPermissionTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterPermissionTypes", @"
    SELECT VALUE -- Constructing MasterPermissionTypes
        [Model.MasterPermissionType](T1.MasterPermissionType_PermissionTypeId, T1.MasterPermissionType_Name, T1.MasterPermissionType_Description)
    FROM (
        SELECT 
            T.PermissionTypeId AS MasterPermissionType_PermissionTypeId, 
            T.Name AS MasterPermissionType_Name, 
            T.Description AS MasterPermissionType_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterPermissionTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterReportList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterReportList", @"
    SELECT VALUE -- Constructing MasterReportList
        [Model.Store.MasterReportList](T1.MasterReportList_ReportId, T1.MasterReportList_ReportCode, T1.MasterReportList_ReportName, T1.MasterReportList_ReportGroupName, T1.MasterReportList_ReportDescription, T1.MasterReportList_IsVisible)
    FROM (
        SELECT 
            T.ReportId AS MasterReportList_ReportId, 
            T.ReportCode AS MasterReportList_ReportCode, 
            T.ReportName AS MasterReportList_ReportName, 
            T.ReportGroupName AS MasterReportList_ReportGroupName, 
            T.ReportDescription AS MasterReportList_ReportDescription, 
            CAST(NULL AS [Edm.Boolean]) AS MasterReportList_IsVisible, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterReportLists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterReportLists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterReportLists", @"
    SELECT VALUE -- Constructing MasterReportLists
        [Model.MasterReportList](T1.MasterReportList_ReportId, T1.MasterReportList_ReportCode, T1.MasterReportList_ReportName, T1.MasterReportList_ReportGroupName, T1.MasterReportList_ReportDescription)
    FROM (
        SELECT 
            T.ReportId AS MasterReportList_ReportId, 
            T.ReportCode AS MasterReportList_ReportCode, 
            T.ReportName AS MasterReportList_ReportName, 
            T.ReportGroupName AS MasterReportList_ReportGroupName, 
            T.ReportDescription AS MasterReportList_ReportDescription, 
            True AS _from0
        FROM ModelStoreContainer.MasterReportList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterServicePaymentModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterServicePaymentModes", @"
    SELECT VALUE -- Constructing MasterServicePaymentModes
        [Model.Store.MasterServicePaymentModes](T1.MasterServicePaymentModes_SPModeId, T1.MasterServicePaymentModes_Name, T1.MasterServicePaymentModes_Description)
    FROM (
        SELECT 
            T.SPModeId AS MasterServicePaymentModes_SPModeId, 
            T.Name AS MasterServicePaymentModes_Name, 
            T.Description AS MasterServicePaymentModes_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterServicePaymentModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterServicePaymentModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterServicePaymentModes", @"
    SELECT VALUE -- Constructing MasterServicePaymentModes
        [Model.MasterServicePaymentMode](T1.MasterServicePaymentMode_SPModeId, T1.MasterServicePaymentMode_Name, T1.MasterServicePaymentMode_Description)
    FROM (
        SELECT 
            T.SPModeId AS MasterServicePaymentMode_SPModeId, 
            T.Name AS MasterServicePaymentMode_Name, 
            T.Description AS MasterServicePaymentMode_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterServicePaymentModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterSystemConstants
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterSystemConstants", @"
    SELECT VALUE -- Constructing MasterSystemConstants
        [Model.Store.MasterSystemConstants](T1.MasterSystemConstants_SystemConstantId, T1.MasterSystemConstants_Name, T1.MasterSystemConstants_Value, T1.MasterSystemConstants_Description)
    FROM (
        SELECT 
            T.SystemConstantId AS MasterSystemConstants_SystemConstantId, 
            T.Name AS MasterSystemConstants_Name, 
            T.[Value] AS MasterSystemConstants_Value, 
            T.Description AS MasterSystemConstants_Description, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterSystemConstants AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterSystemConstants
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterSystemConstants", @"
    SELECT VALUE -- Constructing MasterSystemConstants
        [Model.MasterSystemConstant](T1.MasterSystemConstant_SystemConstantId, T1.MasterSystemConstant_Name, T1.MasterSystemConstant_Value, T1.MasterSystemConstant_Description)
    FROM (
        SELECT 
            T.SystemConstantId AS MasterSystemConstant_SystemConstantId, 
            T.Name AS MasterSystemConstant_Name, 
            T.[Value] AS MasterSystemConstant_Value, 
            T.Description AS MasterSystemConstant_Description, 
            True AS _from0
        FROM ModelStoreContainer.MasterSystemConstants AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterSystemEmails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterSystemEmails", @"
    SELECT VALUE -- Constructing MasterSystemEmails
        [Model.Store.MasterSystemEmails](T1.MasterSystemEmails_SystemEmailId, T1.MasterSystemEmails_Email, T1.MasterSystemEmails_Purpose)
    FROM (
        SELECT 
            T.SystemEmailId AS MasterSystemEmails_SystemEmailId, 
            T.Email AS MasterSystemEmails_Email, 
            T.Purpose AS MasterSystemEmails_Purpose, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterSystemEmails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterSystemEmails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterSystemEmails", @"
    SELECT VALUE -- Constructing MasterSystemEmails
        [Model.MasterSystemEmail](T1.MasterSystemEmail_SystemEmailId, T1.MasterSystemEmail_Email, T1.MasterSystemEmail_Purpose)
    FROM (
        SELECT 
            T.SystemEmailId AS MasterSystemEmail_SystemEmailId, 
            T.Email AS MasterSystemEmail_Email, 
            T.Purpose AS MasterSystemEmail_Purpose, 
            True AS _from0
        FROM ModelStoreContainer.MasterSystemEmails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.MasterZipCodes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.MasterZipCodes", @"
    SELECT VALUE -- Constructing MasterZipCodes
        [Model.Store.MasterZipCodes](T1.MasterZipCodes_ZipCode, T1.MasterZipCodes_City, T1.MasterZipCodes_State)
    FROM (
        SELECT 
            T.ZipCode AS MasterZipCodes_ZipCode, 
            T.City AS MasterZipCodes_City, 
            T.State AS MasterZipCodes_State, 
            True AS _from0
        FROM CommissionDepartmentEntities.MasterZipCodes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.MasterZipCodes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.MasterZipCodes", @"
    SELECT VALUE -- Constructing MasterZipCodes
        [Model.MasterZipCode](T1.MasterZipCode_ZipCode, T1.MasterZipCode_City, T1.MasterZipCode_State)
    FROM (
        SELECT 
            T.ZipCode AS MasterZipCode_ZipCode, 
            T.City AS MasterZipCode_City, 
            T.State AS MasterZipCode_State, 
            True AS _from0
        FROM ModelStoreContainer.MasterZipCodes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.News
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.News", @"
    SELECT VALUE -- Constructing News
        [Model.Store.News](T1.News_NewsId, T1.News_NewsTtitle, T1.News_NewsContent, T1.News_CreatedOn, T1.News_LastModifiedOn, T1.News_IsDeleted)
    FROM (
        SELECT 
            T.NewsId AS News_NewsId, 
            T.NewsTtitle AS News_NewsTtitle, 
            T.NewsContent AS News_NewsContent, 
            T.CreatedOn AS News_CreatedOn, 
            T.LastModifiedOn AS News_LastModifiedOn, 
            T.IsDeleted AS News_IsDeleted, 
            True AS _from0
        FROM CommissionDepartmentEntities.News AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.News
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.News", @"
    SELECT VALUE -- Constructing News
        [Model.News](T1.News_NewsId, T1.News_NewsTtitle, T1.News_NewsContent, T1.News_CreatedOn, T1.News_LastModifiedOn, T1.News_IsDeleted)
    FROM (
        SELECT 
            T.NewsId AS News_NewsId, 
            T.NewsTtitle AS News_NewsTtitle, 
            T.NewsContent AS News_NewsContent, 
            T.CreatedOn AS News_CreatedOn, 
            T.LastModifiedOn AS News_LastModifiedOn, 
            T.IsDeleted AS News_IsDeleted, 
            True AS _from0
        FROM ModelStoreContainer.News AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyNotes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView196()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyNotes", @"
    SELECT VALUE -- Constructing PolicyNotes
        [Model.Store.PolicyNotes](T1.PolicyNotes_PolicyNoteId, T1.PolicyNotes_PolicyId, T1.PolicyNotes_Note, T1.PolicyNotes_CreatedOn, T1.PolicyNotes_LastModifiedOn)
    FROM (
        SELECT 
            T.PolicyNoteId AS PolicyNotes_PolicyNoteId, 
            T.PolicyId AS PolicyNotes_PolicyId, 
            T.Note AS PolicyNotes_Note, 
            T.CreatedOn AS PolicyNotes_CreatedOn, 
            T.LastModifiedOn AS PolicyNotes_LastModifiedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.PolicyNotes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyNotes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView197()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyNotes", @"
    SELECT VALUE -- Constructing PolicyNotes
        [Model.PolicyNote](T1.PolicyNote_PolicyNoteId, T1.PolicyNote_PolicyId, T1.PolicyNote_Note, T1.PolicyNote_CreatedOn, T1.PolicyNote_LastModifiedOn)
    FROM (
        SELECT 
            T.PolicyNoteId AS PolicyNote_PolicyNoteId, 
            T.PolicyId AS PolicyNote_PolicyId, 
            T.Note AS PolicyNote_Note, 
            T.CreatedOn AS PolicyNote_CreatedOn, 
            T.LastModifiedOn AS PolicyNote_LastModifiedOn, 
            True AS _from0
        FROM ModelStoreContainer.PolicyNotes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PolicyPaymentAlerts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView198()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PolicyPaymentAlerts", @"
    SELECT VALUE -- Constructing PolicyPaymentAlerts
        [Model.Store.PolicyPaymentAlerts](T1.PolicyPaymentAlerts_PaymentAlertId, T1.PolicyPaymentAlerts_PaymentEntryId, T1.PolicyPaymentAlerts_AlertTypeId, T1.PolicyPaymentAlerts_UserCredentialId, T1.PolicyPaymentAlerts_CreatedOn)
    FROM (
        SELECT 
            T.PaymentAlertId AS PolicyPaymentAlerts_PaymentAlertId, 
            T.PaymentEntryId AS PolicyPaymentAlerts_PaymentEntryId, 
            T.AlertTypeId AS PolicyPaymentAlerts_AlertTypeId, 
            T.UserCredentialId AS PolicyPaymentAlerts_UserCredentialId, 
            T.CreatedOn AS PolicyPaymentAlerts_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.PolicyPaymentAlerts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PolicyPaymentAlerts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView199()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PolicyPaymentAlerts", @"
    SELECT VALUE -- Constructing PolicyPaymentAlerts
        [Model.PolicyPaymentAlert](T1.PolicyPaymentAlert_PaymentAlertId, T1.PolicyPaymentAlert_PaymentEntryId, T1.PolicyPaymentAlert_AlertTypeId, T1.PolicyPaymentAlert_UserCredentialId, T1.PolicyPaymentAlert_CreatedOn)
    FROM (
        SELECT 
            T.PaymentAlertId AS PolicyPaymentAlert_PaymentAlertId, 
            T.PaymentEntryId AS PolicyPaymentAlert_PaymentEntryId, 
            T.AlertTypeId AS PolicyPaymentAlert_AlertTypeId, 
            T.UserCredentialId AS PolicyPaymentAlert_UserCredentialId, 
            T.CreatedOn AS PolicyPaymentAlert_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.PolicyPaymentAlerts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Supports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Supports", @"
    SELECT VALUE -- Constructing Supports
        [Model.Store.Supports](T1.Supports_SupportFileId, T1.Supports_SupportFileName, T1.Supports_ContentDescription, T1.Supports_CreatedOn, T1.Supports_LastModifiedOn)
    FROM (
        SELECT 
            T.SupportFileId AS Supports_SupportFileId, 
            T.SupportFileName AS Supports_SupportFileName, 
            T.ContentDescription AS Supports_ContentDescription, 
            T.CreatedOn AS Supports_CreatedOn, 
            T.LastModifiedOn AS Supports_LastModifiedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.Supports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.Supports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView201()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.Supports", @"
    SELECT VALUE -- Constructing Supports
        [Model.Support](T1.Support_SupportFileId, T1.Support_SupportFileName, T1.Support_ContentDescription, T1.Support_CreatedOn, T1.Support_LastModifiedOn)
    FROM (
        SELECT 
            T.SupportFileId AS Support_SupportFileId, 
            T.SupportFileName AS Support_SupportFileName, 
            T.ContentDescription AS Support_ContentDescription, 
            T.CreatedOn AS Support_CreatedOn, 
            T.LastModifiedOn AS Support_LastModifiedOn, 
            True AS _from0
        FROM ModelStoreContainer.Supports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [Model.Store.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM CommissionDepartmentEntities.sysdiagrams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView203()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [Model.sysdiagram](T1.sysdiagram_name, T1.[sysdiagram.principal_id], T1.[sysdiagram.diagram_id], T1.sysdiagram_version, T1.sysdiagram_definition)
    FROM (
        SELECT 
            T.name AS sysdiagram_name, 
            T.principal_id AS [sysdiagram.principal_id], 
            T.diagram_id AS [sysdiagram.diagram_id], 
            T.version AS sysdiagram_version, 
            T.definition AS sysdiagram_definition, 
            True AS _from0
        FROM ModelStoreContainer.sysdiagrams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.SendAlertMail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView204()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.SendAlertMail", @"
    SELECT VALUE -- Constructing SendAlertMail
        [Model.Store.SendAlertMail](T1.SendAlertMail_ID, T1.SendAlertMail_LicensesID, T1.SendAlertMail_MailDate, T1.SendAlertMail_SendStatus)
    FROM (
        SELECT 
            T.ID AS SendAlertMail_ID, 
            T.LicensesID AS SendAlertMail_LicensesID, 
            T.MailDate AS SendAlertMail_MailDate, 
            T.SendStatus AS SendAlertMail_SendStatus, 
            True AS _from0
        FROM CommissionDepartmentEntities.SendAlertMails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.SendAlertMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView205()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.SendAlertMails", @"
    SELECT VALUE -- Constructing SendAlertMails
        [Model.SendAlertMail](T1.SendAlertMail_ID, T1.SendAlertMail_LicensesID, T1.SendAlertMail_MailDate, T1.SendAlertMail_SendStatus)
    FROM (
        SELECT 
            T.ID AS SendAlertMail_ID, 
            T.LicensesID AS SendAlertMail_LicensesID, 
            T.MailDate AS SendAlertMail_MailDate, 
            T.SendStatus AS SendAlertMail_SendStatus, 
            True AS _from0
        FROM ModelStoreContainer.SendAlertMail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.AuditReports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView206()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.AuditReports", @"
    SELECT VALUE -- Constructing AuditReports
        [Model.Store.AuditReports](T1.AuditReports_ReportId, T1.AuditReports_LicenceID, T1.AuditReports_Payor, T1.AuditReports_Payee, T1.AuditReports_Reports, T1.AuditReports_InvoiceFrom, T1.AuditReports_InvoiceTo, T1.AuditReports_OrderBy, T1.AuditReports_ReportOn, T1.AuditReports_FilterBy)
    FROM (
        SELECT 
            T.ReportId AS AuditReports_ReportId, 
            T.LicenceID AS AuditReports_LicenceID, 
            T.Payor AS AuditReports_Payor, 
            T.Payee AS AuditReports_Payee, 
            T.Reports AS AuditReports_Reports, 
            T.InvoiceFrom AS AuditReports_InvoiceFrom, 
            T.InvoiceTo AS AuditReports_InvoiceTo, 
            T.OrderBy AS AuditReports_OrderBy, 
            T.ReportOn AS AuditReports_ReportOn, 
            T.FilterBy AS AuditReports_FilterBy, 
            True AS _from0
        FROM CommissionDepartmentEntities.AuditReports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.AuditReports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.AuditReports", @"
    SELECT VALUE -- Constructing AuditReports
        [Model.AuditReport](T1.AuditReport_ReportId, T1.AuditReport_LicenceID, T1.AuditReport_Payor, T1.AuditReport_Payee, T1.AuditReport_Reports, T1.AuditReport_InvoiceFrom, T1.AuditReport_InvoiceTo, T1.AuditReport_OrderBy, T1.AuditReport_ReportOn, T1.AuditReport_FilterBy)
    FROM (
        SELECT 
            T.ReportId AS AuditReport_ReportId, 
            T.LicenceID AS AuditReport_LicenceID, 
            T.Payor AS AuditReport_Payor, 
            T.Payee AS AuditReport_Payee, 
            T.Reports AS AuditReport_Reports, 
            T.InvoiceFrom AS AuditReport_InvoiceFrom, 
            T.InvoiceTo AS AuditReport_InvoiceTo, 
            T.OrderBy AS AuditReport_OrderBy, 
            T.ReportOn AS AuditReport_ReportOn, 
            T.FilterBy AS AuditReport_FilterBy, 
            True AS _from0
        FROM ModelStoreContainer.AuditReports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ManagementReports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView208()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2764);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ManagementReports\r\n        [Model.Store.Manag");
            viewString.Append("ementReports](T1.ManagementReports_ReportId, T1.ManagementReports_LicenceID, T1.");
            viewString.Append("ManagementReports_Payor, T1.ManagementReports_Carrier, T1.ManagementReports_Prod");
            viewString.Append("uct, T1.ManagementReports_Payee, T1.ManagementReports_Reports, T1.ManagementRepo");
            viewString.Append("rts_OrderBy, T1.ManagementReports_PolicyType, T1.ManagementReports_PolicyMode, T");
            viewString.Append("1.ManagementReports_TrackPayment, T1.ManagementReports_EffectiveFrom, T1.Managem");
            viewString.Append("entReports_EffectiveTo, T1.ManagementReports_TrackFrom, T1.ManagementReports_Tra");
            viewString.Append("ckTo, T1.ManagementReports_TermFrom, T1.ManagementReports_TermTo, T1.ManagementR");
            viewString.Append("eports_TermReason, T1.ManagementReports_PremiumFrom, T1.ManagementReports_Premiu");
            viewString.Append("mTo, T1.ManagementReports_EnrolledFrom, T1.ManagementReports_EnrolledTo, T1.Mana");
            viewString.Append("gementReports_EligibleFrom, T1.ManagementReports_EligibleTo, T1.ManagementReport");
            viewString.Append("s_ReportOn, T1.ManagementReports_InvoiceFrom, T1.ManagementReports_InvoiceTo, T1");
            viewString.Append(".ManagementReports_EffectiveMonth)\r\n    FROM (\r\n        SELECT \r\n            T.R");
            viewString.Append("eportId AS ManagementReports_ReportId, \r\n            T.LicenceID AS ManagementRe");
            viewString.Append("ports_LicenceID, \r\n            T.Payor AS ManagementReports_Payor, \r\n           ");
            viewString.Append(" T.Carrier AS ManagementReports_Carrier, \r\n            T.Product AS ManagementRe");
            viewString.Append("ports_Product, \r\n            T.Payee AS ManagementReports_Payee, \r\n            T");
            viewString.Append(".Reports AS ManagementReports_Reports, \r\n            T.OrderBy AS ManagementRepo");
            viewString.Append("rts_OrderBy, \r\n            T.PolicyType AS ManagementReports_PolicyType, \r\n     ");
            viewString.Append("       T.PolicyMode AS ManagementReports_PolicyMode, \r\n            T.TrackPaymen");
            viewString.Append("t AS ManagementReports_TrackPayment, \r\n            T.EffectiveFrom AS Management");
            viewString.Append("Reports_EffectiveFrom, \r\n            T.EffectiveTo AS ManagementReports_Effectiv");
            viewString.Append("eTo, \r\n            T.TrackFrom AS ManagementReports_TrackFrom, \r\n            T.T");
            viewString.Append("rackTo AS ManagementReports_TrackTo, \r\n            T.TermFrom AS ManagementRepor");
            viewString.Append("ts_TermFrom, \r\n            T.TermTo AS ManagementReports_TermTo, \r\n            T");
            viewString.Append(".TermReason AS ManagementReports_TermReason, \r\n            T.PremiumFrom AS Mana");
            viewString.Append("gementReports_PremiumFrom, \r\n            T.PremiumTo AS ManagementReports_Premiu");
            viewString.Append("mTo, \r\n            T.EnrolledFrom AS ManagementReports_EnrolledFrom, \r\n         ");
            viewString.Append("   T.EnrolledTo AS ManagementReports_EnrolledTo, \r\n            T.EligibleFrom AS");
            viewString.Append(" ManagementReports_EligibleFrom, \r\n            T.EligibleTo AS ManagementReports");
            viewString.Append("_EligibleTo, \r\n            T.ReportOn AS ManagementReports_ReportOn, \r\n         ");
            viewString.Append("   T.InvoiceFrom AS ManagementReports_InvoiceFrom, \r\n            T.InvoiceTo AS ");
            viewString.Append("ManagementReports_InvoiceTo, \r\n            T.EffectiveMonth AS ManagementReports");
            viewString.Append("_EffectiveMonth, \r\n            True AS _from0\r\n        FROM CommissionDepartment");
            viewString.Append("Entities.ManagementReports AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ManagementReports", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ManagementReports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView209()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2692);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ManagementReports\r\n        [Model.ManagementR");
            viewString.Append("eport](T1.ManagementReport_ReportId, T1.ManagementReport_LicenceID, T1.Managemen");
            viewString.Append("tReport_Payor, T1.ManagementReport_Carrier, T1.ManagementReport_Product, T1.Mana");
            viewString.Append("gementReport_Payee, T1.ManagementReport_Reports, T1.ManagementReport_OrderBy, T1");
            viewString.Append(".ManagementReport_PolicyType, T1.ManagementReport_PolicyMode, T1.ManagementRepor");
            viewString.Append("t_TrackPayment, T1.ManagementReport_EffectiveFrom, T1.ManagementReport_Effective");
            viewString.Append("To, T1.ManagementReport_TrackFrom, T1.ManagementReport_TrackTo, T1.ManagementRep");
            viewString.Append("ort_TermFrom, T1.ManagementReport_TermTo, T1.ManagementReport_TermReason, T1.Man");
            viewString.Append("agementReport_PremiumFrom, T1.ManagementReport_PremiumTo, T1.ManagementReport_En");
            viewString.Append("rolledFrom, T1.ManagementReport_EnrolledTo, T1.ManagementReport_EligibleFrom, T1");
            viewString.Append(".ManagementReport_EligibleTo, T1.ManagementReport_ReportOn, T1.ManagementReport_");
            viewString.Append("InvoiceFrom, T1.ManagementReport_InvoiceTo, T1.ManagementReport_EffectiveMonth)\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.ReportId AS ManagementReport_ReportI");
            viewString.Append("d, \r\n            T.LicenceID AS ManagementReport_LicenceID, \r\n            T.Payo");
            viewString.Append("r AS ManagementReport_Payor, \r\n            T.Carrier AS ManagementReport_Carrier");
            viewString.Append(", \r\n            T.Product AS ManagementReport_Product, \r\n            T.Payee AS ");
            viewString.Append("ManagementReport_Payee, \r\n            T.Reports AS ManagementReport_Reports, \r\n ");
            viewString.Append("           T.OrderBy AS ManagementReport_OrderBy, \r\n            T.PolicyType AS ");
            viewString.Append("ManagementReport_PolicyType, \r\n            T.PolicyMode AS ManagementReport_Poli");
            viewString.Append("cyMode, \r\n            T.TrackPayment AS ManagementReport_TrackPayment, \r\n       ");
            viewString.Append("     T.EffectiveFrom AS ManagementReport_EffectiveFrom, \r\n            T.Effectiv");
            viewString.Append("eTo AS ManagementReport_EffectiveTo, \r\n            T.TrackFrom AS ManagementRepo");
            viewString.Append("rt_TrackFrom, \r\n            T.TrackTo AS ManagementReport_TrackTo, \r\n           ");
            viewString.Append(" T.TermFrom AS ManagementReport_TermFrom, \r\n            T.TermTo AS ManagementRe");
            viewString.Append("port_TermTo, \r\n            T.TermReason AS ManagementReport_TermReason, \r\n      ");
            viewString.Append("      T.PremiumFrom AS ManagementReport_PremiumFrom, \r\n            T.PremiumTo A");
            viewString.Append("S ManagementReport_PremiumTo, \r\n            T.EnrolledFrom AS ManagementReport_E");
            viewString.Append("nrolledFrom, \r\n            T.EnrolledTo AS ManagementReport_EnrolledTo, \r\n      ");
            viewString.Append("      T.EligibleFrom AS ManagementReport_EligibleFrom, \r\n            T.EligibleT");
            viewString.Append("o AS ManagementReport_EligibleTo, \r\n            T.ReportOn AS ManagementReport_R");
            viewString.Append("eportOn, \r\n            T.InvoiceFrom AS ManagementReport_InvoiceFrom, \r\n        ");
            viewString.Append("    T.InvoiceTo AS ManagementReport_InvoiceTo, \r\n            T.EffectiveMonth AS");
            viewString.Append(" ManagementReport_EffectiveMonth, \r\n            True AS _from0\r\n        FROM Mod");
            viewString.Append("elStoreContainer.ManagementReports AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ManagementReports", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PayeeStatementReports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView210()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PayeeStatementReports", @"
    SELECT VALUE -- Constructing PayeeStatementReports
        [Model.Store.PayeeStatementReports](T1.PayeeStatementReports_ReportId, T1.PayeeStatementReports_LicenceID, T1.PayeeStatementReports_Batch, T1.PayeeStatementReports_Payee, T1.PayeeStatementReports_Reports, T1.PayeeStatementReports_PaymentType, T1.PayeeStatementReports_ReportOn, T1.PayeeStatementReports_Zero, T1.PayeeStatementReports_IsSplit, T1.PayeeStatementReports_IsPayorRate, T1.PayeeStatementReports_IsSubTotal)
    FROM (
        SELECT 
            T.ReportId AS PayeeStatementReports_ReportId, 
            T.LicenceID AS PayeeStatementReports_LicenceID, 
            T.Batch AS PayeeStatementReports_Batch, 
            T.Payee AS PayeeStatementReports_Payee, 
            T.Reports AS PayeeStatementReports_Reports, 
            T.PaymentType AS PayeeStatementReports_PaymentType, 
            T.ReportOn AS PayeeStatementReports_ReportOn, 
            T.Zero AS PayeeStatementReports_Zero, 
            T.IsSplit AS PayeeStatementReports_IsSplit, 
            T.IsPayorRate AS PayeeStatementReports_IsPayorRate, 
            T.IsSubTotal AS PayeeStatementReports_IsSubTotal, 
            True AS _from0
        FROM CommissionDepartmentEntities.PayeeStatementReports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PayeeStatementReports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PayeeStatementReports", @"
    SELECT VALUE -- Constructing PayeeStatementReports
        [Model.PayeeStatementReport](T1.PayeeStatementReport_ReportId, T1.PayeeStatementReport_LicenceID, T1.PayeeStatementReport_Batch, T1.PayeeStatementReport_Payee, T1.PayeeStatementReport_Reports, T1.PayeeStatementReport_PaymentType, T1.PayeeStatementReport_ReportOn, T1.PayeeStatementReport_Zero, T1.PayeeStatementReport_IsSplit, T1.PayeeStatementReport_IsPayorRate, T1.PayeeStatementReport_IsSubTotal)
    FROM (
        SELECT 
            T.ReportId AS PayeeStatementReport_ReportId, 
            T.LicenceID AS PayeeStatementReport_LicenceID, 
            T.Batch AS PayeeStatementReport_Batch, 
            T.Payee AS PayeeStatementReport_Payee, 
            T.Reports AS PayeeStatementReport_Reports, 
            T.PaymentType AS PayeeStatementReport_PaymentType, 
            T.ReportOn AS PayeeStatementReport_ReportOn, 
            T.Zero AS PayeeStatementReport_Zero, 
            T.IsSplit AS PayeeStatementReport_IsSplit, 
            T.IsPayorRate AS PayeeStatementReport_IsPayorRate, 
            T.IsSubTotal AS PayeeStatementReport_IsSubTotal, 
            True AS _from0
        FROM ModelStoreContainer.PayeeStatementReports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.BrokerCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView212()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.BrokerCode", @"
    SELECT VALUE -- Constructing BrokerCode
        [Model.Store.BrokerCode](T1.BrokerCode_Id, T1.BrokerCode_LicenseeId, T1.BrokerCode_PayorId, T1.BrokerCode_Code, T1.BrokerCode_Createddate, T1.BrokerCode_LastModifiedDate)
    FROM (
        SELECT 
            T.Id AS BrokerCode_Id, 
            T.LicenseeId AS BrokerCode_LicenseeId, 
            T.PayorId AS BrokerCode_PayorId, 
            T.Code AS BrokerCode_Code, 
            T.Createddate AS BrokerCode_Createddate, 
            T.LastModifiedDate AS BrokerCode_LastModifiedDate, 
            True AS _from0
        FROM CommissionDepartmentEntities.BrokerCodes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.BrokerCodes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.BrokerCodes", @"
    SELECT VALUE -- Constructing BrokerCodes
        [Model.BrokerCode](T1.BrokerCode_Id, T1.BrokerCode_LicenseeId, T1.BrokerCode_PayorId, T1.BrokerCode_Code, T1.BrokerCode_Createddate, T1.BrokerCode_LastModifiedDate)
    FROM (
        SELECT 
            T.Id AS BrokerCode_Id, 
            T.LicenseeId AS BrokerCode_LicenseeId, 
            T.PayorId AS BrokerCode_PayorId, 
            T.Code AS BrokerCode_Code, 
            T.Createddate AS BrokerCode_Createddate, 
            T.LastModifiedDate AS BrokerCode_LastModifiedDate, 
            True AS _from0
        FROM ModelStoreContainer.BrokerCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.LinkedUserList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.LinkedUserList", @"
    SELECT VALUE -- Constructing LinkedUserList
        [Model.Store.LinkedUserList](T1.LinkedUserList_ID, T1.LinkedUserList_UserID, T1.LinkedUserList_LinkedUserID, T1.LinkedUserList_CreatedOn)
    FROM (
        SELECT 
            T.ID AS LinkedUserList_ID, 
            T.UserID AS LinkedUserList_UserID, 
            T.LinkedUserID AS LinkedUserList_LinkedUserID, 
            T.CreatedOn AS LinkedUserList_CreatedOn, 
            True AS _from0
        FROM CommissionDepartmentEntities.LinkedUserLists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.LinkedUserLists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView215()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.LinkedUserLists", @"
    SELECT VALUE -- Constructing LinkedUserLists
        [Model.LinkedUserList](T1.LinkedUserList_ID, T1.LinkedUserList_UserID, T1.LinkedUserList_LinkedUserID, T1.LinkedUserList_CreatedOn)
    FROM (
        SELECT 
            T.ID AS LinkedUserList_ID, 
            T.UserID AS LinkedUserList_UserID, 
            T.LinkedUserID AS LinkedUserList_LinkedUserID, 
            T.CreatedOn AS LinkedUserList_CreatedOn, 
            True AS _from0
        FROM ModelStoreContainer.LinkedUserList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolBrokersSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView216()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolBrokersSetting", @"
    SELECT VALUE -- Constructing ImportToolBrokersSetting
        [Model.Store.ImportToolBrokersSetting](T1.ImportToolBrokersSetting_ID, T1.ImportToolBrokersSetting_FixedRows, T1.ImportToolBrokersSetting_FixedColumns, T1.ImportToolBrokersSetting_RelativeSearchtext, T1.ImportToolBrokersSetting_RelativeRows, T1.ImportToolBrokersSetting_RelativeColumns)
    FROM (
        SELECT 
            T.ID AS ImportToolBrokersSetting_ID, 
            T.FixedRows AS ImportToolBrokersSetting_FixedRows, 
            T.FixedColumns AS ImportToolBrokersSetting_FixedColumns, 
            T.RelativeSearchtext AS ImportToolBrokersSetting_RelativeSearchtext, 
            T.RelativeRows AS ImportToolBrokersSetting_RelativeRows, 
            T.RelativeColumns AS ImportToolBrokersSetting_RelativeColumns, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportToolBrokersSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolBrokersSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView217()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolBrokersSettings", @"
    SELECT VALUE -- Constructing ImportToolBrokersSettings
        [Model.ImportToolBrokersSetting](T1.ImportToolBrokersSetting_ID, T1.ImportToolBrokersSetting_FixedRows, T1.ImportToolBrokersSetting_FixedColumns, T1.ImportToolBrokersSetting_RelativeSearchtext, T1.ImportToolBrokersSetting_RelativeRows, T1.ImportToolBrokersSetting_RelativeColumns)
    FROM (
        SELECT 
            T.ID AS ImportToolBrokersSetting_ID, 
            T.FixedRows AS ImportToolBrokersSetting_FixedRows, 
            T.FixedColumns AS ImportToolBrokersSetting_FixedColumns, 
            T.RelativeSearchtext AS ImportToolBrokersSetting_RelativeSearchtext, 
            T.RelativeRows AS ImportToolBrokersSetting_RelativeRows, 
            T.RelativeColumns AS ImportToolBrokersSetting_RelativeColumns, 
            True AS _from0
        FROM ModelStoreContainer.ImportToolBrokersSetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolMasterStatementData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView218()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolMasterStatementData", @"
    SELECT VALUE -- Constructing ImportToolMasterStatementData
        [Model.Store.ImportToolMasterStatementData](T1.ImportToolMasterStatementData_ID, T1.ImportToolMasterStatementData_Statementdata, T1.ImportToolMasterStatementData_StatementDataType)
    FROM (
        SELECT 
            T.ID AS ImportToolMasterStatementData_ID, 
            T.Statementdata AS ImportToolMasterStatementData_Statementdata, 
            T.StatementDataType AS ImportToolMasterStatementData_StatementDataType, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportToolMasterStatementDatas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolMasterStatementDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolMasterStatementDatas", @"
    SELECT VALUE -- Constructing ImportToolMasterStatementDatas
        [Model.ImportToolMasterStatementData](T1.ImportToolMasterStatementData_ID, T1.ImportToolMasterStatementData_Statementdata, T1.ImportToolMasterStatementData_StatementDataType)
    FROM (
        SELECT 
            T.ID AS ImportToolMasterStatementData_ID, 
            T.Statementdata AS ImportToolMasterStatementData_Statementdata, 
            T.StatementDataType AS ImportToolMasterStatementData_StatementDataType, 
            True AS _from0
        FROM ModelStoreContainer.ImportToolMasterStatementData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolTemplatePhrase
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolTemplatePhrase", @"
    SELECT VALUE -- Constructing ImportToolTemplatePhrase
        [Model.Store.ImportToolTemplatePhrase](T1.ImportToolTemplatePhrase_ID, T1.ImportToolTemplatePhrase_StatementDataSettingsID, T1.ImportToolTemplatePhrase_MasterStatementDataID)
    FROM (
        SELECT 
            T.ID AS ImportToolTemplatePhrase_ID, 
            T.StatementDataSettingsID AS ImportToolTemplatePhrase_StatementDataSettingsID, 
            T.MasterStatementDataID AS ImportToolTemplatePhrase_MasterStatementDataID, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportToolTemplatePhrases AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolTemplatePhrases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView221()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolTemplatePhrases", @"
    SELECT VALUE -- Constructing ImportToolTemplatePhrases
        [Model.ImportToolTemplatePhrase](T1.ImportToolTemplatePhrase_ID, T1.ImportToolTemplatePhrase_StatementDataSettingsID, T1.ImportToolTemplatePhrase_MasterStatementDataID)
    FROM (
        SELECT 
            T.ID AS ImportToolTemplatePhrase_ID, 
            T.StatementDataSettingsID AS ImportToolTemplatePhrase_StatementDataSettingsID, 
            T.MasterStatementDataID AS ImportToolTemplatePhrase_MasterStatementDataID, 
            True AS _from0
        FROM ModelStoreContainer.ImportToolTemplatePhrase AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolPayorPhrase
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView222()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolPayorPhrase", "\r\n    SELECT VALUE -- Constructing ImportToolPayorPhrase\r\n        [Model.Store.Im" +
                    "portToolPayorPhrase](T1.ImportToolPayorPhrase_ID, T1.ImportToolPayorPhrase_Payor" +
                    "ID, T1.ImportToolPayorPhrase_PayorName, T1.ImportToolPayorPhrase_TemplateID, T1." +
                    "ImportToolPayorPhrase_TemplateName, T1.ImportToolPayorPhrase_FileType, T1.Import" +
                    "ToolPayorPhrase_FileFormat, T1.ImportToolPayorPhrase_FixedRowLocation, T1.Import" +
                    "ToolPayorPhrase_FixedColLocation, T1.ImportToolPayorPhrase_RelativeSearchText, T" +
                    "1.ImportToolPayorPhrase_RelativeRowLocation, T1.ImportToolPayorPhrase_RelativeCo" +
                    "lLocation, T1.ImportToolPayorPhrase_PayorPhrases)\r\n    FROM (\r\n        SELECT \r\n" +
                    "            T.ID AS ImportToolPayorPhrase_ID, \r\n            T.PayorID AS ImportT" +
                    "oolPayorPhrase_PayorID, \r\n            T.PayorName AS ImportToolPayorPhrase_Payor" +
                    "Name, \r\n            T.TemplateID AS ImportToolPayorPhrase_TemplateID, \r\n        " +
                    "    T.TemplateName AS ImportToolPayorPhrase_TemplateName, \r\n            T.FileTy" +
                    "pe AS ImportToolPayorPhrase_FileType, \r\n            T.FileFormat AS ImportToolPa" +
                    "yorPhrase_FileFormat, \r\n            T.FixedRowLocation AS ImportToolPayorPhrase_" +
                    "FixedRowLocation, \r\n            T.FixedColLocation AS ImportToolPayorPhrase_Fixe" +
                    "dColLocation, \r\n            T.RelativeSearchText AS ImportToolPayorPhrase_Relati" +
                    "veSearchText, \r\n            T.RelativeRowLocation AS ImportToolPayorPhrase_Relat" +
                    "iveRowLocation, \r\n            T.RelativeColLocation AS ImportToolPayorPhrase_Rel" +
                    "ativeColLocation, \r\n            T.PayorPhrases AS ImportToolPayorPhrase_PayorPhr" +
                    "ases, \r\n            True AS _from0\r\n        FROM CommissionDepartmentEntities.Im" +
                    "portToolPayorPhrases AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolPayorPhrases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView223()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolPayorPhrases", "\r\n    SELECT VALUE -- Constructing ImportToolPayorPhrases\r\n        [Model.ImportT" +
                    "oolPayorPhrase](T1.ImportToolPayorPhrase_ID, T1.ImportToolPayorPhrase_PayorID, T" +
                    "1.ImportToolPayorPhrase_PayorName, T1.ImportToolPayorPhrase_TemplateID, T1.Impor" +
                    "tToolPayorPhrase_TemplateName, T1.ImportToolPayorPhrase_FileType, T1.ImportToolP" +
                    "ayorPhrase_FileFormat, T1.ImportToolPayorPhrase_FixedRowLocation, T1.ImportToolP" +
                    "ayorPhrase_FixedColLocation, T1.ImportToolPayorPhrase_RelativeSearchText, T1.Imp" +
                    "ortToolPayorPhrase_RelativeRowLocation, T1.ImportToolPayorPhrase_RelativeColLoca" +
                    "tion, T1.ImportToolPayorPhrase_PayorPhrases)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.ID AS ImportToolPayorPhrase_ID, \r\n            T.PayorID AS ImportToolPa" +
                    "yorPhrase_PayorID, \r\n            T.PayorName AS ImportToolPayorPhrase_PayorName," +
                    " \r\n            T.TemplateID AS ImportToolPayorPhrase_TemplateID, \r\n            T" +
                    ".TemplateName AS ImportToolPayorPhrase_TemplateName, \r\n            T.FileType AS" +
                    " ImportToolPayorPhrase_FileType, \r\n            T.FileFormat AS ImportToolPayorPh" +
                    "rase_FileFormat, \r\n            T.FixedRowLocation AS ImportToolPayorPhrase_Fixed" +
                    "RowLocation, \r\n            T.FixedColLocation AS ImportToolPayorPhrase_FixedColL" +
                    "ocation, \r\n            T.RelativeSearchText AS ImportToolPayorPhrase_RelativeSea" +
                    "rchText, \r\n            T.RelativeRowLocation AS ImportToolPayorPhrase_RelativeRo" +
                    "wLocation, \r\n            T.RelativeColLocation AS ImportToolPayorPhrase_Relative" +
                    "ColLocation, \r\n            T.PayorPhrases AS ImportToolPayorPhrase_PayorPhrases," +
                    " \r\n            True AS _from0\r\n        FROM ModelStoreContainer.ImportToolPayorP" +
                    "hrase AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolSeletedPaymentData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView224()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolSeletedPaymentData", @"
    SELECT VALUE -- Constructing ImportToolSeletedPaymentData
        [Model.Store.ImportToolSeletedPaymentData](T1.ImportToolSeletedPaymentData_ID, T1.ImportToolSeletedPaymentData_PayorID, T1.ImportToolSeletedPaymentData_TemplateID, T1.ImportToolSeletedPaymentData_PayorToolAvailableFieldId, T1.ImportToolSeletedPaymentData_FieldID, T1.ImportToolSeletedPaymentData_FieldName)
    FROM (
        SELECT 
            T.ID AS ImportToolSeletedPaymentData_ID, 
            T.PayorID AS ImportToolSeletedPaymentData_PayorID, 
            T.TemplateID AS ImportToolSeletedPaymentData_TemplateID, 
            T.PayorToolAvailableFieldId AS ImportToolSeletedPaymentData_PayorToolAvailableFieldId, 
            T.FieldID AS ImportToolSeletedPaymentData_FieldID, 
            T.FieldName AS ImportToolSeletedPaymentData_FieldName, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportToolSeletedPaymentDatas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolSeletedPaymentDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolSeletedPaymentDatas", @"
    SELECT VALUE -- Constructing ImportToolSeletedPaymentDatas
        [Model.ImportToolSeletedPaymentData](T1.ImportToolSeletedPaymentData_ID, T1.ImportToolSeletedPaymentData_PayorID, T1.ImportToolSeletedPaymentData_TemplateID, T1.ImportToolSeletedPaymentData_PayorToolAvailableFieldId, T1.ImportToolSeletedPaymentData_FieldID, T1.ImportToolSeletedPaymentData_FieldName)
    FROM (
        SELECT 
            T.ID AS ImportToolSeletedPaymentData_ID, 
            T.PayorID AS ImportToolSeletedPaymentData_PayorID, 
            T.TemplateID AS ImportToolSeletedPaymentData_TemplateID, 
            T.PayorToolAvailableFieldId AS ImportToolSeletedPaymentData_PayorToolAvailableFieldId, 
            T.FieldID AS ImportToolSeletedPaymentData_FieldID, 
            T.FieldName AS ImportToolSeletedPaymentData_FieldName, 
            True AS _from0
        FROM ModelStoreContainer.ImportToolSeletedPaymentData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolStatementDataSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView226()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolStatementDataSettings", "\r\n    SELECT VALUE -- Constructing ImportToolStatementDataSettings\r\n        [Mode" +
                    "l.Store.ImportToolStatementDataSettings](T1.ImportToolStatementDataSettings_ID, " +
                    "T1.ImportToolStatementDataSettings_PayorID, T1.ImportToolStatementDataSettings_T" +
                    "emplateID, T1.ImportToolStatementDataSettings_MasterStatementDataID, T1.ImportTo" +
                    "olStatementDataSettings_FixedRowsLocation, T1.ImportToolStatementDataSettings_Fi" +
                    "xedColsLocation, T1.ImportToolStatementDataSettings_RelativeSearch, T1.ImportToo" +
                    "lStatementDataSettings_RelativeRowsLocation, T1.ImportToolStatementDataSettings_" +
                    "RelativeColsLocation, T1.ImportToolStatementDataSettings_IsBlankFieldsIndicatorA" +
                    "vailable, T1.ImportToolStatementDataSettings_BlankFieldsIndicator)\r\n    FROM (\r\n" +
                    "        SELECT \r\n            T.ID AS ImportToolStatementDataSettings_ID, \r\n     " +
                    "       T.PayorID AS ImportToolStatementDataSettings_PayorID, \r\n            T.Tem" +
                    "plateID AS ImportToolStatementDataSettings_TemplateID, \r\n            T.MasterSta" +
                    "tementDataID AS ImportToolStatementDataSettings_MasterStatementDataID, \r\n       " +
                    "     T.FixedRowsLocation AS ImportToolStatementDataSettings_FixedRowsLocation, \r" +
                    "\n            T.FixedColsLocation AS ImportToolStatementDataSettings_FixedColsLoc" +
                    "ation, \r\n            T.RelativeSearch AS ImportToolStatementDataSettings_Relativ" +
                    "eSearch, \r\n            T.RelativeRowsLocation AS ImportToolStatementDataSettings" +
                    "_RelativeRowsLocation, \r\n            T.RelativeColsLocation AS ImportToolStateme" +
                    "ntDataSettings_RelativeColsLocation, \r\n            T.IsBlankFieldsIndicatorAvail" +
                    "able AS ImportToolStatementDataSettings_IsBlankFieldsIndicatorAvailable, \r\n     " +
                    "       T.BlankFieldsIndicator AS ImportToolStatementDataSettings_BlankFieldsIndi" +
                    "cator, \r\n            True AS _from0\r\n        FROM CommissionDepartmentEntities.I" +
                    "mportToolStatementDataSettings AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolStatementDataSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView227()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolStatementDataSettings", "\r\n    SELECT VALUE -- Constructing ImportToolStatementDataSettings\r\n        [Mode" +
                    "l.ImportToolStatementDataSetting](T1.ImportToolStatementDataSetting_ID, T1.Impor" +
                    "tToolStatementDataSetting_PayorID, T1.ImportToolStatementDataSetting_TemplateID," +
                    " T1.ImportToolStatementDataSetting_MasterStatementDataID, T1.ImportToolStatement" +
                    "DataSetting_FixedRowsLocation, T1.ImportToolStatementDataSetting_FixedColsLocati" +
                    "on, T1.ImportToolStatementDataSetting_RelativeSearch, T1.ImportToolStatementData" +
                    "Setting_RelativeRowsLocation, T1.ImportToolStatementDataSetting_RelativeColsLoca" +
                    "tion, T1.ImportToolStatementDataSetting_IsBlankFieldsIndicatorAvailable, T1.Impo" +
                    "rtToolStatementDataSetting_BlankFieldsIndicator)\r\n    FROM (\r\n        SELECT \r\n " +
                    "           T.ID AS ImportToolStatementDataSetting_ID, \r\n            T.PayorID AS" +
                    " ImportToolStatementDataSetting_PayorID, \r\n            T.TemplateID AS ImportToo" +
                    "lStatementDataSetting_TemplateID, \r\n            T.MasterStatementDataID AS Impor" +
                    "tToolStatementDataSetting_MasterStatementDataID, \r\n            T.FixedRowsLocati" +
                    "on AS ImportToolStatementDataSetting_FixedRowsLocation, \r\n            T.FixedCol" +
                    "sLocation AS ImportToolStatementDataSetting_FixedColsLocation, \r\n            T.R" +
                    "elativeSearch AS ImportToolStatementDataSetting_RelativeSearch, \r\n            T." +
                    "RelativeRowsLocation AS ImportToolStatementDataSetting_RelativeRowsLocation, \r\n " +
                    "           T.RelativeColsLocation AS ImportToolStatementDataSetting_RelativeCols" +
                    "Location, \r\n            T.IsBlankFieldsIndicatorAvailable AS ImportToolStatement" +
                    "DataSetting_IsBlankFieldsIndicatorAvailable, \r\n            T.BlankFieldsIndicato" +
                    "r AS ImportToolStatementDataSetting_BlankFieldsIndicator, \r\n            True AS " +
                    "_from0\r\n        FROM ModelStoreContainer.ImportToolStatementDataSettings AS T\r\n " +
                    "   ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolPaymentDataFieldsSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView228()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3376);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ImportToolPaymentDataFieldsSettings\r\n        ");
            viewString.Append("[Model.Store.ImportToolPaymentDataFieldsSettings](T1.ImportToolPaymentDataFields");
            viewString.Append("Settings_ID, T1.ImportToolPaymentDataFieldsSettings_PayorID, T1.ImportToolPaymen");
            viewString.Append("tDataFieldsSettings_TemplateID, T1.ImportToolPaymentDataFieldsSettings_PayorTool");
            viewString.Append("AvailableFeildsID, T1.ImportToolPaymentDataFieldsSettings_FieldsID, T1.ImportToo");
            viewString.Append("lPaymentDataFieldsSettings_FieldsName, T1.ImportToolPaymentDataFieldsSettings_Fi");
            viewString.Append("xedRowLocation, T1.ImportToolPaymentDataFieldsSettings_FixedColLocation, T1.Impo");
            viewString.Append("rtToolPaymentDataFieldsSettings_HeaderSearch, T1.ImportToolPaymentDataFieldsSett");
            viewString.Append("ings_RelativeRowLocation, T1.ImportToolPaymentDataFieldsSettings_RelativeColLoca");
            viewString.Append("tion, T1.ImportToolPaymentDataFieldsSettings_PartOfPrimaryKey, T1.ImportToolPaym");
            viewString.Append("entDataFieldsSettings_CalculatedFields, T1.ImportToolPaymentDataFieldsSettings_F");
            viewString.Append("ormulaExpression, T1.ImportToolPaymentDataFieldsSettings_PayorToolMaskFieldTypeI");
            viewString.Append("d, T1.ImportToolPaymentDataFieldsSettings_StartRowLocation, T1.ImportToolPayment");
            viewString.Append("DataFieldsSettings_StartColLocation, T1.ImportToolPaymentDataFieldsSettings_EndR");
            viewString.Append("owLocation, T1.ImportToolPaymentDataFieldsSettings_EndColLocation, T1.ImportTool");
            viewString.Append("PaymentDataFieldsSettings_TransID, T1.ImportToolPaymentDataFieldsSettings_TransN");
            viewString.Append("ame, T1.ImportToolPaymentDataFieldsSettings_DefaultText)\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.ID AS ImportToolPaymentDataFieldsSettings_ID, \r\n           ");
            viewString.Append(" T.PayorID AS ImportToolPaymentDataFieldsSettings_PayorID, \r\n            T.Templ");
            viewString.Append("ateID AS ImportToolPaymentDataFieldsSettings_TemplateID, \r\n            T.PayorTo");
            viewString.Append("olAvailableFeildsID AS ImportToolPaymentDataFieldsSettings_PayorToolAvailableFei");
            viewString.Append("ldsID, \r\n            T.FieldsID AS ImportToolPaymentDataFieldsSettings_FieldsID,");
            viewString.Append(" \r\n            T.FieldsName AS ImportToolPaymentDataFieldsSettings_FieldsName, \r");
            viewString.Append("\n            T.FixedRowLocation AS ImportToolPaymentDataFieldsSettings_FixedRowL");
            viewString.Append("ocation, \r\n            T.FixedColLocation AS ImportToolPaymentDataFieldsSettings");
            viewString.Append("_FixedColLocation, \r\n            T.HeaderSearch AS ImportToolPaymentDataFieldsSe");
            viewString.Append("ttings_HeaderSearch, \r\n            T.RelativeRowLocation AS ImportToolPaymentDat");
            viewString.Append("aFieldsSettings_RelativeRowLocation, \r\n            T.RelativeColLocation AS Impo");
            viewString.Append("rtToolPaymentDataFieldsSettings_RelativeColLocation, \r\n            T.PartOfPrima");
            viewString.Append("ryKey AS ImportToolPaymentDataFieldsSettings_PartOfPrimaryKey, \r\n            T.C");
            viewString.Append("alculatedFields AS ImportToolPaymentDataFieldsSettings_CalculatedFields, \r\n     ");
            viewString.Append("       T.FormulaExpression AS ImportToolPaymentDataFieldsSettings_FormulaExpress");
            viewString.Append("ion, \r\n            T.PayorToolMaskFieldTypeId AS ImportToolPaymentDataFieldsSett");
            viewString.Append("ings_PayorToolMaskFieldTypeId, \r\n            T.StartRowLocation AS ImportToolPay");
            viewString.Append("mentDataFieldsSettings_StartRowLocation, \r\n            T.StartColLocation AS Imp");
            viewString.Append("ortToolPaymentDataFieldsSettings_StartColLocation, \r\n            T.EndRowLocatio");
            viewString.Append("n AS ImportToolPaymentDataFieldsSettings_EndRowLocation, \r\n            T.EndColL");
            viewString.Append("ocation AS ImportToolPaymentDataFieldsSettings_EndColLocation, \r\n            T.T");
            viewString.Append("ransID AS ImportToolPaymentDataFieldsSettings_TransID, \r\n            T.TransName");
            viewString.Append(" AS ImportToolPaymentDataFieldsSettings_TransName, \r\n            T.DefaultText A");
            viewString.Append("S ImportToolPaymentDataFieldsSettings_DefaultText, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM CommissionDepartmentEntities.ImportToolPaymentDataFieldsSettings A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolPaymentDataFieldsSettings", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolPaymentDataFieldsSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView229()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3316);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ImportToolPaymentDataFieldsSettings\r\n        ");
            viewString.Append("[Model.ImportToolPaymentDataFieldsSetting](T1.ImportToolPaymentDataFieldsSetting");
            viewString.Append("_ID, T1.ImportToolPaymentDataFieldsSetting_PayorID, T1.ImportToolPaymentDataFiel");
            viewString.Append("dsSetting_TemplateID, T1.ImportToolPaymentDataFieldsSetting_PayorToolAvailableFe");
            viewString.Append("ildsID, T1.ImportToolPaymentDataFieldsSetting_FieldsID, T1.ImportToolPaymentData");
            viewString.Append("FieldsSetting_FieldsName, T1.ImportToolPaymentDataFieldsSetting_FixedRowLocation");
            viewString.Append(", T1.ImportToolPaymentDataFieldsSetting_FixedColLocation, T1.ImportToolPaymentDa");
            viewString.Append("taFieldsSetting_HeaderSearch, T1.ImportToolPaymentDataFieldsSetting_RelativeRowL");
            viewString.Append("ocation, T1.ImportToolPaymentDataFieldsSetting_RelativeColLocation, T1.ImportToo");
            viewString.Append("lPaymentDataFieldsSetting_PartOfPrimaryKey, T1.ImportToolPaymentDataFieldsSettin");
            viewString.Append("g_CalculatedFields, T1.ImportToolPaymentDataFieldsSetting_FormulaExpression, T1.");
            viewString.Append("ImportToolPaymentDataFieldsSetting_PayorToolMaskFieldTypeId, T1.ImportToolPaymen");
            viewString.Append("tDataFieldsSetting_StartRowLocation, T1.ImportToolPaymentDataFieldsSetting_Start");
            viewString.Append("ColLocation, T1.ImportToolPaymentDataFieldsSetting_EndRowLocation, T1.ImportTool");
            viewString.Append("PaymentDataFieldsSetting_EndColLocation, T1.ImportToolPaymentDataFieldsSetting_T");
            viewString.Append("ransID, T1.ImportToolPaymentDataFieldsSetting_TransName, T1.ImportToolPaymentDat");
            viewString.Append("aFieldsSetting_DefaultText)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS Im");
            viewString.Append("portToolPaymentDataFieldsSetting_ID, \r\n            T.PayorID AS ImportToolPaymen");
            viewString.Append("tDataFieldsSetting_PayorID, \r\n            T.TemplateID AS ImportToolPaymentDataF");
            viewString.Append("ieldsSetting_TemplateID, \r\n            T.PayorToolAvailableFeildsID AS ImportToo");
            viewString.Append("lPaymentDataFieldsSetting_PayorToolAvailableFeildsID, \r\n            T.FieldsID A");
            viewString.Append("S ImportToolPaymentDataFieldsSetting_FieldsID, \r\n            T.FieldsName AS Imp");
            viewString.Append("ortToolPaymentDataFieldsSetting_FieldsName, \r\n            T.FixedRowLocation AS ");
            viewString.Append("ImportToolPaymentDataFieldsSetting_FixedRowLocation, \r\n            T.FixedColLoc");
            viewString.Append("ation AS ImportToolPaymentDataFieldsSetting_FixedColLocation, \r\n            T.He");
            viewString.Append("aderSearch AS ImportToolPaymentDataFieldsSetting_HeaderSearch, \r\n            T.R");
            viewString.Append("elativeRowLocation AS ImportToolPaymentDataFieldsSetting_RelativeRowLocation, \r\n");
            viewString.Append("            T.RelativeColLocation AS ImportToolPaymentDataFieldsSetting_Relative");
            viewString.Append("ColLocation, \r\n            T.PartOfPrimaryKey AS ImportToolPaymentDataFieldsSett");
            viewString.Append("ing_PartOfPrimaryKey, \r\n            T.CalculatedFields AS ImportToolPaymentDataF");
            viewString.Append("ieldsSetting_CalculatedFields, \r\n            T.FormulaExpression AS ImportToolPa");
            viewString.Append("ymentDataFieldsSetting_FormulaExpression, \r\n            T.PayorToolMaskFieldType");
            viewString.Append("Id AS ImportToolPaymentDataFieldsSetting_PayorToolMaskFieldTypeId, \r\n           ");
            viewString.Append(" T.StartRowLocation AS ImportToolPaymentDataFieldsSetting_StartRowLocation, \r\n  ");
            viewString.Append("          T.StartColLocation AS ImportToolPaymentDataFieldsSetting_StartColLocat");
            viewString.Append("ion, \r\n            T.EndRowLocation AS ImportToolPaymentDataFieldsSetting_EndRow");
            viewString.Append("Location, \r\n            T.EndColLocation AS ImportToolPaymentDataFieldsSetting_E");
            viewString.Append("ndColLocation, \r\n            T.TransID AS ImportToolPaymentDataFieldsSetting_Tra");
            viewString.Append("nsID, \r\n            T.TransName AS ImportToolPaymentDataFieldsSetting_TransName,");
            viewString.Append(" \r\n            T.DefaultText AS ImportToolPaymentDataFieldsSetting_DefaultText, ");
            viewString.Append("\r\n            True AS _from0\r\n        FROM ModelStoreContainer.ImportToolPayment");
            viewString.Append("DataFieldsSettings AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolPaymentDataFieldsSettings", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolAvailableFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView230()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2751);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ImportToolAvailableFields\r\n        [Model.Sto");
            viewString.Append("re.ImportToolAvailableFields](T1.ImportToolAvailableFields_PTAvailableFieldId, T");
            viewString.Append("1.ImportToolAvailableFields_Name, T1.ImportToolAvailableFields_Description, T1.I");
            viewString.Append("mportToolAvailableFields_LabelOnImage, T1.ImportToolAvailableFields_FieldStatus,");
            viewString.Append(" T1.ImportToolAvailableFields_FieldOrder, T1.ImportToolAvailableFields_IsPartOfP");
            viewString.Append("rimary, T1.ImportToolAvailableFields_IsPopulatedIfLinked, T1.ImportToolAvailable");
            viewString.Append("Fields_IsTabbedToNextFieldIfLinked, T1.ImportToolAvailableFields_IsCalculatedFie");
            viewString.Append("ld, T1.ImportToolAvailableFields_IsOverrideOfCalcAllowed, T1.ImportToolAvailable");
            viewString.Append("Fields_DefaultNumeric, T1.ImportToolAvailableFields_IsOorBlankAllowed, T1.Import");
            viewString.Append("ToolAvailableFields_AllignedDirection, T1.ImportToolAvailableFields_EquivalentIn");
            viewString.Append("comingField, T1.ImportToolAvailableFields_EquivalentLearnedField, T1.ImportToolA");
            viewString.Append("vailableFields_EquivalentDeuField, T1.ImportToolAvailableFields_HelpText, T1.Imp");
            viewString.Append("ortToolAvailableFields_IsDeleted, T1.ImportToolAvailableFields_IsDeletable)\r\n   ");
            viewString.Append(" FROM (\r\n        SELECT \r\n            T.PTAvailableFieldId AS ImportToolAvailabl");
            viewString.Append("eFields_PTAvailableFieldId, \r\n            T.Name AS ImportToolAvailableFields_Na");
            viewString.Append("me, \r\n            T.Description AS ImportToolAvailableFields_Description, \r\n    ");
            viewString.Append("        T.LabelOnImage AS ImportToolAvailableFields_LabelOnImage, \r\n            ");
            viewString.Append("T.FieldStatus AS ImportToolAvailableFields_FieldStatus, \r\n            T.FieldOrd");
            viewString.Append("er AS ImportToolAvailableFields_FieldOrder, \r\n            T.IsPartOfPrimary AS I");
            viewString.Append("mportToolAvailableFields_IsPartOfPrimary, \r\n            T.IsPopulatedIfLinked AS");
            viewString.Append(" ImportToolAvailableFields_IsPopulatedIfLinked, \r\n            T.IsTabbedToNextFi");
            viewString.Append("eldIfLinked AS ImportToolAvailableFields_IsTabbedToNextFieldIfLinked, \r\n        ");
            viewString.Append("    T.IsCalculatedField AS ImportToolAvailableFields_IsCalculatedField, \r\n      ");
            viewString.Append("      T.IsOverrideOfCalcAllowed AS ImportToolAvailableFields_IsOverrideOfCalcAll");
            viewString.Append("owed, \r\n            T.DefaultNumeric AS ImportToolAvailableFields_DefaultNumeric");
            viewString.Append(", \r\n            T.IsOorBlankAllowed AS ImportToolAvailableFields_IsOorBlankAllow");
            viewString.Append("ed, \r\n            T.AllignedDirection AS ImportToolAvailableFields_AllignedDirec");
            viewString.Append("tion, \r\n            T.EquivalentIncomingField AS ImportToolAvailableFields_Equiv");
            viewString.Append("alentIncomingField, \r\n            T.EquivalentLearnedField AS ImportToolAvailabl");
            viewString.Append("eFields_EquivalentLearnedField, \r\n            T.EquivalentDeuField AS ImportTool");
            viewString.Append("AvailableFields_EquivalentDeuField, \r\n            T.HelpText AS ImportToolAvaila");
            viewString.Append("bleFields_HelpText, \r\n            T.IsDeleted AS ImportToolAvailableFields_IsDel");
            viewString.Append("eted, \r\n            T.IsDeletable AS ImportToolAvailableFields_IsDeletable, \r\n  ");
            viewString.Append("          True AS _from0\r\n        FROM CommissionDepartmentEntities.ImportToolAv");
            viewString.Append("ailableFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolAvailableFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolAvailableFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView231()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2695);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ImportToolAvailableFields\r\n        [Model.Imp");
            viewString.Append("ortToolAvailableField](T1.ImportToolAvailableField_PTAvailableFieldId, T1.Import");
            viewString.Append("ToolAvailableField_Name, T1.ImportToolAvailableField_Description, T1.ImportToolA");
            viewString.Append("vailableField_LabelOnImage, T1.ImportToolAvailableField_FieldStatus, T1.ImportTo");
            viewString.Append("olAvailableField_FieldOrder, T1.ImportToolAvailableField_IsPartOfPrimary, T1.Imp");
            viewString.Append("ortToolAvailableField_IsPopulatedIfLinked, T1.ImportToolAvailableField_IsTabbedT");
            viewString.Append("oNextFieldIfLinked, T1.ImportToolAvailableField_IsCalculatedField, T1.ImportTool");
            viewString.Append("AvailableField_IsOverrideOfCalcAllowed, T1.ImportToolAvailableField_DefaultNumer");
            viewString.Append("ic, T1.ImportToolAvailableField_IsOorBlankAllowed, T1.ImportToolAvailableField_A");
            viewString.Append("llignedDirection, T1.ImportToolAvailableField_EquivalentIncomingField, T1.Import");
            viewString.Append("ToolAvailableField_EquivalentLearnedField, T1.ImportToolAvailableField_Equivalen");
            viewString.Append("tDeuField, T1.ImportToolAvailableField_HelpText, T1.ImportToolAvailableField_IsD");
            viewString.Append("eleted, T1.ImportToolAvailableField_IsDeletable)\r\n    FROM (\r\n        SELECT \r\n ");
            viewString.Append("           T.PTAvailableFieldId AS ImportToolAvailableField_PTAvailableFieldId, ");
            viewString.Append("\r\n            T.Name AS ImportToolAvailableField_Name, \r\n            T.Descripti");
            viewString.Append("on AS ImportToolAvailableField_Description, \r\n            T.LabelOnImage AS Impo");
            viewString.Append("rtToolAvailableField_LabelOnImage, \r\n            T.FieldStatus AS ImportToolAvai");
            viewString.Append("lableField_FieldStatus, \r\n            T.FieldOrder AS ImportToolAvailableField_F");
            viewString.Append("ieldOrder, \r\n            T.IsPartOfPrimary AS ImportToolAvailableField_IsPartOfP");
            viewString.Append("rimary, \r\n            T.IsPopulatedIfLinked AS ImportToolAvailableField_IsPopula");
            viewString.Append("tedIfLinked, \r\n            T.IsTabbedToNextFieldIfLinked AS ImportToolAvailableF");
            viewString.Append("ield_IsTabbedToNextFieldIfLinked, \r\n            T.IsCalculatedField AS ImportToo");
            viewString.Append("lAvailableField_IsCalculatedField, \r\n            T.IsOverrideOfCalcAllowed AS Im");
            viewString.Append("portToolAvailableField_IsOverrideOfCalcAllowed, \r\n            T.DefaultNumeric A");
            viewString.Append("S ImportToolAvailableField_DefaultNumeric, \r\n            T.IsOorBlankAllowed AS ");
            viewString.Append("ImportToolAvailableField_IsOorBlankAllowed, \r\n            T.AllignedDirection AS");
            viewString.Append(" ImportToolAvailableField_AllignedDirection, \r\n            T.EquivalentIncomingF");
            viewString.Append("ield AS ImportToolAvailableField_EquivalentIncomingField, \r\n            T.Equiva");
            viewString.Append("lentLearnedField AS ImportToolAvailableField_EquivalentLearnedField, \r\n         ");
            viewString.Append("   T.EquivalentDeuField AS ImportToolAvailableField_EquivalentDeuField, \r\n      ");
            viewString.Append("      T.HelpText AS ImportToolAvailableField_HelpText, \r\n            T.IsDeleted");
            viewString.Append(" AS ImportToolAvailableField_IsDeleted, \r\n            T.IsDeletable AS ImportToo");
            viewString.Append("lAvailableField_IsDeletable, \r\n            True AS _from0\r\n        FROM ModelSto");
            viewString.Append("reContainer.ImportToolAvailableFields AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolAvailableFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolCommTranslator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView232()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolCommTranslator", @"
    SELECT VALUE -- Constructing ImportToolCommTranslator
        [Model.Store.ImportToolCommTranslator](T1.ImportToolCommTranslator_TransID, T1.ImportToolCommTranslator_Name, T1.ImportToolCommTranslator_Description, T1.ImportToolCommTranslator_Type)
    FROM (
        SELECT 
            T.TransID AS ImportToolCommTranslator_TransID, 
            T.Name AS ImportToolCommTranslator_Name, 
            T.Description AS ImportToolCommTranslator_Description, 
            T.Type AS ImportToolCommTranslator_Type, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportToolCommTranslators AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolCommTranslators
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView233()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolCommTranslators", @"
    SELECT VALUE -- Constructing ImportToolCommTranslators
        [Model.ImportToolCommTranslator](T1.ImportToolCommTranslator_TransID, T1.ImportToolCommTranslator_Name, T1.ImportToolCommTranslator_Description, T1.ImportToolCommTranslator_Type)
    FROM (
        SELECT 
            T.TransID AS ImportToolCommTranslator_TransID, 
            T.Name AS ImportToolCommTranslator_Name, 
            T.Description AS ImportToolCommTranslator_Description, 
            T.Type AS ImportToolCommTranslator_Type, 
            True AS _from0
        FROM ModelStoreContainer.ImportToolCommTranslator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.PayorTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.PayorTemplate", @"
    SELECT VALUE -- Constructing PayorTemplate
        [Model.Store.PayorTemplate](T1.PayorTemplate_ID, T1.PayorTemplate_TemplateID, T1.PayorTemplate_PayorId, T1.PayorTemplate_TemplateName, T1.PayorTemplate_IsDeleted)
    FROM (
        SELECT 
            T.ID AS PayorTemplate_ID, 
            T.TemplateID AS PayorTemplate_TemplateID, 
            T.PayorId AS PayorTemplate_PayorId, 
            T.TemplateName AS PayorTemplate_TemplateName, 
            T.IsDeleted AS PayorTemplate_IsDeleted, 
            True AS _from0
        FROM CommissionDepartmentEntities.PayorTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.PayorTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView235()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.PayorTemplates", @"
    SELECT VALUE -- Constructing PayorTemplates
        [Model.PayorTemplate](T1.PayorTemplate_ID, T1.PayorTemplate_TemplateID, T1.PayorTemplate_PayorId, T1.PayorTemplate_TemplateName, T1.PayorTemplate_IsDeleted)
    FROM (
        SELECT 
            T.ID AS PayorTemplate_ID, 
            T.TemplateID AS PayorTemplate_TemplateID, 
            T.PayorId AS PayorTemplate_PayorId, 
            T.TemplateName AS PayorTemplate_TemplateName, 
            T.IsDeleted AS PayorTemplate_IsDeleted, 
            True AS _from0
        FROM ModelStoreContainer.PayorTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.ImportToolPayorTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView236()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.ImportToolPayorTemplate", @"
    SELECT VALUE -- Constructing ImportToolPayorTemplate
        [Model.Store.ImportToolPayorTemplate](T1.ImportToolPayorTemplate_ID, T1.ImportToolPayorTemplate_TemplateID, T1.ImportToolPayorTemplate_PayorID, T1.ImportToolPayorTemplate_TemplateName, T1.ImportToolPayorTemplate_IsDeleted, T1.ImportToolPayorTemplate_IsForceImport)
    FROM (
        SELECT 
            T.ID AS ImportToolPayorTemplate_ID, 
            T.TemplateID AS ImportToolPayorTemplate_TemplateID, 
            T.PayorID AS ImportToolPayorTemplate_PayorID, 
            T.TemplateName AS ImportToolPayorTemplate_TemplateName, 
            T.IsDeleted AS ImportToolPayorTemplate_IsDeleted, 
            T.IsForceImport AS ImportToolPayorTemplate_IsForceImport, 
            True AS _from0
        FROM CommissionDepartmentEntities.ImportToolPayorTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.ImportToolPayorTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView237()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.ImportToolPayorTemplates", @"
    SELECT VALUE -- Constructing ImportToolPayorTemplates
        [Model.ImportToolPayorTemplate](T1.ImportToolPayorTemplate_ID, T1.ImportToolPayorTemplate_TemplateID, T1.ImportToolPayorTemplate_PayorID, T1.ImportToolPayorTemplate_TemplateName, T1.ImportToolPayorTemplate_IsDeleted, T1.ImportToolPayorTemplate_IsForceImport)
    FROM (
        SELECT 
            T.ID AS ImportToolPayorTemplate_ID, 
            T.TemplateID AS ImportToolPayorTemplate_TemplateID, 
            T.PayorID AS ImportToolPayorTemplate_PayorID, 
            T.TemplateName AS ImportToolPayorTemplate_TemplateName, 
            T.IsDeleted AS ImportToolPayorTemplate_IsDeleted, 
            T.IsForceImport AS ImportToolPayorTemplate_IsForceImport, 
            True AS _from0
        FROM ModelStoreContainer.ImportToolPayorTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.IncomingCompType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView238()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.IncomingCompType", @"
    SELECT VALUE -- Constructing IncomingCompType
        [Model.Store.IncomingCompType](T1.IncomingCompType_Id, T1.IncomingCompType_IncomingPaymentTypeID, T1.IncomingCompType_PaymentTypeName, T1.IncomingCompType_Names)
    FROM (
        SELECT 
            T.Id AS IncomingCompType_Id, 
            T.IncomingPaymentTypeID AS IncomingCompType_IncomingPaymentTypeID, 
            T.PaymentTypeName AS IncomingCompType_PaymentTypeName, 
            T.Names AS IncomingCompType_Names, 
            True AS _from0
        FROM CommissionDepartmentEntities.IncomingCompTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.IncomingCompTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.IncomingCompTypes", @"
    SELECT VALUE -- Constructing IncomingCompTypes
        [Model.IncomingCompType](T1.IncomingCompType_Id, T1.IncomingCompType_IncomingPaymentTypeID, T1.IncomingCompType_PaymentTypeName, T1.IncomingCompType_Names)
    FROM (
        SELECT 
            T.Id AS IncomingCompType_Id, 
            T.IncomingPaymentTypeID AS IncomingCompType_IncomingPaymentTypeID, 
            T.PaymentTypeName AS IncomingCompType_PaymentTypeName, 
            T.Names AS IncomingCompType_Names, 
            True AS _from0
        FROM ModelStoreContainer.IncomingCompType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.tbPMCVarianceSlab
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView240()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.tbPMCVarianceSlab", @"
    SELECT VALUE -- Constructing tbPMCVarianceSlab
        [Model.Store.tbPMCVarianceSlab](T1.tbPMCVarianceSlab_ID, T1.tbPMCVarianceSlab_PMCFrom, T1.tbPMCVarianceSlab_PMCTo, T1.tbPMCVarianceSlab_VarPercentLimit)
    FROM (
        SELECT 
            T.ID AS tbPMCVarianceSlab_ID, 
            T.PMCFrom AS tbPMCVarianceSlab_PMCFrom, 
            T.PMCTo AS tbPMCVarianceSlab_PMCTo, 
            T.VarPercentLimit AS tbPMCVarianceSlab_VarPercentLimit, 
            True AS _from0
        FROM CommissionDepartmentEntities.tbPMCVarianceSlabs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CommissionDepartmentEntities.tbPMCVarianceSlabs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CommissionDepartmentEntities.tbPMCVarianceSlabs", @"
    SELECT VALUE -- Constructing tbPMCVarianceSlabs
        [Model.tbPMCVarianceSlab](T1.tbPMCVarianceSlab_ID, T1.tbPMCVarianceSlab_PMCFrom, T1.tbPMCVarianceSlab_PMCTo, T1.tbPMCVarianceSlab_VarPercentLimit)
    FROM (
        SELECT 
            T.ID AS tbPMCVarianceSlab_ID, 
            T.PMCFrom AS tbPMCVarianceSlab_PMCFrom, 
            T.PMCTo AS tbPMCVarianceSlab_PMCTo, 
            T.VarPercentLimit AS tbPMCVarianceSlab_VarPercentLimit, 
            True AS _from0
        FROM ModelStoreContainer.tbPMCVarianceSlab AS T
    ) AS T1");
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Batches_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Batches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Batch), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Batches_MasterBatchEntryStatus", "MasterBatchEntryStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterBatchEntryStatu), "Batches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Batch), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Batches_MasterBatchUploadStatus", "MasterBatchUploadStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterBatchUploadStatu), "Batches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Batch), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Batches_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "Batches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Batch), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorCarrier_Carriers", "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Carrier), "CarrierNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CarrierNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorCarrier_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "CarrierNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CarrierNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorCarrier_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "CarrierNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CarrierNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorCarrier_UserCredentials1", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "CarrierNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CarrierNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_Carriers", "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Carrier), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalCoveragesSchedules_Carriers", "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Carrier), "GlobalCoveragesSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalCoveragesSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorCarriers_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Carrier), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorCarriers_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Carrier), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_Carriers", "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Carrier), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_Carriers", "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Carrier), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Clients_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Client), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Client), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_lastpolicyviewed_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Client), "LastPolicyViewed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LastPolicyViewed), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Client), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Client), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CarrierCoverages_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Coverage), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CarrierCoverages_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Coverage), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_Coverages", "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Coverage), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalCoveragesSchedules_Coverages", "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Coverage), "GlobalCoveragesSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalCoveragesSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_Coverages", "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Coverage), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_Coverages", "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Coverage), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIncomingPaymentType), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_MasterPolicyModes", "MasterPolicyModes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyMode), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_MasterPostStatus", "MasterPostStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPostStatu), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyPaymentEntries_EntriesByDEU", "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), "PolicyPaymentEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyPaymentEntry), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Invoices_ExportBatchFiles", "ExportBatchFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.ExportBatchFile), "Invoices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Invoice), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FieldMapping_Templates", "Templates", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Template), "FieldMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FieldMapping), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorToolFields_Formulas", "Formulas", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Formula), "PayorToolFields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorToolField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalCoveragesSchedules_MasterScheduleTypes", "MasterScheduleTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterScheduleType), "GlobalCoveragesSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalCoveragesSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalPayorContacts_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "GlobalPayorContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalPayorContact), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalPayorDefaults_MasterFileTypes", "MasterFileTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterFileType), "GlobalPayorDefaults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalPayorDefault), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalPayorDefaults_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "GlobalPayorDefaults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalPayorDefault), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_GlobalPayorStatementDate_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "GlobalPayorStatementDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.GlobalPayorStatementDate), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Journals_ImportBatchFiles", "ImportBatchFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.ImportBatchFile), "Journals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Journal), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_InvoiceBillingLineDetail_Invoices", "Invoices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Invoice), "InvoiceBillingLineDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.InvoiceBillingLineDetail), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "MasterServiceChargeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterServiceChargeType), "InvoiceBillingLineDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.InvoiceBillingLineDetail), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_InvoiceBillingLineDetail_MasterServices", "MasterServices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterService), "InvoiceBillingLineDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.InvoiceBillingLineDetail), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "InvoiceBillingLineDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.InvoiceBillingLineDetail), "PolicyLevelBillingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLevelBillingDetail), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_VariablesForBillingLine_InvoiceBillingLineDetail", "InvoiceBillingLineDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.InvoiceBillingLineDetail), "VariablesForBillingLine", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.VariablesForBillingLine), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Invoices_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Invoices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Invoice), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Journals_Invoices", "Invoices", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Invoice), "Journals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Journal), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_IssuedFiles_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "IssuedFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.IssuedFile), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Journals_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Journals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Journal), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LastPolicyViewed_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "LastPolicyViewed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LastPolicyViewed), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_lastpolicyviewed_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "LastPolicyViewed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LastPolicyViewed), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LicenseeNotes_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "LicenseeNotes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LicenseeNote), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LicenseePayors_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "LicenseePayors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LicenseePayor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LicenseePayors_MasterSourceTypes", "MasterSourceTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterSourceType), "LicenseePayors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LicenseePayor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LicenseePayors_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "LicenseePayors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LicenseePayor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Licensees_MasterLicensePaymentModes", "MasterLicensePaymentModes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterLicensePaymentMode), "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Licensee), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Licensees_MasterLicenseStatus", "MasterLicenseStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterLicenseStatu), "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Licensee), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LicenseeServices_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Licensee), "LicenseeServices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LicenseeService), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Payors_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Payor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorSiteLoginInfo_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Licensee), "PayorSiteLoginInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorSiteLoginInfo), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorSource_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Licensee), "PayorSource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorSource), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_Licensees1", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_Licensees1", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ServiceLines_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Licensee), "ServiceLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.ServiceLine), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UserCredentials_Licensees", "Licensees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Licensee), "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserCredential), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LicenseeServices_MasterServices", "MasterServices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterService), "LicenseeServices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.LicenseeService), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UserPermissions_MasterAccessRights1", "MasterAccessRights", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterAccessRight), "UserPermissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserPermission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "MasterBasicIncomingSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterBasicIncomingSchedule), "PolicyIncomingSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyIncomingSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "MasterBasicOutgoingSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterBasicOutgoingSchedule), "PolicyOutgoingSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIncomingPaymentType), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIncomingPaymentType), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UserPermissions_MasterModules1", "MasterModules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterModule), "UserPermissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserPermission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterPayorRegion), "MasterPayorRegions1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPayorRegion), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Payors_MasterPayorRegions", "MasterPayorRegions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPayorRegion), "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Payor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorToolFields_MasterPayorToolAvailableFields", "MasterPayorToolAvailableFields", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPayorToolAvailableField), "PayorToolFields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorToolField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "MasterPayorToolMaskFieldTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPayorToolMaskFieldType), "PayorToolFields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorToolField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_MasterPolicyModes", "MasterPolicyModes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyMode), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_MasterPolicyModes", "MasterPolicyModes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyMode), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_MasterPolicyStatus", "MasterPolicyStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyStatu), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_MasterPolicyStatus", "MasterPolicyStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyStatu), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyTerminationReason), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyTerminationReason), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyPaymentEntries_MasterPostStatus", "MasterPostStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPostStatu), "PolicyPaymentEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyPaymentEntry), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UserCredentials_MasterRoles", "MasterRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterRole), "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserCredential), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterScheduleType), "PolicyIncomingAdvancedSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyIncomingAdvancedSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterScheduleType), "PolicyOutgoingAdvancedSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingAdvancedSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ServiceLines_MasterServiceChargeTypes", "MasterServiceChargeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterServiceChargeType), "ServiceLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.ServiceLine), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ServiceLines_MasterServiceChargeTypes1", "MasterServiceChargeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterServiceChargeType), "ServiceLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.ServiceLine), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ServiceLines_MasterServices", "MasterServices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.MasterService), "ServiceLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.ServiceLine), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Payors_MasterSourceTypes", "MasterSourceTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterSourceType), "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Payor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Payors_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Payor), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorSiteLoginInfo_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "PayorSiteLoginInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorSiteLoginInfo), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorSource_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "PayorSource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorSource), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorTools_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "PayorTools", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorTool), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Templates_Payors", "Payors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "Templates", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Template), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PayorToolFields_PayorTools", "PayorTools", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.PayorTool), "PayorToolFields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PayorToolField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Policies_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Policy), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyIncomingAdvancedSchedules_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyIncomingAdvancedSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyIncomingAdvancedSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyIncomingSchedules_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyIncomingSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyIncomingSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLevelBillingDetail_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyLevelBillingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLevelBillingDetail), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyNotes_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyNotes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyNote), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_Policy", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyOutgoingAdvancedSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingAdvancedSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingSchedules_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyOutgoingSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyPaymentEntries_Policies", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyPaymentEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyPaymentEntry), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PoliciesHistory_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "PoliciesHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PoliciesHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "PolicyOutgoingAdvancedSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingAdvancedSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UserDetail_UserCredentials", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "UserDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserDetail), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UserPermissions_UserCredentials1", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "UserPermissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserPermission), true)]
[assembly: EdmRelationshipAttribute("Model", "CarrierCoverage", "Carriers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Carrier), "Coverages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Coverage))]
[assembly: EdmRelationshipAttribute("Model", "LinkedAgent", "UserCredentials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "UserCredentials1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.UserCredential))]
[assembly: EdmRelationshipAttribute("Model", "FK_FollowupIssues_MasterIssueCategories", "MasterIssueCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIssueCategory), "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FollowupIssues_MasterIssueReasons", "MasterIssueReason", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIssueReason), "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FollowupIssues_MasterIssueResults", "MasterIssueResult", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIssueResult), "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FollowupIssues_MasterIssueStatus", "MasterIssueStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIssueStatu), "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FollowupIssues_MasterIssueStatus1", "MasterIssueStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIssueStatu), "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FollowupIssues_Policies", "Policy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Policy), "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyPaymentEntries_FollowupIssues", "FollowupIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.FollowupIssue), "PolicyPaymentEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyPaymentEntry), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Statements_Batches", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Batch), "Statement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Statement), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EntriesByDEU_Statements", "Statement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Statement), "EntriesByDEU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.EntriesByDEU), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Statements_MasterStatementStatus", "MasterStatementStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterStatementStatu), "Statement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Statement), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Statements_Payors", "Payor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "Statement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.Statement), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyPaymentEntries_Statements", "Statement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Statement), "PolicyPaymentEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyPaymentEntry), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_PayorCarriers", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Carrier), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_PayorCarriers", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Carrier), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_Clients", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Client), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_Clients", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Client), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_CarrierCoverages", "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Coverage), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_CarrierCoverages", "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Coverage), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "MasterIncomingPaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIncomingPaymentType), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterIncomingPaymentType), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_MasterPolicyModes", "MasterPolicyMode", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyMode), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "MasterPolicyMode", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.MasterPolicyMode), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_Payors", "Payor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_Payors", "Payor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.Payor), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFields_Policies", "Policy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyLearnedField", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedField), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyLearnedFieldsHistory_Policies", "Policy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Policy), "PolicyLearnedFieldsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.PolicyLearnedFieldsHistory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CoverageNickName_Carriers", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Carrier), "CoverageNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CoverageNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CarrierCoverage_UserCredentials", "UserCredential", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "CoverageNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CoverageNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CarrierCoverage_UserCredentials1", "UserCredential", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "CoverageNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CoverageNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CoverageNickName_Coverages", "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Coverage), "CoverageNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CoverageNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CoverageNickName_Payors", "Payor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LinqtoEntity.Payor), "CoverageNickName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.CoverageNickName), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingSchedules_UserCredentials", "UserCredential", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "PolicyOutgoingSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingSchedule), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyPaymentEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.PolicyPaymentEntry), "PolicyOutgoingPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingPayment), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PolicyOutgoingPayments_UserCredentials", "UserCredential", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.LinqtoEntity.UserCredential), "PolicyOutgoingPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.LinqtoEntity.PolicyOutgoingPayment), true)]

#endregion

namespace DataAccessLayer.LinqtoEntity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CommissionDepartmentEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CommissionDepartmentEntities object using the connection string found in the 'CommissionDepartmentEntities' section of the application configuration file.
        /// </summary>
        public CommissionDepartmentEntities() : base("name=CommissionDepartmentEntities", "CommissionDepartmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CommissionDepartmentEntities object.
        /// </summary>
        public CommissionDepartmentEntities(string connectionString) : base(connectionString, "CommissionDepartmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CommissionDepartmentEntities object.
        /// </summary>
        public CommissionDepartmentEntities(EntityConnection connection) : base(connection, "CommissionDepartmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutoDEUEntry> AutoDEUEntries
        {
            get
            {
                if ((_AutoDEUEntries == null))
                {
                    _AutoDEUEntries = base.CreateObjectSet<AutoDEUEntry>("AutoDEUEntries");
                }
                return _AutoDEUEntries;
            }
        }
        private ObjectSet<AutoDEUEntry> _AutoDEUEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Batch> Batches
        {
            get
            {
                if ((_Batches == null))
                {
                    _Batches = base.CreateObjectSet<Batch>("Batches");
                }
                return _Batches;
            }
        }
        private ObjectSet<Batch> _Batches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierNickName> CarrierNickNames
        {
            get
            {
                if ((_CarrierNickNames == null))
                {
                    _CarrierNickNames = base.CreateObjectSet<CarrierNickName>("CarrierNickNames");
                }
                return _CarrierNickNames;
            }
        }
        private ObjectSet<CarrierNickName> _CarrierNickNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carrier> Carriers
        {
            get
            {
                if ((_Carriers == null))
                {
                    _Carriers = base.CreateObjectSet<Carrier>("Carriers");
                }
                return _Carriers;
            }
        }
        private ObjectSet<Carrier> _Carriers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coverage> Coverages
        {
            get
            {
                if ((_Coverages == null))
                {
                    _Coverages = base.CreateObjectSet<Coverage>("Coverages");
                }
                return _Coverages;
            }
        }
        private ObjectSet<Coverage> _Coverages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                if ((_EntriesByDEUs == null))
                {
                    _EntriesByDEUs = base.CreateObjectSet<EntriesByDEU>("EntriesByDEUs");
                }
                return _EntriesByDEUs;
            }
        }
        private ObjectSet<EntriesByDEU> _EntriesByDEUs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExportBatchFile> ExportBatchFiles
        {
            get
            {
                if ((_ExportBatchFiles == null))
                {
                    _ExportBatchFiles = base.CreateObjectSet<ExportBatchFile>("ExportBatchFiles");
                }
                return _ExportBatchFiles;
            }
        }
        private ObjectSet<ExportBatchFile> _ExportBatchFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldMapping> FieldMappings
        {
            get
            {
                if ((_FieldMappings == null))
                {
                    _FieldMappings = base.CreateObjectSet<FieldMapping>("FieldMappings");
                }
                return _FieldMappings;
            }
        }
        private ObjectSet<FieldMapping> _FieldMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Formula> Formulas
        {
            get
            {
                if ((_Formulas == null))
                {
                    _Formulas = base.CreateObjectSet<Formula>("Formulas");
                }
                return _Formulas;
            }
        }
        private ObjectSet<Formula> _Formulas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalCoveragesSchedule> GlobalCoveragesSchedules
        {
            get
            {
                if ((_GlobalCoveragesSchedules == null))
                {
                    _GlobalCoveragesSchedules = base.CreateObjectSet<GlobalCoveragesSchedule>("GlobalCoveragesSchedules");
                }
                return _GlobalCoveragesSchedules;
            }
        }
        private ObjectSet<GlobalCoveragesSchedule> _GlobalCoveragesSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalPayorContact> GlobalPayorContacts
        {
            get
            {
                if ((_GlobalPayorContacts == null))
                {
                    _GlobalPayorContacts = base.CreateObjectSet<GlobalPayorContact>("GlobalPayorContacts");
                }
                return _GlobalPayorContacts;
            }
        }
        private ObjectSet<GlobalPayorContact> _GlobalPayorContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalPayorDefault> GlobalPayorDefaults
        {
            get
            {
                if ((_GlobalPayorDefaults == null))
                {
                    _GlobalPayorDefaults = base.CreateObjectSet<GlobalPayorDefault>("GlobalPayorDefaults");
                }
                return _GlobalPayorDefaults;
            }
        }
        private ObjectSet<GlobalPayorDefault> _GlobalPayorDefaults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalPayorStatementDate> GlobalPayorStatementDates
        {
            get
            {
                if ((_GlobalPayorStatementDates == null))
                {
                    _GlobalPayorStatementDates = base.CreateObjectSet<GlobalPayorStatementDate>("GlobalPayorStatementDates");
                }
                return _GlobalPayorStatementDates;
            }
        }
        private ObjectSet<GlobalPayorStatementDate> _GlobalPayorStatementDates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportBatchFile> ImportBatchFiles
        {
            get
            {
                if ((_ImportBatchFiles == null))
                {
                    _ImportBatchFiles = base.CreateObjectSet<ImportBatchFile>("ImportBatchFiles");
                }
                return _ImportBatchFiles;
            }
        }
        private ObjectSet<ImportBatchFile> _ImportBatchFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceBillingLineDetail> InvoiceBillingLineDetails
        {
            get
            {
                if ((_InvoiceBillingLineDetails == null))
                {
                    _InvoiceBillingLineDetails = base.CreateObjectSet<InvoiceBillingLineDetail>("InvoiceBillingLineDetails");
                }
                return _InvoiceBillingLineDetails;
            }
        }
        private ObjectSet<InvoiceBillingLineDetail> _InvoiceBillingLineDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssuedFile> IssuedFiles
        {
            get
            {
                if ((_IssuedFiles == null))
                {
                    _IssuedFiles = base.CreateObjectSet<IssuedFile>("IssuedFiles");
                }
                return _IssuedFiles;
            }
        }
        private ObjectSet<IssuedFile> _IssuedFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issuelog> Issuelogs
        {
            get
            {
                if ((_Issuelogs == null))
                {
                    _Issuelogs = base.CreateObjectSet<Issuelog>("Issuelogs");
                }
                return _Issuelogs;
            }
        }
        private ObjectSet<Issuelog> _Issuelogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Journal> Journals
        {
            get
            {
                if ((_Journals == null))
                {
                    _Journals = base.CreateObjectSet<Journal>("Journals");
                }
                return _Journals;
            }
        }
        private ObjectSet<Journal> _Journals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LastPolicyViewed> LastPolicyVieweds
        {
            get
            {
                if ((_LastPolicyVieweds == null))
                {
                    _LastPolicyVieweds = base.CreateObjectSet<LastPolicyViewed>("LastPolicyVieweds");
                }
                return _LastPolicyVieweds;
            }
        }
        private ObjectSet<LastPolicyViewed> _LastPolicyVieweds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicenseeNote> LicenseeNotes
        {
            get
            {
                if ((_LicenseeNotes == null))
                {
                    _LicenseeNotes = base.CreateObjectSet<LicenseeNote>("LicenseeNotes");
                }
                return _LicenseeNotes;
            }
        }
        private ObjectSet<LicenseeNote> _LicenseeNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicenseePayor> LicenseePayors
        {
            get
            {
                if ((_LicenseePayors == null))
                {
                    _LicenseePayors = base.CreateObjectSet<LicenseePayor>("LicenseePayors");
                }
                return _LicenseePayors;
            }
        }
        private ObjectSet<LicenseePayor> _LicenseePayors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicenseePayorSiteInfo> LicenseePayorSiteInfoes
        {
            get
            {
                if ((_LicenseePayorSiteInfoes == null))
                {
                    _LicenseePayorSiteInfoes = base.CreateObjectSet<LicenseePayorSiteInfo>("LicenseePayorSiteInfoes");
                }
                return _LicenseePayorSiteInfoes;
            }
        }
        private ObjectSet<LicenseePayorSiteInfo> _LicenseePayorSiteInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Licensee> Licensees
        {
            get
            {
                if ((_Licensees == null))
                {
                    _Licensees = base.CreateObjectSet<Licensee>("Licensees");
                }
                return _Licensees;
            }
        }
        private ObjectSet<Licensee> _Licensees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicenseeService> LicenseeServices
        {
            get
            {
                if ((_LicenseeServices == null))
                {
                    _LicenseeServices = base.CreateObjectSet<LicenseeService>("LicenseeServices");
                }
                return _LicenseeServices;
            }
        }
        private ObjectSet<LicenseeService> _LicenseeServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterAccessRight> MasterAccessRights
        {
            get
            {
                if ((_MasterAccessRights == null))
                {
                    _MasterAccessRights = base.CreateObjectSet<MasterAccessRight>("MasterAccessRights");
                }
                return _MasterAccessRights;
            }
        }
        private ObjectSet<MasterAccessRight> _MasterAccessRights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterAlertType> MasterAlertTypes
        {
            get
            {
                if ((_MasterAlertTypes == null))
                {
                    _MasterAlertTypes = base.CreateObjectSet<MasterAlertType>("MasterAlertTypes");
                }
                return _MasterAlertTypes;
            }
        }
        private ObjectSet<MasterAlertType> _MasterAlertTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterBasicIncomingSchedule> MasterBasicIncomingSchedules
        {
            get
            {
                if ((_MasterBasicIncomingSchedules == null))
                {
                    _MasterBasicIncomingSchedules = base.CreateObjectSet<MasterBasicIncomingSchedule>("MasterBasicIncomingSchedules");
                }
                return _MasterBasicIncomingSchedules;
            }
        }
        private ObjectSet<MasterBasicIncomingSchedule> _MasterBasicIncomingSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterBasicOutgoingSchedule> MasterBasicOutgoingSchedules
        {
            get
            {
                if ((_MasterBasicOutgoingSchedules == null))
                {
                    _MasterBasicOutgoingSchedules = base.CreateObjectSet<MasterBasicOutgoingSchedule>("MasterBasicOutgoingSchedules");
                }
                return _MasterBasicOutgoingSchedules;
            }
        }
        private ObjectSet<MasterBasicOutgoingSchedule> _MasterBasicOutgoingSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterBatchDownloadStatu> MasterBatchDownloadStatus
        {
            get
            {
                if ((_MasterBatchDownloadStatus == null))
                {
                    _MasterBatchDownloadStatus = base.CreateObjectSet<MasterBatchDownloadStatu>("MasterBatchDownloadStatus");
                }
                return _MasterBatchDownloadStatus;
            }
        }
        private ObjectSet<MasterBatchDownloadStatu> _MasterBatchDownloadStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterBatchEntryStatu> MasterBatchEntryStatus
        {
            get
            {
                if ((_MasterBatchEntryStatus == null))
                {
                    _MasterBatchEntryStatus = base.CreateObjectSet<MasterBatchEntryStatu>("MasterBatchEntryStatus");
                }
                return _MasterBatchEntryStatus;
            }
        }
        private ObjectSet<MasterBatchEntryStatu> _MasterBatchEntryStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterBatchUploadStatu> MasterBatchUploadStatus
        {
            get
            {
                if ((_MasterBatchUploadStatus == null))
                {
                    _MasterBatchUploadStatus = base.CreateObjectSet<MasterBatchUploadStatu>("MasterBatchUploadStatus");
                }
                return _MasterBatchUploadStatus;
            }
        }
        private ObjectSet<MasterBatchUploadStatu> _MasterBatchUploadStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterBillPaymentType> MasterBillPaymentTypes
        {
            get
            {
                if ((_MasterBillPaymentTypes == null))
                {
                    _MasterBillPaymentTypes = base.CreateObjectSet<MasterBillPaymentType>("MasterBillPaymentTypes");
                }
                return _MasterBillPaymentTypes;
            }
        }
        private ObjectSet<MasterBillPaymentType> _MasterBillPaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterFileType> MasterFileTypes
        {
            get
            {
                if ((_MasterFileTypes == null))
                {
                    _MasterFileTypes = base.CreateObjectSet<MasterFileType>("MasterFileTypes");
                }
                return _MasterFileTypes;
            }
        }
        private ObjectSet<MasterFileType> _MasterFileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterIncomingPaymentType> MasterIncomingPaymentTypes
        {
            get
            {
                if ((_MasterIncomingPaymentTypes == null))
                {
                    _MasterIncomingPaymentTypes = base.CreateObjectSet<MasterIncomingPaymentType>("MasterIncomingPaymentTypes");
                }
                return _MasterIncomingPaymentTypes;
            }
        }
        private ObjectSet<MasterIncomingPaymentType> _MasterIncomingPaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterIssueCategory> MasterIssueCategories
        {
            get
            {
                if ((_MasterIssueCategories == null))
                {
                    _MasterIssueCategories = base.CreateObjectSet<MasterIssueCategory>("MasterIssueCategories");
                }
                return _MasterIssueCategories;
            }
        }
        private ObjectSet<MasterIssueCategory> _MasterIssueCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterIssueReason> MasterIssueReasons
        {
            get
            {
                if ((_MasterIssueReasons == null))
                {
                    _MasterIssueReasons = base.CreateObjectSet<MasterIssueReason>("MasterIssueReasons");
                }
                return _MasterIssueReasons;
            }
        }
        private ObjectSet<MasterIssueReason> _MasterIssueReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterIssueResult> MasterIssueResults
        {
            get
            {
                if ((_MasterIssueResults == null))
                {
                    _MasterIssueResults = base.CreateObjectSet<MasterIssueResult>("MasterIssueResults");
                }
                return _MasterIssueResults;
            }
        }
        private ObjectSet<MasterIssueResult> _MasterIssueResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterIssueStatu> MasterIssueStatus
        {
            get
            {
                if ((_MasterIssueStatus == null))
                {
                    _MasterIssueStatus = base.CreateObjectSet<MasterIssueStatu>("MasterIssueStatus");
                }
                return _MasterIssueStatus;
            }
        }
        private ObjectSet<MasterIssueStatu> _MasterIssueStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterLicensePaymentMode> MasterLicensePaymentModes
        {
            get
            {
                if ((_MasterLicensePaymentModes == null))
                {
                    _MasterLicensePaymentModes = base.CreateObjectSet<MasterLicensePaymentMode>("MasterLicensePaymentModes");
                }
                return _MasterLicensePaymentModes;
            }
        }
        private ObjectSet<MasterLicensePaymentMode> _MasterLicensePaymentModes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterLicenseStatu> MasterLicenseStatus
        {
            get
            {
                if ((_MasterLicenseStatus == null))
                {
                    _MasterLicenseStatus = base.CreateObjectSet<MasterLicenseStatu>("MasterLicenseStatus");
                }
                return _MasterLicenseStatus;
            }
        }
        private ObjectSet<MasterLicenseStatu> _MasterLicenseStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterManagementReportsOrderByType> MasterManagementReportsOrderByTypes
        {
            get
            {
                if ((_MasterManagementReportsOrderByTypes == null))
                {
                    _MasterManagementReportsOrderByTypes = base.CreateObjectSet<MasterManagementReportsOrderByType>("MasterManagementReportsOrderByTypes");
                }
                return _MasterManagementReportsOrderByTypes;
            }
        }
        private ObjectSet<MasterManagementReportsOrderByType> _MasterManagementReportsOrderByTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterModule> MasterModules
        {
            get
            {
                if ((_MasterModules == null))
                {
                    _MasterModules = base.CreateObjectSet<MasterModule>("MasterModules");
                }
                return _MasterModules;
            }
        }
        private ObjectSet<MasterModule> _MasterModules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPasswordHintQuestion> MasterPasswordHintQuestions
        {
            get
            {
                if ((_MasterPasswordHintQuestions == null))
                {
                    _MasterPasswordHintQuestions = base.CreateObjectSet<MasterPasswordHintQuestion>("MasterPasswordHintQuestions");
                }
                return _MasterPasswordHintQuestions;
            }
        }
        private ObjectSet<MasterPasswordHintQuestion> _MasterPasswordHintQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPaymentStatu> MasterPaymentStatus
        {
            get
            {
                if ((_MasterPaymentStatus == null))
                {
                    _MasterPaymentStatus = base.CreateObjectSet<MasterPaymentStatu>("MasterPaymentStatus");
                }
                return _MasterPaymentStatus;
            }
        }
        private ObjectSet<MasterPaymentStatu> _MasterPaymentStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorRegion> MasterPayorRegions
        {
            get
            {
                if ((_MasterPayorRegions == null))
                {
                    _MasterPayorRegions = base.CreateObjectSet<MasterPayorRegion>("MasterPayorRegions");
                }
                return _MasterPayorRegions;
            }
        }
        private ObjectSet<MasterPayorRegion> _MasterPayorRegions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorSourceType> MasterPayorSourceTypes
        {
            get
            {
                if ((_MasterPayorSourceTypes == null))
                {
                    _MasterPayorSourceTypes = base.CreateObjectSet<MasterPayorSourceType>("MasterPayorSourceTypes");
                }
                return _MasterPayorSourceTypes;
            }
        }
        private ObjectSet<MasterPayorSourceType> _MasterPayorSourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorStatu> MasterPayorStatus
        {
            get
            {
                if ((_MasterPayorStatus == null))
                {
                    _MasterPayorStatus = base.CreateObjectSet<MasterPayorStatu>("MasterPayorStatus");
                }
                return _MasterPayorStatus;
            }
        }
        private ObjectSet<MasterPayorStatu> _MasterPayorStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorToolAvailableField> MasterPayorToolAvailableFields
        {
            get
            {
                if ((_MasterPayorToolAvailableFields == null))
                {
                    _MasterPayorToolAvailableFields = base.CreateObjectSet<MasterPayorToolAvailableField>("MasterPayorToolAvailableFields");
                }
                return _MasterPayorToolAvailableFields;
            }
        }
        private ObjectSet<MasterPayorToolAvailableField> _MasterPayorToolAvailableFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorToolIncomingField> MasterPayorToolIncomingFields
        {
            get
            {
                if ((_MasterPayorToolIncomingFields == null))
                {
                    _MasterPayorToolIncomingFields = base.CreateObjectSet<MasterPayorToolIncomingField>("MasterPayorToolIncomingFields");
                }
                return _MasterPayorToolIncomingFields;
            }
        }
        private ObjectSet<MasterPayorToolIncomingField> _MasterPayorToolIncomingFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorToolLearnedField> MasterPayorToolLearnedFields
        {
            get
            {
                if ((_MasterPayorToolLearnedFields == null))
                {
                    _MasterPayorToolLearnedFields = base.CreateObjectSet<MasterPayorToolLearnedField>("MasterPayorToolLearnedFields");
                }
                return _MasterPayorToolLearnedFields;
            }
        }
        private ObjectSet<MasterPayorToolLearnedField> _MasterPayorToolLearnedFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorToolMaskFieldType> MasterPayorToolMaskFieldTypes
        {
            get
            {
                if ((_MasterPayorToolMaskFieldTypes == null))
                {
                    _MasterPayorToolMaskFieldTypes = base.CreateObjectSet<MasterPayorToolMaskFieldType>("MasterPayorToolMaskFieldTypes");
                }
                return _MasterPayorToolMaskFieldTypes;
            }
        }
        private ObjectSet<MasterPayorToolMaskFieldType> _MasterPayorToolMaskFieldTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPayorType> MasterPayorTypes
        {
            get
            {
                if ((_MasterPayorTypes == null))
                {
                    _MasterPayorTypes = base.CreateObjectSet<MasterPayorType>("MasterPayorTypes");
                }
                return _MasterPayorTypes;
            }
        }
        private ObjectSet<MasterPayorType> _MasterPayorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPermissionType> MasterPermissionTypes
        {
            get
            {
                if ((_MasterPermissionTypes == null))
                {
                    _MasterPermissionTypes = base.CreateObjectSet<MasterPermissionType>("MasterPermissionTypes");
                }
                return _MasterPermissionTypes;
            }
        }
        private ObjectSet<MasterPermissionType> _MasterPermissionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPolicyMode> MasterPolicyModes
        {
            get
            {
                if ((_MasterPolicyModes == null))
                {
                    _MasterPolicyModes = base.CreateObjectSet<MasterPolicyMode>("MasterPolicyModes");
                }
                return _MasterPolicyModes;
            }
        }
        private ObjectSet<MasterPolicyMode> _MasterPolicyModes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPolicyStatu> MasterPolicyStatus
        {
            get
            {
                if ((_MasterPolicyStatus == null))
                {
                    _MasterPolicyStatus = base.CreateObjectSet<MasterPolicyStatu>("MasterPolicyStatus");
                }
                return _MasterPolicyStatus;
            }
        }
        private ObjectSet<MasterPolicyStatu> _MasterPolicyStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPolicyTerminationReason> MasterPolicyTerminationReasons
        {
            get
            {
                if ((_MasterPolicyTerminationReasons == null))
                {
                    _MasterPolicyTerminationReasons = base.CreateObjectSet<MasterPolicyTerminationReason>("MasterPolicyTerminationReasons");
                }
                return _MasterPolicyTerminationReasons;
            }
        }
        private ObjectSet<MasterPolicyTerminationReason> _MasterPolicyTerminationReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPostStatu> MasterPostStatus
        {
            get
            {
                if ((_MasterPostStatus == null))
                {
                    _MasterPostStatus = base.CreateObjectSet<MasterPostStatu>("MasterPostStatus");
                }
                return _MasterPostStatus;
            }
        }
        private ObjectSet<MasterPostStatu> _MasterPostStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterReportList> MasterReportLists
        {
            get
            {
                if ((_MasterReportLists == null))
                {
                    _MasterReportLists = base.CreateObjectSet<MasterReportList>("MasterReportLists");
                }
                return _MasterReportLists;
            }
        }
        private ObjectSet<MasterReportList> _MasterReportLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterRole> MasterRoles
        {
            get
            {
                if ((_MasterRoles == null))
                {
                    _MasterRoles = base.CreateObjectSet<MasterRole>("MasterRoles");
                }
                return _MasterRoles;
            }
        }
        private ObjectSet<MasterRole> _MasterRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterScheduleType> MasterScheduleTypes
        {
            get
            {
                if ((_MasterScheduleTypes == null))
                {
                    _MasterScheduleTypes = base.CreateObjectSet<MasterScheduleType>("MasterScheduleTypes");
                }
                return _MasterScheduleTypes;
            }
        }
        private ObjectSet<MasterScheduleType> _MasterScheduleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterServiceChargeType> MasterServiceChargeTypes
        {
            get
            {
                if ((_MasterServiceChargeTypes == null))
                {
                    _MasterServiceChargeTypes = base.CreateObjectSet<MasterServiceChargeType>("MasterServiceChargeTypes");
                }
                return _MasterServiceChargeTypes;
            }
        }
        private ObjectSet<MasterServiceChargeType> _MasterServiceChargeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterServicePaymentMode> MasterServicePaymentModes
        {
            get
            {
                if ((_MasterServicePaymentModes == null))
                {
                    _MasterServicePaymentModes = base.CreateObjectSet<MasterServicePaymentMode>("MasterServicePaymentModes");
                }
                return _MasterServicePaymentModes;
            }
        }
        private ObjectSet<MasterServicePaymentMode> _MasterServicePaymentModes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterService> MasterServices
        {
            get
            {
                if ((_MasterServices == null))
                {
                    _MasterServices = base.CreateObjectSet<MasterService>("MasterServices");
                }
                return _MasterServices;
            }
        }
        private ObjectSet<MasterService> _MasterServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterSourceType> MasterSourceTypes
        {
            get
            {
                if ((_MasterSourceTypes == null))
                {
                    _MasterSourceTypes = base.CreateObjectSet<MasterSourceType>("MasterSourceTypes");
                }
                return _MasterSourceTypes;
            }
        }
        private ObjectSet<MasterSourceType> _MasterSourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterStatementStatu> MasterStatementStatus
        {
            get
            {
                if ((_MasterStatementStatus == null))
                {
                    _MasterStatementStatus = base.CreateObjectSet<MasterStatementStatu>("MasterStatementStatus");
                }
                return _MasterStatementStatus;
            }
        }
        private ObjectSet<MasterStatementStatu> _MasterStatementStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterSystemConstant> MasterSystemConstants
        {
            get
            {
                if ((_MasterSystemConstants == null))
                {
                    _MasterSystemConstants = base.CreateObjectSet<MasterSystemConstant>("MasterSystemConstants");
                }
                return _MasterSystemConstants;
            }
        }
        private ObjectSet<MasterSystemConstant> _MasterSystemConstants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterSystemEmail> MasterSystemEmails
        {
            get
            {
                if ((_MasterSystemEmails == null))
                {
                    _MasterSystemEmails = base.CreateObjectSet<MasterSystemEmail>("MasterSystemEmails");
                }
                return _MasterSystemEmails;
            }
        }
        private ObjectSet<MasterSystemEmail> _MasterSystemEmails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterZipCode> MasterZipCodes
        {
            get
            {
                if ((_MasterZipCodes == null))
                {
                    _MasterZipCodes = base.CreateObjectSet<MasterZipCode>("MasterZipCodes");
                }
                return _MasterZipCodes;
            }
        }
        private ObjectSet<MasterZipCode> _MasterZipCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payor> Payors
        {
            get
            {
                if ((_Payors == null))
                {
                    _Payors = base.CreateObjectSet<Payor>("Payors");
                }
                return _Payors;
            }
        }
        private ObjectSet<Payor> _Payors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayorSiteLoginInfo> PayorSiteLoginInfoes
        {
            get
            {
                if ((_PayorSiteLoginInfoes == null))
                {
                    _PayorSiteLoginInfoes = base.CreateObjectSet<PayorSiteLoginInfo>("PayorSiteLoginInfoes");
                }
                return _PayorSiteLoginInfoes;
            }
        }
        private ObjectSet<PayorSiteLoginInfo> _PayorSiteLoginInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayorSource> PayorSources
        {
            get
            {
                if ((_PayorSources == null))
                {
                    _PayorSources = base.CreateObjectSet<PayorSource>("PayorSources");
                }
                return _PayorSources;
            }
        }
        private ObjectSet<PayorSource> _PayorSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayorToolField> PayorToolFields
        {
            get
            {
                if ((_PayorToolFields == null))
                {
                    _PayorToolFields = base.CreateObjectSet<PayorToolField>("PayorToolFields");
                }
                return _PayorToolFields;
            }
        }
        private ObjectSet<PayorToolField> _PayorToolFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayorTool> PayorTools
        {
            get
            {
                if ((_PayorTools == null))
                {
                    _PayorTools = base.CreateObjectSet<PayorTool>("PayorTools");
                }
                return _PayorTools;
            }
        }
        private ObjectSet<PayorTool> _PayorTools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Policy> Policies
        {
            get
            {
                if ((_Policies == null))
                {
                    _Policies = base.CreateObjectSet<Policy>("Policies");
                }
                return _Policies;
            }
        }
        private ObjectSet<Policy> _Policies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PoliciesHistory> PoliciesHistories
        {
            get
            {
                if ((_PoliciesHistories == null))
                {
                    _PoliciesHistories = base.CreateObjectSet<PoliciesHistory>("PoliciesHistories");
                }
                return _PoliciesHistories;
            }
        }
        private ObjectSet<PoliciesHistory> _PoliciesHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyIncomingAdvancedSchedule> PolicyIncomingAdvancedSchedules
        {
            get
            {
                if ((_PolicyIncomingAdvancedSchedules == null))
                {
                    _PolicyIncomingAdvancedSchedules = base.CreateObjectSet<PolicyIncomingAdvancedSchedule>("PolicyIncomingAdvancedSchedules");
                }
                return _PolicyIncomingAdvancedSchedules;
            }
        }
        private ObjectSet<PolicyIncomingAdvancedSchedule> _PolicyIncomingAdvancedSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyIncomingSchedule> PolicyIncomingSchedules
        {
            get
            {
                if ((_PolicyIncomingSchedules == null))
                {
                    _PolicyIncomingSchedules = base.CreateObjectSet<PolicyIncomingSchedule>("PolicyIncomingSchedules");
                }
                return _PolicyIncomingSchedules;
            }
        }
        private ObjectSet<PolicyIncomingSchedule> _PolicyIncomingSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyLevelBillingDetail> PolicyLevelBillingDetails
        {
            get
            {
                if ((_PolicyLevelBillingDetails == null))
                {
                    _PolicyLevelBillingDetails = base.CreateObjectSet<PolicyLevelBillingDetail>("PolicyLevelBillingDetails");
                }
                return _PolicyLevelBillingDetails;
            }
        }
        private ObjectSet<PolicyLevelBillingDetail> _PolicyLevelBillingDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyNote> PolicyNotes
        {
            get
            {
                if ((_PolicyNotes == null))
                {
                    _PolicyNotes = base.CreateObjectSet<PolicyNote>("PolicyNotes");
                }
                return _PolicyNotes;
            }
        }
        private ObjectSet<PolicyNote> _PolicyNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyOutgoingAdvancedSchedule> PolicyOutgoingAdvancedSchedules
        {
            get
            {
                if ((_PolicyOutgoingAdvancedSchedules == null))
                {
                    _PolicyOutgoingAdvancedSchedules = base.CreateObjectSet<PolicyOutgoingAdvancedSchedule>("PolicyOutgoingAdvancedSchedules");
                }
                return _PolicyOutgoingAdvancedSchedules;
            }
        }
        private ObjectSet<PolicyOutgoingAdvancedSchedule> _PolicyOutgoingAdvancedSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyOutgoingSchedule> PolicyOutgoingSchedules
        {
            get
            {
                if ((_PolicyOutgoingSchedules == null))
                {
                    _PolicyOutgoingSchedules = base.CreateObjectSet<PolicyOutgoingSchedule>("PolicyOutgoingSchedules");
                }
                return _PolicyOutgoingSchedules;
            }
        }
        private ObjectSet<PolicyOutgoingSchedule> _PolicyOutgoingSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyPaymentAlert> PolicyPaymentAlerts
        {
            get
            {
                if ((_PolicyPaymentAlerts == null))
                {
                    _PolicyPaymentAlerts = base.CreateObjectSet<PolicyPaymentAlert>("PolicyPaymentAlerts");
                }
                return _PolicyPaymentAlerts;
            }
        }
        private ObjectSet<PolicyPaymentAlert> _PolicyPaymentAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyPaymentEntry> PolicyPaymentEntries
        {
            get
            {
                if ((_PolicyPaymentEntries == null))
                {
                    _PolicyPaymentEntries = base.CreateObjectSet<PolicyPaymentEntry>("PolicyPaymentEntries");
                }
                return _PolicyPaymentEntries;
            }
        }
        private ObjectSet<PolicyPaymentEntry> _PolicyPaymentEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceLine> ServiceLines
        {
            get
            {
                if ((_ServiceLines == null))
                {
                    _ServiceLines = base.CreateObjectSet<ServiceLine>("ServiceLines");
                }
                return _ServiceLines;
            }
        }
        private ObjectSet<ServiceLine> _ServiceLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Support> Supports
        {
            get
            {
                if ((_Supports == null))
                {
                    _Supports = base.CreateObjectSet<Support>("Supports");
                }
                return _Supports;
            }
        }
        private ObjectSet<Support> _Supports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Template> Templates
        {
            get
            {
                if ((_Templates == null))
                {
                    _Templates = base.CreateObjectSet<Template>("Templates");
                }
                return _Templates;
            }
        }
        private ObjectSet<Template> _Templates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCredential> UserCredentials
        {
            get
            {
                if ((_UserCredentials == null))
                {
                    _UserCredentials = base.CreateObjectSet<UserCredential>("UserCredentials");
                }
                return _UserCredentials;
            }
        }
        private ObjectSet<UserCredential> _UserCredentials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDetail> UserDetails
        {
            get
            {
                if ((_UserDetails == null))
                {
                    _UserDetails = base.CreateObjectSet<UserDetail>("UserDetails");
                }
                return _UserDetails;
            }
        }
        private ObjectSet<UserDetail> _UserDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPermission> UserPermissions
        {
            get
            {
                if ((_UserPermissions == null))
                {
                    _UserPermissions = base.CreateObjectSet<UserPermission>("UserPermissions");
                }
                return _UserPermissions;
            }
        }
        private ObjectSet<UserPermission> _UserPermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VariablesForBillingLine> VariablesForBillingLines
        {
            get
            {
                if ((_VariablesForBillingLines == null))
                {
                    _VariablesForBillingLines = base.CreateObjectSet<VariablesForBillingLine>("VariablesForBillingLines");
                }
                return _VariablesForBillingLines;
            }
        }
        private ObjectSet<VariablesForBillingLine> _VariablesForBillingLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SendAlertMail> SendAlertMails
        {
            get
            {
                if ((_SendAlertMails == null))
                {
                    _SendAlertMails = base.CreateObjectSet<SendAlertMail>("SendAlertMails");
                }
                return _SendAlertMails;
            }
        }
        private ObjectSet<SendAlertMail> _SendAlertMails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditReport> AuditReports
        {
            get
            {
                if ((_AuditReports == null))
                {
                    _AuditReports = base.CreateObjectSet<AuditReport>("AuditReports");
                }
                return _AuditReports;
            }
        }
        private ObjectSet<AuditReport> _AuditReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementReport> ManagementReports
        {
            get
            {
                if ((_ManagementReports == null))
                {
                    _ManagementReports = base.CreateObjectSet<ManagementReport>("ManagementReports");
                }
                return _ManagementReports;
            }
        }
        private ObjectSet<ManagementReport> _ManagementReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayeeStatementReport> PayeeStatementReports
        {
            get
            {
                if ((_PayeeStatementReports == null))
                {
                    _PayeeStatementReports = base.CreateObjectSet<PayeeStatementReport>("PayeeStatementReports");
                }
                return _PayeeStatementReports;
            }
        }
        private ObjectSet<PayeeStatementReport> _PayeeStatementReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FollowupIssue> FollowupIssues
        {
            get
            {
                if ((_FollowupIssues == null))
                {
                    _FollowupIssues = base.CreateObjectSet<FollowupIssue>("FollowupIssues");
                }
                return _FollowupIssues;
            }
        }
        private ObjectSet<FollowupIssue> _FollowupIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Statement> Statements
        {
            get
            {
                if ((_Statements == null))
                {
                    _Statements = base.CreateObjectSet<Statement>("Statements");
                }
                return _Statements;
            }
        }
        private ObjectSet<Statement> _Statements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrokerCode> BrokerCodes
        {
            get
            {
                if ((_BrokerCodes == null))
                {
                    _BrokerCodes = base.CreateObjectSet<BrokerCode>("BrokerCodes");
                }
                return _BrokerCodes;
            }
        }
        private ObjectSet<BrokerCode> _BrokerCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkedUserList> LinkedUserLists
        {
            get
            {
                if ((_LinkedUserLists == null))
                {
                    _LinkedUserLists = base.CreateObjectSet<LinkedUserList>("LinkedUserLists");
                }
                return _LinkedUserLists;
            }
        }
        private ObjectSet<LinkedUserList> _LinkedUserLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolBrokersSetting> ImportToolBrokersSettings
        {
            get
            {
                if ((_ImportToolBrokersSettings == null))
                {
                    _ImportToolBrokersSettings = base.CreateObjectSet<ImportToolBrokersSetting>("ImportToolBrokersSettings");
                }
                return _ImportToolBrokersSettings;
            }
        }
        private ObjectSet<ImportToolBrokersSetting> _ImportToolBrokersSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolMasterStatementData> ImportToolMasterStatementDatas
        {
            get
            {
                if ((_ImportToolMasterStatementDatas == null))
                {
                    _ImportToolMasterStatementDatas = base.CreateObjectSet<ImportToolMasterStatementData>("ImportToolMasterStatementDatas");
                }
                return _ImportToolMasterStatementDatas;
            }
        }
        private ObjectSet<ImportToolMasterStatementData> _ImportToolMasterStatementDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolTemplatePhrase> ImportToolTemplatePhrases
        {
            get
            {
                if ((_ImportToolTemplatePhrases == null))
                {
                    _ImportToolTemplatePhrases = base.CreateObjectSet<ImportToolTemplatePhrase>("ImportToolTemplatePhrases");
                }
                return _ImportToolTemplatePhrases;
            }
        }
        private ObjectSet<ImportToolTemplatePhrase> _ImportToolTemplatePhrases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolPayorPhrase> ImportToolPayorPhrases
        {
            get
            {
                if ((_ImportToolPayorPhrases == null))
                {
                    _ImportToolPayorPhrases = base.CreateObjectSet<ImportToolPayorPhrase>("ImportToolPayorPhrases");
                }
                return _ImportToolPayorPhrases;
            }
        }
        private ObjectSet<ImportToolPayorPhrase> _ImportToolPayorPhrases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolSeletedPaymentData> ImportToolSeletedPaymentDatas
        {
            get
            {
                if ((_ImportToolSeletedPaymentDatas == null))
                {
                    _ImportToolSeletedPaymentDatas = base.CreateObjectSet<ImportToolSeletedPaymentData>("ImportToolSeletedPaymentDatas");
                }
                return _ImportToolSeletedPaymentDatas;
            }
        }
        private ObjectSet<ImportToolSeletedPaymentData> _ImportToolSeletedPaymentDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolStatementDataSetting> ImportToolStatementDataSettings
        {
            get
            {
                if ((_ImportToolStatementDataSettings == null))
                {
                    _ImportToolStatementDataSettings = base.CreateObjectSet<ImportToolStatementDataSetting>("ImportToolStatementDataSettings");
                }
                return _ImportToolStatementDataSettings;
            }
        }
        private ObjectSet<ImportToolStatementDataSetting> _ImportToolStatementDataSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolPaymentDataFieldsSetting> ImportToolPaymentDataFieldsSettings
        {
            get
            {
                if ((_ImportToolPaymentDataFieldsSettings == null))
                {
                    _ImportToolPaymentDataFieldsSettings = base.CreateObjectSet<ImportToolPaymentDataFieldsSetting>("ImportToolPaymentDataFieldsSettings");
                }
                return _ImportToolPaymentDataFieldsSettings;
            }
        }
        private ObjectSet<ImportToolPaymentDataFieldsSetting> _ImportToolPaymentDataFieldsSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolAvailableField> ImportToolAvailableFields
        {
            get
            {
                if ((_ImportToolAvailableFields == null))
                {
                    _ImportToolAvailableFields = base.CreateObjectSet<ImportToolAvailableField>("ImportToolAvailableFields");
                }
                return _ImportToolAvailableFields;
            }
        }
        private ObjectSet<ImportToolAvailableField> _ImportToolAvailableFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                if ((_PolicyLearnedFields == null))
                {
                    _PolicyLearnedFields = base.CreateObjectSet<PolicyLearnedField>("PolicyLearnedFields");
                }
                return _PolicyLearnedFields;
            }
        }
        private ObjectSet<PolicyLearnedField> _PolicyLearnedFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                if ((_PolicyLearnedFieldsHistories == null))
                {
                    _PolicyLearnedFieldsHistories = base.CreateObjectSet<PolicyLearnedFieldsHistory>("PolicyLearnedFieldsHistories");
                }
                return _PolicyLearnedFieldsHistories;
            }
        }
        private ObjectSet<PolicyLearnedFieldsHistory> _PolicyLearnedFieldsHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolCommTranslator> ImportToolCommTranslators
        {
            get
            {
                if ((_ImportToolCommTranslators == null))
                {
                    _ImportToolCommTranslators = base.CreateObjectSet<ImportToolCommTranslator>("ImportToolCommTranslators");
                }
                return _ImportToolCommTranslators;
            }
        }
        private ObjectSet<ImportToolCommTranslator> _ImportToolCommTranslators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoverageNickName> CoverageNickNames
        {
            get
            {
                if ((_CoverageNickNames == null))
                {
                    _CoverageNickNames = base.CreateObjectSet<CoverageNickName>("CoverageNickNames");
                }
                return _CoverageNickNames;
            }
        }
        private ObjectSet<CoverageNickName> _CoverageNickNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayorTemplate> PayorTemplates
        {
            get
            {
                if ((_PayorTemplates == null))
                {
                    _PayorTemplates = base.CreateObjectSet<PayorTemplate>("PayorTemplates");
                }
                return _PayorTemplates;
            }
        }
        private ObjectSet<PayorTemplate> _PayorTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportToolPayorTemplate> ImportToolPayorTemplates
        {
            get
            {
                if ((_ImportToolPayorTemplates == null))
                {
                    _ImportToolPayorTemplates = base.CreateObjectSet<ImportToolPayorTemplate>("ImportToolPayorTemplates");
                }
                return _ImportToolPayorTemplates;
            }
        }
        private ObjectSet<ImportToolPayorTemplate> _ImportToolPayorTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IncomingCompType> IncomingCompTypes
        {
            get
            {
                if ((_IncomingCompTypes == null))
                {
                    _IncomingCompTypes = base.CreateObjectSet<IncomingCompType>("IncomingCompTypes");
                }
                return _IncomingCompTypes;
            }
        }
        private ObjectSet<IncomingCompType> _IncomingCompTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyOutgoingPayment> PolicyOutgoingPayments
        {
            get
            {
                if ((_PolicyOutgoingPayments == null))
                {
                    _PolicyOutgoingPayments = base.CreateObjectSet<PolicyOutgoingPayment>("PolicyOutgoingPayments");
                }
                return _PolicyOutgoingPayments;
            }
        }
        private ObjectSet<PolicyOutgoingPayment> _PolicyOutgoingPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tbPMCVarianceSlab> tbPMCVarianceSlabs
        {
            get
            {
                if ((_tbPMCVarianceSlabs == null))
                {
                    _tbPMCVarianceSlabs = base.CreateObjectSet<tbPMCVarianceSlab>("tbPMCVarianceSlabs");
                }
                return _tbPMCVarianceSlabs;
            }
        }
        private ObjectSet<tbPMCVarianceSlab> _tbPMCVarianceSlabs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutoDEUEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutoDEUEntries(AutoDEUEntry autoDEUEntry)
        {
            base.AddObject("AutoDEUEntries", autoDEUEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Batches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatches(Batch batch)
        {
            base.AddObject("Batches", batch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierNickNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierNickNames(CarrierNickName carrierNickName)
        {
            base.AddObject("CarrierNickNames", carrierNickName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carriers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarriers(Carrier carrier)
        {
            base.AddObject("Carriers", carrier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coverages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverages(Coverage coverage)
        {
            base.AddObject("Coverages", coverage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntriesByDEUs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntriesByDEUs(EntriesByDEU entriesByDEU)
        {
            base.AddObject("EntriesByDEUs", entriesByDEU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExportBatchFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExportBatchFiles(ExportBatchFile exportBatchFile)
        {
            base.AddObject("ExportBatchFiles", exportBatchFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldMappings(FieldMapping fieldMapping)
        {
            base.AddObject("FieldMappings", fieldMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Formulas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormulas(Formula formula)
        {
            base.AddObject("Formulas", formula);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalCoveragesSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalCoveragesSchedules(GlobalCoveragesSchedule globalCoveragesSchedule)
        {
            base.AddObject("GlobalCoveragesSchedules", globalCoveragesSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalPayorContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalPayorContacts(GlobalPayorContact globalPayorContact)
        {
            base.AddObject("GlobalPayorContacts", globalPayorContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalPayorDefaults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalPayorDefaults(GlobalPayorDefault globalPayorDefault)
        {
            base.AddObject("GlobalPayorDefaults", globalPayorDefault);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalPayorStatementDates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalPayorStatementDates(GlobalPayorStatementDate globalPayorStatementDate)
        {
            base.AddObject("GlobalPayorStatementDates", globalPayorStatementDate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportBatchFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportBatchFiles(ImportBatchFile importBatchFile)
        {
            base.AddObject("ImportBatchFiles", importBatchFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceBillingLineDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceBillingLineDetails(InvoiceBillingLineDetail invoiceBillingLineDetail)
        {
            base.AddObject("InvoiceBillingLineDetails", invoiceBillingLineDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssuedFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssuedFiles(IssuedFile issuedFile)
        {
            base.AddObject("IssuedFiles", issuedFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issuelogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssuelogs(Issuelog issuelog)
        {
            base.AddObject("Issuelogs", issuelog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Journals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournals(Journal journal)
        {
            base.AddObject("Journals", journal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LastPolicyVieweds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLastPolicyVieweds(LastPolicyViewed lastPolicyViewed)
        {
            base.AddObject("LastPolicyVieweds", lastPolicyViewed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicenseeNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenseeNotes(LicenseeNote licenseeNote)
        {
            base.AddObject("LicenseeNotes", licenseeNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicenseePayors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenseePayors(LicenseePayor licenseePayor)
        {
            base.AddObject("LicenseePayors", licenseePayor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicenseePayorSiteInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenseePayorSiteInfoes(LicenseePayorSiteInfo licenseePayorSiteInfo)
        {
            base.AddObject("LicenseePayorSiteInfoes", licenseePayorSiteInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Licensees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicensees(Licensee licensee)
        {
            base.AddObject("Licensees", licensee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicenseeServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenseeServices(LicenseeService licenseeService)
        {
            base.AddObject("LicenseeServices", licenseeService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterAccessRights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterAccessRights(MasterAccessRight masterAccessRight)
        {
            base.AddObject("MasterAccessRights", masterAccessRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterAlertTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterAlertTypes(MasterAlertType masterAlertType)
        {
            base.AddObject("MasterAlertTypes", masterAlertType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterBasicIncomingSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterBasicIncomingSchedules(MasterBasicIncomingSchedule masterBasicIncomingSchedule)
        {
            base.AddObject("MasterBasicIncomingSchedules", masterBasicIncomingSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterBasicOutgoingSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterBasicOutgoingSchedules(MasterBasicOutgoingSchedule masterBasicOutgoingSchedule)
        {
            base.AddObject("MasterBasicOutgoingSchedules", masterBasicOutgoingSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterBatchDownloadStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterBatchDownloadStatus(MasterBatchDownloadStatu masterBatchDownloadStatu)
        {
            base.AddObject("MasterBatchDownloadStatus", masterBatchDownloadStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterBatchEntryStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterBatchEntryStatus(MasterBatchEntryStatu masterBatchEntryStatu)
        {
            base.AddObject("MasterBatchEntryStatus", masterBatchEntryStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterBatchUploadStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterBatchUploadStatus(MasterBatchUploadStatu masterBatchUploadStatu)
        {
            base.AddObject("MasterBatchUploadStatus", masterBatchUploadStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterBillPaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterBillPaymentTypes(MasterBillPaymentType masterBillPaymentType)
        {
            base.AddObject("MasterBillPaymentTypes", masterBillPaymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterFileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterFileTypes(MasterFileType masterFileType)
        {
            base.AddObject("MasterFileTypes", masterFileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterIncomingPaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterIncomingPaymentTypes(MasterIncomingPaymentType masterIncomingPaymentType)
        {
            base.AddObject("MasterIncomingPaymentTypes", masterIncomingPaymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterIssueCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterIssueCategories(MasterIssueCategory masterIssueCategory)
        {
            base.AddObject("MasterIssueCategories", masterIssueCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterIssueReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterIssueReasons(MasterIssueReason masterIssueReason)
        {
            base.AddObject("MasterIssueReasons", masterIssueReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterIssueResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterIssueResults(MasterIssueResult masterIssueResult)
        {
            base.AddObject("MasterIssueResults", masterIssueResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterIssueStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterIssueStatus(MasterIssueStatu masterIssueStatu)
        {
            base.AddObject("MasterIssueStatus", masterIssueStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterLicensePaymentModes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterLicensePaymentModes(MasterLicensePaymentMode masterLicensePaymentMode)
        {
            base.AddObject("MasterLicensePaymentModes", masterLicensePaymentMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterLicenseStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterLicenseStatus(MasterLicenseStatu masterLicenseStatu)
        {
            base.AddObject("MasterLicenseStatus", masterLicenseStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterManagementReportsOrderByTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterManagementReportsOrderByTypes(MasterManagementReportsOrderByType masterManagementReportsOrderByType)
        {
            base.AddObject("MasterManagementReportsOrderByTypes", masterManagementReportsOrderByType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterModules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterModules(MasterModule masterModule)
        {
            base.AddObject("MasterModules", masterModule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPasswordHintQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPasswordHintQuestions(MasterPasswordHintQuestion masterPasswordHintQuestion)
        {
            base.AddObject("MasterPasswordHintQuestions", masterPasswordHintQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPaymentStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPaymentStatus(MasterPaymentStatu masterPaymentStatu)
        {
            base.AddObject("MasterPaymentStatus", masterPaymentStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorRegions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorRegions(MasterPayorRegion masterPayorRegion)
        {
            base.AddObject("MasterPayorRegions", masterPayorRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorSourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorSourceTypes(MasterPayorSourceType masterPayorSourceType)
        {
            base.AddObject("MasterPayorSourceTypes", masterPayorSourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorStatus(MasterPayorStatu masterPayorStatu)
        {
            base.AddObject("MasterPayorStatus", masterPayorStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorToolAvailableFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorToolAvailableFields(MasterPayorToolAvailableField masterPayorToolAvailableField)
        {
            base.AddObject("MasterPayorToolAvailableFields", masterPayorToolAvailableField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorToolIncomingFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorToolIncomingFields(MasterPayorToolIncomingField masterPayorToolIncomingField)
        {
            base.AddObject("MasterPayorToolIncomingFields", masterPayorToolIncomingField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorToolLearnedFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorToolLearnedFields(MasterPayorToolLearnedField masterPayorToolLearnedField)
        {
            base.AddObject("MasterPayorToolLearnedFields", masterPayorToolLearnedField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorToolMaskFieldTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorToolMaskFieldTypes(MasterPayorToolMaskFieldType masterPayorToolMaskFieldType)
        {
            base.AddObject("MasterPayorToolMaskFieldTypes", masterPayorToolMaskFieldType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPayorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPayorTypes(MasterPayorType masterPayorType)
        {
            base.AddObject("MasterPayorTypes", masterPayorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPermissionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPermissionTypes(MasterPermissionType masterPermissionType)
        {
            base.AddObject("MasterPermissionTypes", masterPermissionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPolicyModes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPolicyModes(MasterPolicyMode masterPolicyMode)
        {
            base.AddObject("MasterPolicyModes", masterPolicyMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPolicyStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPolicyStatus(MasterPolicyStatu masterPolicyStatu)
        {
            base.AddObject("MasterPolicyStatus", masterPolicyStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPolicyTerminationReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPolicyTerminationReasons(MasterPolicyTerminationReason masterPolicyTerminationReason)
        {
            base.AddObject("MasterPolicyTerminationReasons", masterPolicyTerminationReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPostStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPostStatus(MasterPostStatu masterPostStatu)
        {
            base.AddObject("MasterPostStatus", masterPostStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterReportLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterReportLists(MasterReportList masterReportList)
        {
            base.AddObject("MasterReportLists", masterReportList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterRoles(MasterRole masterRole)
        {
            base.AddObject("MasterRoles", masterRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterScheduleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterScheduleTypes(MasterScheduleType masterScheduleType)
        {
            base.AddObject("MasterScheduleTypes", masterScheduleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterServiceChargeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterServiceChargeTypes(MasterServiceChargeType masterServiceChargeType)
        {
            base.AddObject("MasterServiceChargeTypes", masterServiceChargeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterServicePaymentModes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterServicePaymentModes(MasterServicePaymentMode masterServicePaymentMode)
        {
            base.AddObject("MasterServicePaymentModes", masterServicePaymentMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterServices(MasterService masterService)
        {
            base.AddObject("MasterServices", masterService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterSourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterSourceTypes(MasterSourceType masterSourceType)
        {
            base.AddObject("MasterSourceTypes", masterSourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterStatementStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterStatementStatus(MasterStatementStatu masterStatementStatu)
        {
            base.AddObject("MasterStatementStatus", masterStatementStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterSystemConstants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterSystemConstants(MasterSystemConstant masterSystemConstant)
        {
            base.AddObject("MasterSystemConstants", masterSystemConstant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterSystemEmails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterSystemEmails(MasterSystemEmail masterSystemEmail)
        {
            base.AddObject("MasterSystemEmails", masterSystemEmail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterZipCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterZipCodes(MasterZipCode masterZipCode)
        {
            base.AddObject("MasterZipCodes", masterZipCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayors(Payor payor)
        {
            base.AddObject("Payors", payor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayorSiteLoginInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayorSiteLoginInfoes(PayorSiteLoginInfo payorSiteLoginInfo)
        {
            base.AddObject("PayorSiteLoginInfoes", payorSiteLoginInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayorSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayorSources(PayorSource payorSource)
        {
            base.AddObject("PayorSources", payorSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayorToolFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayorToolFields(PayorToolField payorToolField)
        {
            base.AddObject("PayorToolFields", payorToolField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayorTools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayorTools(PayorTool payorTool)
        {
            base.AddObject("PayorTools", payorTool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Policies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicies(Policy policy)
        {
            base.AddObject("Policies", policy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PoliciesHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPoliciesHistories(PoliciesHistory policiesHistory)
        {
            base.AddObject("PoliciesHistories", policiesHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyIncomingAdvancedSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyIncomingAdvancedSchedules(PolicyIncomingAdvancedSchedule policyIncomingAdvancedSchedule)
        {
            base.AddObject("PolicyIncomingAdvancedSchedules", policyIncomingAdvancedSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyIncomingSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyIncomingSchedules(PolicyIncomingSchedule policyIncomingSchedule)
        {
            base.AddObject("PolicyIncomingSchedules", policyIncomingSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyLevelBillingDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyLevelBillingDetails(PolicyLevelBillingDetail policyLevelBillingDetail)
        {
            base.AddObject("PolicyLevelBillingDetails", policyLevelBillingDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyNotes(PolicyNote policyNote)
        {
            base.AddObject("PolicyNotes", policyNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyOutgoingAdvancedSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyOutgoingAdvancedSchedules(PolicyOutgoingAdvancedSchedule policyOutgoingAdvancedSchedule)
        {
            base.AddObject("PolicyOutgoingAdvancedSchedules", policyOutgoingAdvancedSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyOutgoingSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyOutgoingSchedules(PolicyOutgoingSchedule policyOutgoingSchedule)
        {
            base.AddObject("PolicyOutgoingSchedules", policyOutgoingSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyPaymentAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyPaymentAlerts(PolicyPaymentAlert policyPaymentAlert)
        {
            base.AddObject("PolicyPaymentAlerts", policyPaymentAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyPaymentEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyPaymentEntries(PolicyPaymentEntry policyPaymentEntry)
        {
            base.AddObject("PolicyPaymentEntries", policyPaymentEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceLines(ServiceLine serviceLine)
        {
            base.AddObject("ServiceLines", serviceLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupports(Support support)
        {
            base.AddObject("Supports", support);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Templates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplates(Template template)
        {
            base.AddObject("Templates", template);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCredentials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCredentials(UserCredential userCredential)
        {
            base.AddObject("UserCredentials", userCredential);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDetails(UserDetail userDetail)
        {
            base.AddObject("UserDetails", userDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPermissions(UserPermission userPermission)
        {
            base.AddObject("UserPermissions", userPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VariablesForBillingLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVariablesForBillingLines(VariablesForBillingLine variablesForBillingLine)
        {
            base.AddObject("VariablesForBillingLines", variablesForBillingLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SendAlertMails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSendAlertMails(SendAlertMail sendAlertMail)
        {
            base.AddObject("SendAlertMails", sendAlertMail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditReports(AuditReport auditReport)
        {
            base.AddObject("AuditReports", auditReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementReports(ManagementReport managementReport)
        {
            base.AddObject("ManagementReports", managementReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayeeStatementReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayeeStatementReports(PayeeStatementReport payeeStatementReport)
        {
            base.AddObject("PayeeStatementReports", payeeStatementReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FollowupIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFollowupIssues(FollowupIssue followupIssue)
        {
            base.AddObject("FollowupIssues", followupIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatements(Statement statement)
        {
            base.AddObject("Statements", statement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrokerCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrokerCodes(BrokerCode brokerCode)
        {
            base.AddObject("BrokerCodes", brokerCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkedUserLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkedUserLists(LinkedUserList linkedUserList)
        {
            base.AddObject("LinkedUserLists", linkedUserList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolBrokersSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolBrokersSettings(ImportToolBrokersSetting importToolBrokersSetting)
        {
            base.AddObject("ImportToolBrokersSettings", importToolBrokersSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolMasterStatementDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolMasterStatementDatas(ImportToolMasterStatementData importToolMasterStatementData)
        {
            base.AddObject("ImportToolMasterStatementDatas", importToolMasterStatementData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolTemplatePhrases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolTemplatePhrases(ImportToolTemplatePhrase importToolTemplatePhrase)
        {
            base.AddObject("ImportToolTemplatePhrases", importToolTemplatePhrase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolPayorPhrases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolPayorPhrases(ImportToolPayorPhrase importToolPayorPhrase)
        {
            base.AddObject("ImportToolPayorPhrases", importToolPayorPhrase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolSeletedPaymentDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolSeletedPaymentDatas(ImportToolSeletedPaymentData importToolSeletedPaymentData)
        {
            base.AddObject("ImportToolSeletedPaymentDatas", importToolSeletedPaymentData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolStatementDataSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolStatementDataSettings(ImportToolStatementDataSetting importToolStatementDataSetting)
        {
            base.AddObject("ImportToolStatementDataSettings", importToolStatementDataSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolPaymentDataFieldsSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolPaymentDataFieldsSettings(ImportToolPaymentDataFieldsSetting importToolPaymentDataFieldsSetting)
        {
            base.AddObject("ImportToolPaymentDataFieldsSettings", importToolPaymentDataFieldsSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolAvailableFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolAvailableFields(ImportToolAvailableField importToolAvailableField)
        {
            base.AddObject("ImportToolAvailableFields", importToolAvailableField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyLearnedFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyLearnedFields(PolicyLearnedField policyLearnedField)
        {
            base.AddObject("PolicyLearnedFields", policyLearnedField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyLearnedFieldsHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyLearnedFieldsHistories(PolicyLearnedFieldsHistory policyLearnedFieldsHistory)
        {
            base.AddObject("PolicyLearnedFieldsHistories", policyLearnedFieldsHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolCommTranslators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolCommTranslators(ImportToolCommTranslator importToolCommTranslator)
        {
            base.AddObject("ImportToolCommTranslators", importToolCommTranslator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CoverageNickNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverageNickNames(CoverageNickName coverageNickName)
        {
            base.AddObject("CoverageNickNames", coverageNickName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayorTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayorTemplates(PayorTemplate payorTemplate)
        {
            base.AddObject("PayorTemplates", payorTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportToolPayorTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportToolPayorTemplates(ImportToolPayorTemplate importToolPayorTemplate)
        {
            base.AddObject("ImportToolPayorTemplates", importToolPayorTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IncomingCompTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncomingCompTypes(IncomingCompType incomingCompType)
        {
            base.AddObject("IncomingCompTypes", incomingCompType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyOutgoingPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyOutgoingPayments(PolicyOutgoingPayment policyOutgoingPayment)
        {
            base.AddObject("PolicyOutgoingPayments", policyOutgoingPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tbPMCVarianceSlabs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotbPMCVarianceSlabs(tbPMCVarianceSlab tbPMCVarianceSlab)
        {
            base.AddObject("tbPMCVarianceSlabs", tbPMCVarianceSlab);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyID">No Metadata Documentation available.</param>
        public ObjectResult<CalculatePMC_Result> CalculatePMC(Nullable<global::System.Guid> policyID)
        {
            ObjectParameter policyIDParameter;
            if (policyID.HasValue)
            {
                policyIDParameter = new ObjectParameter("PolicyID", policyID);
            }
            else
            {
                policyIDParameter = new ObjectParameter("PolicyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<CalculatePMC_Result>("CalculatePMC", policyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyId">No Metadata Documentation available.</param>
        /// <param name="isLockObtained">No Metadata Documentation available.</param>
        public int LockPolicy(Nullable<global::System.Guid> policyId, ObjectParameter isLockObtained)
        {
            ObjectParameter policyIdParameter;
            if (policyId.HasValue)
            {
                policyIdParameter = new ObjectParameter("PolicyId", policyId);
            }
            else
            {
                policyIdParameter = new ObjectParameter("PolicyId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("LockPolicy", policyIdParameter, isLockObtained);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyId">No Metadata Documentation available.</param>
        /// <param name="unlockSuccessfull">No Metadata Documentation available.</param>
        public int UnlockPolicy(Nullable<global::System.Guid> policyId, ObjectParameter unlockSuccessfull)
        {
            ObjectParameter policyIdParameter;
            if (policyId.HasValue)
            {
                policyIdParameter = new ObjectParameter("PolicyId", policyId);
            }
            else
            {
                policyIdParameter = new ObjectParameter("PolicyId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("UnlockPolicy", policyIdParameter, unlockSuccessfull);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyID">No Metadata Documentation available.</param>
        public ObjectResult<CalculatePAC_Result> CalculatePAC(Nullable<global::System.Guid> policyID)
        {
            ObjectParameter policyIDParameter;
            if (policyID.HasValue)
            {
                policyIDParameter = new ObjectParameter("PolicyID", policyID);
            }
            else
            {
                policyIDParameter = new ObjectParameter("PolicyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<CalculatePAC_Result>("CalculatePAC", policyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int AllFollowupIssue()
        {
            return base.ExecuteFunction("AllFollowupIssue");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<SP_AllFollowUPIssue_Result> SP_AllFollowUPIssue_Result()
        {
            return base.ExecuteFunction<SP_AllFollowUPIssue_Result>("SP_AllFollowUPIssue_Result");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="payorId">No Metadata Documentation available.</param>
        /// <param name="agencyID">No Metadata Documentation available.</param>
        public ObjectResult<Select_FirstFollowupIssue_Result> SP_Select_FirstFollowuP_Result(Nullable<global::System.Int32> status, Nullable<global::System.Guid> payorId, Nullable<global::System.Guid> agencyID)
        {
            ObjectParameter statusParameter;
            if (status.HasValue)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.Int32));
            }
    
            ObjectParameter payorIdParameter;
            if (payorId.HasValue)
            {
                payorIdParameter = new ObjectParameter("PayorId", payorId);
            }
            else
            {
                payorIdParameter = new ObjectParameter("PayorId", typeof(global::System.Guid));
            }
    
            ObjectParameter agencyIDParameter;
            if (agencyID.HasValue)
            {
                agencyIDParameter = new ObjectParameter("AgencyID", agencyID);
            }
            else
            {
                agencyIDParameter = new ObjectParameter("AgencyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Select_FirstFollowupIssue_Result>("SP_Select_FirstFollowuP_Result", statusParameter, payorIdParameter, agencyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="followup">No Metadata Documentation available.</param>
        public ObjectResult<sp_Select_Followupnew_Result> sp_Select_Followupnew_Result(Nullable<global::System.Boolean> followup)
        {
            ObjectParameter followupParameter;
            if (followup.HasValue)
            {
                followupParameter = new ObjectParameter("Followup", followup);
            }
            else
            {
                followupParameter = new ObjectParameter("Followup", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<sp_Select_Followupnew_Result>("sp_Select_Followupnew_Result", followupParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="followup">No Metadata Documentation available.</param>
        public ObjectResult<Sp_FollowupIssue_Result> Sp_FollowupIssue_Result(Nullable<global::System.Boolean> followup)
        {
            ObjectParameter followupParameter;
            if (followup.HasValue)
            {
                followupParameter = new ObjectParameter("Followup", followup);
            }
            else
            {
                followupParameter = new ObjectParameter("Followup", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Sp_FollowupIssue_Result>("Sp_FollowupIssue_Result", followupParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="licenseeId">No Metadata Documentation available.</param>
        /// <param name="followup">No Metadata Documentation available.</param>
        public ObjectResult<Sp_SelectFollowupRecord_Result> Sp_SelectFollowupRecord(Nullable<global::System.Guid> licenseeId, Nullable<global::System.Boolean> followup)
        {
            ObjectParameter licenseeIdParameter;
            if (licenseeId.HasValue)
            {
                licenseeIdParameter = new ObjectParameter("LicenseeId", licenseeId);
            }
            else
            {
                licenseeIdParameter = new ObjectParameter("LicenseeId", typeof(global::System.Guid));
            }
    
            ObjectParameter followupParameter;
            if (followup.HasValue)
            {
                followupParameter = new ObjectParameter("Followup", followup);
            }
            else
            {
                followupParameter = new ObjectParameter("Followup", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Sp_SelectFollowupRecord_Result>("Sp_SelectFollowupRecord", licenseeIdParameter, followupParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="licenseeId">No Metadata Documentation available.</param>
        /// <param name="followup">No Metadata Documentation available.</param>
        /// <param name="noOfDays">No Metadata Documentation available.</param>
        public ObjectResult<FollowupFilter_Result> FollowupFilter(Nullable<global::System.Guid> licenseeId, Nullable<global::System.Boolean> followup, Nullable<global::System.Int32> noOfDays)
        {
            ObjectParameter licenseeIdParameter;
            if (licenseeId.HasValue)
            {
                licenseeIdParameter = new ObjectParameter("LicenseeId", licenseeId);
            }
            else
            {
                licenseeIdParameter = new ObjectParameter("LicenseeId", typeof(global::System.Guid));
            }
    
            ObjectParameter followupParameter;
            if (followup.HasValue)
            {
                followupParameter = new ObjectParameter("Followup", followup);
            }
            else
            {
                followupParameter = new ObjectParameter("Followup", typeof(global::System.Boolean));
            }
    
            ObjectParameter noOfDaysParameter;
            if (noOfDays.HasValue)
            {
                noOfDaysParameter = new ObjectParameter("NoOfDays", noOfDays);
            }
            else
            {
                noOfDaysParameter = new ObjectParameter("NoOfDays", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FollowupFilter_Result>("FollowupFilter", licenseeIdParameter, followupParameter, noOfDaysParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="licenseeId">No Metadata Documentation available.</param>
        /// <param name="followup">No Metadata Documentation available.</param>
        /// <param name="noOfDays">No Metadata Documentation available.</param>
        public ObjectResult<AllFollowupFilter_Result> AllFollowupFilter(Nullable<global::System.Guid> licenseeId, Nullable<global::System.Boolean> followup, Nullable<global::System.Int32> noOfDays)
        {
            ObjectParameter licenseeIdParameter;
            if (licenseeId.HasValue)
            {
                licenseeIdParameter = new ObjectParameter("LicenseeId", licenseeId);
            }
            else
            {
                licenseeIdParameter = new ObjectParameter("LicenseeId", typeof(global::System.Guid));
            }
    
            ObjectParameter followupParameter;
            if (followup.HasValue)
            {
                followupParameter = new ObjectParameter("Followup", followup);
            }
            else
            {
                followupParameter = new ObjectParameter("Followup", typeof(global::System.Boolean));
            }
    
            ObjectParameter noOfDaysParameter;
            if (noOfDays.HasValue)
            {
                noOfDaysParameter = new ObjectParameter("NoOfDays", noOfDays);
            }
            else
            {
                noOfDaysParameter = new ObjectParameter("NoOfDays", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<AllFollowupFilter_Result>("AllFollowupFilter", licenseeIdParameter, followupParameter, noOfDaysParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyId">No Metadata Documentation available.</param>
        public int UpdatelastFollowupRuns(Nullable<global::System.Guid> policyId)
        {
            ObjectParameter policyIdParameter;
            if (policyId.HasValue)
            {
                policyIdParameter = new ObjectParameter("PolicyId", policyId);
            }
            else
            {
                policyIdParameter = new ObjectParameter("PolicyId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("UpdatelastFollowupRuns", policyIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyID">No Metadata Documentation available.</param>
        public ObjectResult<GetPolicyPaymentEntryPolicyIDWise_Result> GetPolicyPaymentEntryPolicyIDWise(Nullable<global::System.Guid> policyID)
        {
            ObjectParameter policyIDParameter;
            if (policyID.HasValue)
            {
                policyIDParameter = new ObjectParameter("PolicyID", policyID);
            }
            else
            {
                policyIDParameter = new ObjectParameter("PolicyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetPolicyPaymentEntryPolicyIDWise_Result>("GetPolicyPaymentEntryPolicyIDWise", policyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="str1">No Metadata Documentation available.</param>
        public ObjectResult<FillPolicy_Result> FillPolicy(global::System.String str1)
        {
            ObjectParameter str1Parameter;
            if (str1 != null)
            {
                str1Parameter = new ObjectParameter("Str1", str1);
            }
            else
            {
                str1Parameter = new ObjectParameter("Str1", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FillPolicy_Result>("FillPolicy", str1Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyID">No Metadata Documentation available.</param>
        public ObjectResult<GetPolicyLearnedFieldsPolicyWise_Result> GetPolicyLearnedFieldsPolicyWise(Nullable<global::System.Guid> policyID)
        {
            ObjectParameter policyIDParameter;
            if (policyID.HasValue)
            {
                policyIDParameter = new ObjectParameter("policyID", policyID);
            }
            else
            {
                policyIDParameter = new ObjectParameter("policyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetPolicyLearnedFieldsPolicyWise_Result>("GetPolicyLearnedFieldsPolicyWise", policyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="statementID">No Metadata Documentation available.</param>
        public ObjectResult<GetDeuEntriesforStatement_Result> GetDeuEntriesforStatement(Nullable<global::System.Guid> statementID)
        {
            ObjectParameter statementIDParameter;
            if (statementID.HasValue)
            {
                statementIDParameter = new ObjectParameter("StatementID", statementID);
            }
            else
            {
                statementIDParameter = new ObjectParameter("StatementID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetDeuEntriesforStatement_Result>("GetDeuEntriesforStatement", statementIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="batchId">No Metadata Documentation available.</param>
        public ObjectResult<GetStatementList_Result> GetStatementList(Nullable<global::System.Guid> batchId)
        {
            ObjectParameter batchIdParameter;
            if (batchId.HasValue)
            {
                batchIdParameter = new ObjectParameter("BatchId", batchId);
            }
            else
            {
                batchIdParameter = new ObjectParameter("BatchId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetStatementList_Result>("GetStatementList", batchIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetBatchesForDeuEntries_Result> GetBatchesForDeuEntries()
        {
            return base.ExecuteFunction<GetBatchesForDeuEntries_Result>("GetBatchesForDeuEntries");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int TestSp()
        {
            return base.ExecuteFunction("TestSp");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="policyID">No Metadata Documentation available.</param>
        public ObjectResult<GetIssues_Result> GetIssues(Nullable<global::System.Guid> policyID)
        {
            ObjectParameter policyIDParameter;
            if (policyID.HasValue)
            {
                policyIDParameter = new ObjectParameter("policyID", policyID);
            }
            else
            {
                policyIDParameter = new ObjectParameter("policyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetIssues_Result>("GetIssues", policyIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AuditReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditReport object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="licenceID">Initial value of the LicenceID property.</param>
        public static AuditReport CreateAuditReport(global::System.Guid reportId, global::System.Guid licenceID)
        {
            AuditReport auditReport = new AuditReport();
            auditReport.ReportId = reportId;
            auditReport.LicenceID = licenceID;
            return auditReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenceID
        {
            get
            {
                return _LicenceID;
            }
            set
            {
                OnLicenceIDChanging(value);
                ReportPropertyChanging("LicenceID");
                _LicenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenceID");
                OnLicenceIDChanged();
            }
        }
        private global::System.Guid _LicenceID;
        partial void OnLicenceIDChanging(global::System.Guid value);
        partial void OnLicenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payee
        {
            get
            {
                return _Payee;
            }
            set
            {
                OnPayeeChanging(value);
                ReportPropertyChanging("Payee");
                _Payee = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payee");
                OnPayeeChanged();
            }
        }
        private global::System.String _Payee;
        partial void OnPayeeChanging(global::System.String value);
        partial void OnPayeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reports
        {
            get
            {
                return _Reports;
            }
            set
            {
                OnReportsChanging(value);
                ReportPropertyChanging("Reports");
                _Reports = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reports");
                OnReportsChanged();
            }
        }
        private global::System.String _Reports;
        partial void OnReportsChanging(global::System.String value);
        partial void OnReportsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceFrom
        {
            get
            {
                return _InvoiceFrom;
            }
            set
            {
                OnInvoiceFromChanging(value);
                ReportPropertyChanging("InvoiceFrom");
                _InvoiceFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceFrom");
                OnInvoiceFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceFrom;
        partial void OnInvoiceFromChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceTo
        {
            get
            {
                return _InvoiceTo;
            }
            set
            {
                OnInvoiceToChanging(value);
                ReportPropertyChanging("InvoiceTo");
                _InvoiceTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceTo");
                OnInvoiceToChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceTo;
        partial void OnInvoiceToChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderBy
        {
            get
            {
                return _OrderBy;
            }
            set
            {
                OnOrderByChanging(value);
                ReportPropertyChanging("OrderBy");
                _OrderBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderBy");
                OnOrderByChanged();
            }
        }
        private global::System.String _OrderBy;
        partial void OnOrderByChanging(global::System.String value);
        partial void OnOrderByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReportOn
        {
            get
            {
                return _ReportOn;
            }
            set
            {
                OnReportOnChanging(value);
                ReportPropertyChanging("ReportOn");
                _ReportOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportOn");
                OnReportOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReportOn;
        partial void OnReportOnChanging(Nullable<global::System.DateTime> value);
        partial void OnReportOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilterBy
        {
            get
            {
                return _FilterBy;
            }
            set
            {
                OnFilterByChanging(value);
                ReportPropertyChanging("FilterBy");
                _FilterBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilterBy");
                OnFilterByChanged();
            }
        }
        private Nullable<global::System.Int32> _FilterBy;
        partial void OnFilterByChanging(Nullable<global::System.Int32> value);
        partial void OnFilterByChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AutoDEUEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutoDEUEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutoDEUEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        public static AutoDEUEntry CreateAutoDEUEntry(global::System.Guid id, global::System.Guid batchId)
        {
            AutoDEUEntry autoDEUEntry = new AutoDEUEntry();
            autoDEUEntry.Id = id;
            autoDEUEntry.BatchId = batchId;
            return autoDEUEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private global::System.Guid _BatchId;
        partial void OnBatchIdChanging(global::System.Guid value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalEffectiveDate
        {
            get
            {
                return _OriginalEffectiveDate;
            }
            set
            {
                OnOriginalEffectiveDateChanging(value);
                ReportPropertyChanging("OriginalEffectiveDate");
                _OriginalEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalEffectiveDate");
                OnOriginalEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalEffectiveDate;
        partial void OnOriginalEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentReceived
        {
            get
            {
                return _PaymentReceived;
            }
            set
            {
                OnPaymentReceivedChanging(value);
                ReportPropertyChanging("PaymentReceived");
                _PaymentReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentReceived");
                OnPaymentReceivedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentReceived;
        partial void OnPaymentReceivedChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CommissionPercentage
        {
            get
            {
                return _CommissionPercentage;
            }
            set
            {
                OnCommissionPercentageChanging(value);
                ReportPropertyChanging("CommissionPercentage");
                _CommissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPercentage");
                OnCommissionPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _CommissionPercentage;
        partial void OnCommissionPercentageChanging(Nullable<global::System.Double> value);
        partial void OnCommissionPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPer
        {
            get
            {
                return _SplitPer;
            }
            set
            {
                OnSplitPerChanging(value);
                ReportPropertyChanging("SplitPer");
                _SplitPer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPer");
                OnSplitPerChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPer;
        partial void OnSplitPerChanging(Nullable<global::System.Double> value);
        partial void OnSplitPerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyModeValue
        {
            get
            {
                return _PolicyModeValue;
            }
            set
            {
                OnPolicyModeValueChanging(value);
                ReportPropertyChanging("PolicyModeValue");
                _PolicyModeValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyModeValue");
                OnPolicyModeValueChanged();
            }
        }
        private global::System.String _PolicyModeValue;
        partial void OnPolicyModeValueChanging(global::System.String value);
        partial void OnPolicyModeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompTypeID
        {
            get
            {
                return _CompTypeID;
            }
            set
            {
                OnCompTypeIDChanging(value);
                ReportPropertyChanging("CompTypeID");
                _CompTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompTypeID");
                OnCompTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompTypeID;
        partial void OnCompTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatementID
        {
            get
            {
                return _StatementID;
            }
            set
            {
                OnStatementIDChanging(value);
                ReportPropertyChanging("StatementID");
                _StatementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementID");
                OnStatementIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StatementID;
        partial void OnStatementIDChanging(Nullable<global::System.Guid> value);
        partial void OnStatementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostStatusID
        {
            get
            {
                return _PostStatusID;
            }
            set
            {
                OnPostStatusIDChanging(value);
                ReportPropertyChanging("PostStatusID");
                _PostStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostStatusID");
                OnPostStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PostStatusID;
        partial void OnPostStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnPostStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyID;
        partial void OnPolicyIDChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfUnits
        {
            get
            {
                return _NumberOfUnits;
            }
            set
            {
                OnNumberOfUnitsChanging(value);
                ReportPropertyChanging("NumberOfUnits");
                _NumberOfUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUnits");
                OnNumberOfUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfUnits;
        partial void OnNumberOfUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DollerPerUnit
        {
            get
            {
                return _DollerPerUnit;
            }
            set
            {
                OnDollerPerUnitChanging(value);
                ReportPropertyChanging("DollerPerUnit");
                _DollerPerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DollerPerUnit");
                OnDollerPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _DollerPerUnit;
        partial void OnDollerPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnDollerPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Fee;
        partial void OnFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private Nullable<global::System.Decimal> _Bonus;
        partial void OnBonusChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionTotal
        {
            get
            {
                return _CommissionTotal;
            }
            set
            {
                OnCommissionTotalChanging(value);
                ReportPropertyChanging("CommissionTotal");
                _CommissionTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionTotal");
                OnCommissionTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionTotal;
        partial void OnCommissionTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorSysID
        {
            get
            {
                return _PayorSysID;
            }
            set
            {
                OnPayorSysIDChanging(value);
                ReportPropertyChanging("PayorSysID");
                _PayorSysID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorSysID");
                OnPayorSysIDChanged();
            }
        }
        private global::System.String _PayorSysID;
        partial void OnPayorSysIDChanging(global::System.String value);
        partial void OnPayorSysIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Renewal
        {
            get
            {
                return _Renewal;
            }
            set
            {
                OnRenewalChanging(value);
                ReportPropertyChanging("Renewal");
                _Renewal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Renewal");
                OnRenewalChanged();
            }
        }
        private global::System.String _Renewal;
        partial void OnRenewalChanging(global::System.String value);
        partial void OnRenewalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carrier
        {
            get
            {
                return _Carrier;
            }
            set
            {
                OnCarrierChanging(value);
                ReportPropertyChanging("Carrier");
                _Carrier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Carrier");
                OnCarrierChanged();
            }
        }
        private global::System.String _Carrier;
        partial void OnCarrierChanging(global::System.String value);
        partial void OnCarrierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Coverage
        {
            get
            {
                return _Coverage;
            }
            set
            {
                OnCoverageChanging(value);
                ReportPropertyChanging("Coverage");
                _Coverage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Coverage");
                OnCoverageChanged();
            }
        }
        private global::System.String _Coverage;
        partial void OnCoverageChanging(global::System.String value);
        partial void OnCoverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEntrybyCommissiondashBoard
        {
            get
            {
                return _IsEntrybyCommissiondashBoard;
            }
            set
            {
                OnIsEntrybyCommissiondashBoardChanging(value);
                ReportPropertyChanging("IsEntrybyCommissiondashBoard");
                _IsEntrybyCommissiondashBoard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEntrybyCommissiondashBoard");
                OnIsEntrybyCommissiondashBoardChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEntrybyCommissiondashBoard;
        partial void OnIsEntrybyCommissiondashBoardChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEntrybyCommissiondashBoardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostCompleteStatus
        {
            get
            {
                return _PostCompleteStatus;
            }
            set
            {
                OnPostCompleteStatusChanging(value);
                ReportPropertyChanging("PostCompleteStatus");
                _PostCompleteStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostCompleteStatus");
                OnPostCompleteStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _PostCompleteStatus;
        partial void OnPostCompleteStatusChanging(Nullable<global::System.Int32> value);
        partial void OnPostCompleteStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModalAvgPremium
        {
            get
            {
                return _ModalAvgPremium;
            }
            set
            {
                OnModalAvgPremiumChanging(value);
                ReportPropertyChanging("ModalAvgPremium");
                _ModalAvgPremium = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModalAvgPremium");
                OnModalAvgPremiumChanged();
            }
        }
        private global::System.String _ModalAvgPremium;
        partial void OnModalAvgPremiumChanging(global::System.String value);
        partial void OnModalAvgPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompScheduleType
        {
            get
            {
                return _CompScheduleType;
            }
            set
            {
                OnCompScheduleTypeChanging(value);
                ReportPropertyChanging("CompScheduleType");
                _CompScheduleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompScheduleType");
                OnCompScheduleTypeChanged();
            }
        }
        private global::System.String _CompScheduleType;
        partial void OnCompScheduleTypeChanging(global::System.String value);
        partial void OnCompScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientValue
        {
            get
            {
                return _ClientValue;
            }
            set
            {
                OnClientValueChanging(value);
                ReportPropertyChanging("ClientValue");
                _ClientValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientValue");
                OnClientValueChanged();
            }
        }
        private global::System.String _ClientValue;
        partial void OnClientValueChanging(global::System.String value);
        partial void OnClientValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Batch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Batch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Batch object.
        /// </summary>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="batchNumber">Initial value of the BatchNumber property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        public static Batch CreateBatch(global::System.Guid batchId, global::System.Int32 batchNumber, global::System.Guid licenseeId)
        {
            Batch batch = new Batch();
            batch.BatchId = batchId;
            batch.BatchNumber = batchNumber;
            batch.LicenseeId = licenseeId;
            return batch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                if (_BatchId != value)
                {
                    OnBatchIdChanging(value);
                    ReportPropertyChanging("BatchId");
                    _BatchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchId");
                    OnBatchIdChanged();
                }
            }
        }
        private global::System.Guid _BatchId;
        partial void OnBatchIdChanging(global::System.Guid value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchNumber
        {
            get
            {
                return _BatchNumber;
            }
            set
            {
                OnBatchNumberChanging(value);
                ReportPropertyChanging("BatchNumber");
                _BatchNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchNumber");
                OnBatchNumberChanged();
            }
        }
        private global::System.Int32 _BatchNumber;
        partial void OnBatchNumberChanging(global::System.Int32 value);
        partial void OnBatchNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.String _FileType;
        partial void OnFileTypeChanging(global::System.String value);
        partial void OnFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryStatusId
        {
            get
            {
                return _EntryStatusId;
            }
            set
            {
                OnEntryStatusIdChanging(value);
                ReportPropertyChanging("EntryStatusId");
                _EntryStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryStatusId");
                OnEntryStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryStatusId;
        partial void OnEntryStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnEntryStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AssignedUserCredentialId
        {
            get
            {
                return _AssignedUserCredentialId;
            }
            set
            {
                OnAssignedUserCredentialIdChanging(value);
                ReportPropertyChanging("AssignedUserCredentialId");
                _AssignedUserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedUserCredentialId");
                OnAssignedUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _AssignedUserCredentialId;
        partial void OnAssignedUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnAssignedUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CreatedFromUpload
        {
            get
            {
                return _CreatedFromUpload;
            }
            set
            {
                OnCreatedFromUploadChanging(value);
                ReportPropertyChanging("CreatedFromUpload");
                _CreatedFromUpload = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedFromUpload");
                OnCreatedFromUploadChanged();
            }
        }
        private Nullable<global::System.Boolean> _CreatedFromUpload;
        partial void OnCreatedFromUploadChanging(Nullable<global::System.Boolean> value);
        partial void OnCreatedFromUploadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploadStatusId
        {
            get
            {
                return _UploadStatusId;
            }
            set
            {
                OnUploadStatusIdChanging(value);
                ReportPropertyChanging("UploadStatusId");
                _UploadStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadStatusId");
                OnUploadStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UploadStatusId;
        partial void OnUploadStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnUploadStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsManuallyUploaded
        {
            get
            {
                return _IsManuallyUploaded;
            }
            set
            {
                OnIsManuallyUploadedChanging(value);
                ReportPropertyChanging("IsManuallyUploaded");
                _IsManuallyUploaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManuallyUploaded");
                OnIsManuallyUploadedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsManuallyUploaded;
        partial void OnIsManuallyUploadedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsManuallyUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SiteLoginID
        {
            get
            {
                return _SiteLoginID;
            }
            set
            {
                OnSiteLoginIDChanging(value);
                ReportPropertyChanging("SiteLoginID");
                _SiteLoginID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteLoginID");
                OnSiteLoginIDChanged();
            }
        }
        private Nullable<global::System.Guid> _SiteLoginID;
        partial void OnSiteLoginIDChanging(Nullable<global::System.Guid> value);
        partial void OnSiteLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatchNote
        {
            get
            {
                return _BatchNote;
            }
            set
            {
                OnBatchNoteChanging(value);
                ReportPropertyChanging("BatchNote");
                _BatchNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatchNote");
                OnBatchNoteChanged();
            }
        }
        private global::System.String _BatchNote;
        partial void OnBatchNoteChanging(global::System.String value);
        partial void OnBatchNoteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Batches_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Batches_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Batches_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_Batches_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_MasterBatchEntryStatus", "MasterBatchEntryStatus")]
        public MasterBatchEntryStatu MasterBatchEntryStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBatchEntryStatu>("Model.FK_Batches_MasterBatchEntryStatus", "MasterBatchEntryStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBatchEntryStatu>("Model.FK_Batches_MasterBatchEntryStatus", "MasterBatchEntryStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterBatchEntryStatu> MasterBatchEntryStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBatchEntryStatu>("Model.FK_Batches_MasterBatchEntryStatus", "MasterBatchEntryStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterBatchEntryStatu>("Model.FK_Batches_MasterBatchEntryStatus", "MasterBatchEntryStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_MasterBatchUploadStatus", "MasterBatchUploadStatus")]
        public MasterBatchUploadStatu MasterBatchUploadStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBatchUploadStatu>("Model.FK_Batches_MasterBatchUploadStatus", "MasterBatchUploadStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBatchUploadStatu>("Model.FK_Batches_MasterBatchUploadStatus", "MasterBatchUploadStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterBatchUploadStatu> MasterBatchUploadStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBatchUploadStatu>("Model.FK_Batches_MasterBatchUploadStatus", "MasterBatchUploadStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterBatchUploadStatu>("Model.FK_Batches_MasterBatchUploadStatus", "MasterBatchUploadStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Batches_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Batches_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Batches_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_Batches_Payors", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Statements_Batches", "Statement")]
        public EntityCollection<Statement> Statements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statement>("Model.FK_Statements_Batches", "Statement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statement>("Model.FK_Statements_Batches", "Statement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="BrokerCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrokerCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrokerCode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        public static BrokerCode CreateBrokerCode(global::System.Int32 id, global::System.Guid licenseeId)
        {
            BrokerCode brokerCode = new BrokerCode();
            brokerCode.Id = id;
            brokerCode.LicenseeId = licenseeId;
            return brokerCode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Createddate
        {
            get
            {
                return _Createddate;
            }
            set
            {
                OnCreateddateChanging(value);
                ReportPropertyChanging("Createddate");
                _Createddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Createddate");
                OnCreateddateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Createddate;
        partial void OnCreateddateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateddateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Carrier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carrier object.
        /// </summary>
        /// <param name="carrierId">Initial value of the CarrierId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isGlobal">Initial value of the IsGlobal property.</param>
        public static Carrier CreateCarrier(global::System.Guid carrierId, global::System.Boolean isDeleted, global::System.Boolean isGlobal)
        {
            Carrier carrier = new Carrier();
            carrier.CarrierId = carrierId;
            carrier.IsDeleted = isDeleted;
            carrier.IsGlobal = isGlobal;
            return carrier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                if (_CarrierId != value)
                {
                    OnCarrierIdChanging(value);
                    ReportPropertyChanging("CarrierId");
                    _CarrierId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarrierId");
                    OnCarrierIdChanged();
                }
            }
        }
        private global::System.Guid _CarrierId;
        partial void OnCarrierIdChanging(global::System.Guid value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGlobal
        {
            get
            {
                return _IsGlobal;
            }
            set
            {
                OnIsGlobalChanging(value);
                ReportPropertyChanging("IsGlobal");
                _IsGlobal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGlobal");
                OnIsGlobalChanged();
            }
        }
        private global::System.Boolean _IsGlobal;
        partial void OnIsGlobalChanging(global::System.Boolean value);
        partial void OnIsGlobalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_Carriers", "CarrierNickName")]
        public EntityCollection<CarrierNickName> CarrierNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_Carriers", "CarrierNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_Carriers", "CarrierNickName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Carriers", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Carriers", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Carriers", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalCoveragesSchedules_Carriers", "GlobalCoveragesSchedules")]
        public EntityCollection<GlobalCoveragesSchedule> GlobalCoveragesSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalCoveragesSchedule>("Model.FK_GlobalCoveragesSchedules_Carriers", "GlobalCoveragesSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalCoveragesSchedule>("Model.FK_GlobalCoveragesSchedules_Carriers", "GlobalCoveragesSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarriers_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorCarriers_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorCarriers_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorCarriers_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_PayorCarriers_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarriers_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarriers_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarriers_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarriers_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PayorCarriers_UserCredentials", "UserCredentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Carriers", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_Carriers", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_Carriers", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Carriers", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Carriers", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Carriers", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CarrierCoverage", "Coverages")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("Model.CarrierCoverage", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("Model.CarrierCoverage", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_PayorCarriers", "PolicyLearnedField")]
        public EntityCollection<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_PayorCarriers", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_PayorCarriers", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_PayorCarriers", "PolicyLearnedFieldsHistory")]
        public EntityCollection<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_PayorCarriers", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_PayorCarriers", "PolicyLearnedFieldsHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoverageNickName_Carriers", "CoverageNickName")]
        public EntityCollection<CoverageNickName> CoverageNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CoverageNickName>("Model.FK_CoverageNickName_Carriers", "CoverageNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CoverageNickName>("Model.FK_CoverageNickName_Carriers", "CoverageNickName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CarrierNickName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierNickName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierNickName object.
        /// </summary>
        /// <param name="payorId">Initial value of the PayorId property.</param>
        /// <param name="carrierId">Initial value of the CarrierId property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        /// <param name="isTrackMissingMonth">Initial value of the IsTrackMissingMonth property.</param>
        /// <param name="isTrackIncomingPercentage">Initial value of the IsTrackIncomingPercentage property.</param>
        public static CarrierNickName CreateCarrierNickName(global::System.Guid payorId, global::System.Guid carrierId, global::System.DateTime modifiedOn, global::System.Boolean isTrackMissingMonth, global::System.Boolean isTrackIncomingPercentage)
        {
            CarrierNickName carrierNickName = new CarrierNickName();
            carrierNickName.PayorId = payorId;
            carrierNickName.CarrierId = carrierId;
            carrierNickName.ModifiedOn = modifiedOn;
            carrierNickName.IsTrackMissingMonth = isTrackMissingMonth;
            carrierNickName.IsTrackIncomingPercentage = isTrackIncomingPercentage;
            return carrierNickName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                if (_PayorId != value)
                {
                    OnPayorIdChanging(value);
                    ReportPropertyChanging("PayorId");
                    _PayorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorId");
                    OnPayorIdChanged();
                }
            }
        }
        private global::System.Guid _PayorId;
        partial void OnPayorIdChanging(global::System.Guid value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                if (_CarrierId != value)
                {
                    OnCarrierIdChanging(value);
                    ReportPropertyChanging("CarrierId");
                    _CarrierId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarrierId");
                    OnCarrierIdChanged();
                }
            }
        }
        private global::System.Guid _CarrierId;
        partial void OnCarrierIdChanging(global::System.Guid value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private global::System.Boolean _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(global::System.Boolean value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private global::System.Boolean _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(global::System.Boolean value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_Carriers", "Carriers")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PayorCarrier_Carriers", "Carriers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PayorCarrier_Carriers", "Carriers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PayorCarrier_Carriers", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_PayorCarrier_Carriers", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorCarrier_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorCarrier_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorCarrier_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PayorCarrier_Payors", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials", "UserCredentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_UserCredentials1", "UserCredentials")]
        public UserCredential UserCredential1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials1", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials1", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredential1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials1", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PayorCarrier_UserCredentials1", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static Client CreateClient(global::System.Guid clientId)
        {
            Client client = new Client();
            client.ClientId = clientId;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Clients_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Clients_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Clients_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Clients_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_Clients_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Clients", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Clients", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Clients", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_lastpolicyviewed_Clients", "LastPolicyViewed")]
        public EntityCollection<LastPolicyViewed> LastPolicyVieweds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LastPolicyViewed>("Model.FK_lastpolicyviewed_Clients", "LastPolicyViewed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LastPolicyViewed>("Model.FK_lastpolicyviewed_Clients", "LastPolicyViewed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Clients", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_Clients", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_Clients", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Clients", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Clients", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Clients", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_Clients", "PolicyLearnedField")]
        public EntityCollection<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Clients", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Clients", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_Clients", "PolicyLearnedFieldsHistory")]
        public EntityCollection<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Clients", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Clients", "PolicyLearnedFieldsHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Coverage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coverage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coverage object.
        /// </summary>
        /// <param name="coverageId">Initial value of the CoverageId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isGlobal">Initial value of the IsGlobal property.</param>
        public static Coverage CreateCoverage(global::System.Guid coverageId, global::System.Boolean isDeleted, global::System.Boolean isGlobal)
        {
            Coverage coverage = new Coverage();
            coverage.CoverageId = coverageId;
            coverage.IsDeleted = isDeleted;
            coverage.IsGlobal = isGlobal;
            return coverage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                if (_CoverageId != value)
                {
                    OnCoverageIdChanging(value);
                    ReportPropertyChanging("CoverageId");
                    _CoverageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoverageId");
                    OnCoverageIdChanged();
                }
            }
        }
        private global::System.Guid _CoverageId;
        partial void OnCoverageIdChanging(global::System.Guid value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGlobal
        {
            get
            {
                return _IsGlobal;
            }
            set
            {
                OnIsGlobalChanging(value);
                ReportPropertyChanging("IsGlobal");
                _IsGlobal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGlobal");
                OnIsGlobalChanged();
            }
        }
        private global::System.Boolean _IsGlobal;
        partial void OnIsGlobalChanging(global::System.Boolean value);
        partial void OnIsGlobalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverages_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_CarrierCoverages_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_CarrierCoverages_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_CarrierCoverages_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_CarrierCoverages_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverages_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverages_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverages_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverages_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_CarrierCoverages_UserCredentials", "UserCredentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Coverages", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Coverages", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Coverages", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalCoveragesSchedules_Coverages", "GlobalCoveragesSchedules")]
        public EntityCollection<GlobalCoveragesSchedule> GlobalCoveragesSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalCoveragesSchedule>("Model.FK_GlobalCoveragesSchedules_Coverages", "GlobalCoveragesSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalCoveragesSchedule>("Model.FK_GlobalCoveragesSchedules_Coverages", "GlobalCoveragesSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Coverages", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_Coverages", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_Coverages", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Coverages", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Coverages", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Coverages", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CarrierCoverage", "Carriers")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("Model.CarrierCoverage", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("Model.CarrierCoverage", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_CarrierCoverages", "PolicyLearnedField")]
        public EntityCollection<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_CarrierCoverages", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_CarrierCoverages", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_CarrierCoverages", "PolicyLearnedFieldsHistory")]
        public EntityCollection<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_CarrierCoverages", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_CarrierCoverages", "PolicyLearnedFieldsHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoverageNickName_Coverages", "CoverageNickName")]
        public EntityCollection<CoverageNickName> CoverageNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CoverageNickName>("Model.FK_CoverageNickName_Coverages", "CoverageNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CoverageNickName>("Model.FK_CoverageNickName_Coverages", "CoverageNickName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CoverageNickName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoverageNickName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CoverageNickName object.
        /// </summary>
        /// <param name="coverageNickID">Initial value of the CoverageNickID property.</param>
        /// <param name="payorId">Initial value of the PayorId property.</param>
        /// <param name="carrierId">Initial value of the CarrierId property.</param>
        /// <param name="coverageId">Initial value of the CoverageId property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static CoverageNickName CreateCoverageNickName(global::System.Int32 coverageNickID, global::System.Guid payorId, global::System.Guid carrierId, global::System.Guid coverageId, global::System.Guid createdBy, global::System.Guid modifiedBy, global::System.DateTime modifiedOn)
        {
            CoverageNickName coverageNickName = new CoverageNickName();
            coverageNickName.CoverageNickID = coverageNickID;
            coverageNickName.PayorId = payorId;
            coverageNickName.CarrierId = carrierId;
            coverageNickName.CoverageId = coverageId;
            coverageNickName.CreatedBy = createdBy;
            coverageNickName.ModifiedBy = modifiedBy;
            coverageNickName.ModifiedOn = modifiedOn;
            return coverageNickName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoverageNickID
        {
            get
            {
                return _CoverageNickID;
            }
            set
            {
                if (_CoverageNickID != value)
                {
                    OnCoverageNickIDChanging(value);
                    ReportPropertyChanging("CoverageNickID");
                    _CoverageNickID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoverageNickID");
                    OnCoverageNickIDChanged();
                }
            }
        }
        private global::System.Int32 _CoverageNickID;
        partial void OnCoverageNickIDChanging(global::System.Int32 value);
        partial void OnCoverageNickIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private global::System.Guid _PayorId;
        partial void OnPayorIdChanging(global::System.Guid value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private global::System.Guid _CarrierId;
        partial void OnCarrierIdChanging(global::System.Guid value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private global::System.Guid _CoverageId;
        partial void OnCoverageIdChanging(global::System.Guid value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Guid _CreatedBy;
        partial void OnCreatedByChanging(global::System.Guid value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Guid _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Guid value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoverageNickName_Carriers", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_CoverageNickName_Carriers", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_CoverageNickName_Carriers", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_CoverageNickName_Carriers", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_CoverageNickName_Carriers", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverage_UserCredentials", "UserCredential")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials", "UserCredential").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials", "UserCredential").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials", "UserCredential");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials", "UserCredential", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverage_UserCredentials1", "UserCredential")]
        public UserCredential UserCredential1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials1", "UserCredential").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials1", "UserCredential").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredential1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials1", "UserCredential");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_CarrierCoverage_UserCredentials1", "UserCredential", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoverageNickName_Coverages", "Coverage")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_CoverageNickName_Coverages", "Coverage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_CoverageNickName_Coverages", "Coverage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_CoverageNickName_Coverages", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_CoverageNickName_Coverages", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoverageNickName_Payors", "Payor")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_CoverageNickName_Payors", "Payor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_CoverageNickName_Payors", "Payor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_CoverageNickName_Payors", "Payor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_CoverageNickName_Payors", "Payor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="EntriesByDEU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntriesByDEU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntriesByDEU object.
        /// </summary>
        /// <param name="dEUEntryID">Initial value of the DEUEntryID property.</param>
        public static EntriesByDEU CreateEntriesByDEU(global::System.Guid dEUEntryID)
        {
            EntriesByDEU entriesByDEU = new EntriesByDEU();
            entriesByDEU.DEUEntryID = dEUEntryID;
            return entriesByDEU;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DEUEntryID
        {
            get
            {
                return _DEUEntryID;
            }
            set
            {
                if (_DEUEntryID != value)
                {
                    OnDEUEntryIDChanging(value);
                    ReportPropertyChanging("DEUEntryID");
                    _DEUEntryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DEUEntryID");
                    OnDEUEntryIDChanged();
                }
            }
        }
        private global::System.Guid _DEUEntryID;
        partial void OnDEUEntryIDChanging(global::System.Guid value);
        partial void OnDEUEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalEffectiveDate
        {
            get
            {
                return _OriginalEffectiveDate;
            }
            set
            {
                OnOriginalEffectiveDateChanging(value);
                ReportPropertyChanging("OriginalEffectiveDate");
                _OriginalEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalEffectiveDate");
                OnOriginalEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalEffectiveDate;
        partial void OnOriginalEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentReceived
        {
            get
            {
                return _PaymentReceived;
            }
            set
            {
                OnPaymentReceivedChanging(value);
                ReportPropertyChanging("PaymentReceived");
                _PaymentReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentReceived");
                OnPaymentReceivedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentReceived;
        partial void OnPaymentReceivedChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CommissionPercentage
        {
            get
            {
                return _CommissionPercentage;
            }
            set
            {
                OnCommissionPercentageChanging(value);
                ReportPropertyChanging("CommissionPercentage");
                _CommissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPercentage");
                OnCommissionPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _CommissionPercentage;
        partial void OnCommissionPercentageChanging(Nullable<global::System.Double> value);
        partial void OnCommissionPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherData
        {
            get
            {
                return _OtherData;
            }
            set
            {
                OnOtherDataChanging(value);
                ReportPropertyChanging("OtherData");
                _OtherData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherData");
                OnOtherDataChanged();
            }
        }
        private global::System.String _OtherData;
        partial void OnOtherDataChanging(global::System.String value);
        partial void OnOtherDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link1
        {
            get
            {
                return _Link1;
            }
            set
            {
                OnLink1Changing(value);
                ReportPropertyChanging("Link1");
                _Link1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link1");
                OnLink1Changed();
            }
        }
        private global::System.String _Link1;
        partial void OnLink1Changing(global::System.String value);
        partial void OnLink1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPer
        {
            get
            {
                return _SplitPer;
            }
            set
            {
                OnSplitPerChanging(value);
                ReportPropertyChanging("SplitPer");
                _SplitPer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPer");
                OnSplitPerChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPer;
        partial void OnSplitPerChanging(Nullable<global::System.Double> value);
        partial void OnSplitPerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeID
        {
            get
            {
                return _PolicyModeID;
            }
            set
            {
                OnPolicyModeIDChanging(value);
                ReportPropertyChanging("PolicyModeID");
                _PolicyModeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeID");
                OnPolicyModeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeID;
        partial void OnPolicyModeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyModeValue
        {
            get
            {
                return _PolicyModeValue;
            }
            set
            {
                OnPolicyModeValueChanging(value);
                ReportPropertyChanging("PolicyModeValue");
                _PolicyModeValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyModeValue");
                OnPolicyModeValueChanged();
            }
        }
        private global::System.String _PolicyModeValue;
        partial void OnPolicyModeValueChanging(global::System.String value);
        partial void OnPolicyModeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFromDate
        {
            get
            {
                return _TrackFromDate;
            }
            set
            {
                OnTrackFromDateChanging(value);
                ReportPropertyChanging("TrackFromDate");
                _TrackFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFromDate");
                OnTrackFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFromDate;
        partial void OnTrackFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompTypeID
        {
            get
            {
                return _CompTypeID;
            }
            set
            {
                OnCompTypeIDChanging(value);
                ReportPropertyChanging("CompTypeID");
                _CompTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompTypeID");
                OnCompTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompTypeID;
        partial void OnCompTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Guid> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatementID
        {
            get
            {
                return _StatementID;
            }
            set
            {
                OnStatementIDChanging(value);
                ReportPropertyChanging("StatementID");
                _StatementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementID");
                OnStatementIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StatementID;
        partial void OnStatementIDChanging(Nullable<global::System.Guid> value);
        partial void OnStatementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostStatusID
        {
            get
            {
                return _PostStatusID;
            }
            set
            {
                OnPostStatusIDChanging(value);
                ReportPropertyChanging("PostStatusID");
                _PostStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostStatusID");
                OnPostStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PostStatusID;
        partial void OnPostStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnPostStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyID;
        partial void OnPolicyIDChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfUnits
        {
            get
            {
                return _NumberOfUnits;
            }
            set
            {
                OnNumberOfUnitsChanging(value);
                ReportPropertyChanging("NumberOfUnits");
                _NumberOfUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUnits");
                OnNumberOfUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfUnits;
        partial void OnNumberOfUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DollerPerUnit
        {
            get
            {
                return _DollerPerUnit;
            }
            set
            {
                OnDollerPerUnitChanging(value);
                ReportPropertyChanging("DollerPerUnit");
                _DollerPerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DollerPerUnit");
                OnDollerPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _DollerPerUnit;
        partial void OnDollerPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnDollerPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Fee;
        partial void OnFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private Nullable<global::System.Decimal> _Bonus;
        partial void OnBonusChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionTotal
        {
            get
            {
                return _CommissionTotal;
            }
            set
            {
                OnCommissionTotalChanging(value);
                ReportPropertyChanging("CommissionTotal");
                _CommissionTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionTotal");
                OnCommissionTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionTotal;
        partial void OnCommissionTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorSysID
        {
            get
            {
                return _PayorSysID;
            }
            set
            {
                OnPayorSysIDChanging(value);
                ReportPropertyChanging("PayorSysID");
                _PayorSysID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorSysID");
                OnPayorSysIDChanged();
            }
        }
        private global::System.String _PayorSysID;
        partial void OnPayorSysIDChanging(global::System.String value);
        partial void OnPayorSysIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Renewal
        {
            get
            {
                return _Renewal;
            }
            set
            {
                OnRenewalChanging(value);
                ReportPropertyChanging("Renewal");
                _Renewal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Renewal");
                OnRenewalChanged();
            }
        }
        private global::System.String _Renewal;
        partial void OnRenewalChanging(global::System.String value);
        partial void OnRenewalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierId;
        partial void OnCarrierIdChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEntrybyCommissiondashBoard
        {
            get
            {
                return _IsEntrybyCommissiondashBoard;
            }
            set
            {
                OnIsEntrybyCommissiondashBoardChanging(value);
                ReportPropertyChanging("IsEntrybyCommissiondashBoard");
                _IsEntrybyCommissiondashBoard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEntrybyCommissiondashBoard");
                OnIsEntrybyCommissiondashBoardChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEntrybyCommissiondashBoard;
        partial void OnIsEntrybyCommissiondashBoardChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEntrybyCommissiondashBoardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostCompleteStatus
        {
            get
            {
                return _PostCompleteStatus;
            }
            set
            {
                OnPostCompleteStatusChanging(value);
                ReportPropertyChanging("PostCompleteStatus");
                _PostCompleteStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostCompleteStatus");
                OnPostCompleteStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _PostCompleteStatus;
        partial void OnPostCompleteStatusChanging(Nullable<global::System.Int32> value);
        partial void OnPostCompleteStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModalAvgPremium
        {
            get
            {
                return _ModalAvgPremium;
            }
            set
            {
                OnModalAvgPremiumChanging(value);
                ReportPropertyChanging("ModalAvgPremium");
                _ModalAvgPremium = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModalAvgPremium");
                OnModalAvgPremiumChanged();
            }
        }
        private global::System.String _ModalAvgPremium;
        partial void OnModalAvgPremiumChanging(global::System.String value);
        partial void OnModalAvgPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompScheduleType
        {
            get
            {
                return _CompScheduleType;
            }
            set
            {
                OnCompScheduleTypeChanging(value);
                ReportPropertyChanging("CompScheduleType");
                _CompScheduleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompScheduleType");
                OnCompScheduleTypeChanged();
            }
        }
        private global::System.String _CompScheduleType;
        partial void OnCompScheduleTypeChanging(global::System.String value);
        partial void OnCompScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientValue
        {
            get
            {
                return _ClientValue;
            }
            set
            {
                OnClientValueChanging(value);
                ReportPropertyChanging("ClientValue");
                _ClientValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientValue");
                OnClientValueChanged();
            }
        }
        private global::System.String _ClientValue;
        partial void OnClientValueChanging(global::System.String value);
        partial void OnClientValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnlinkClientName
        {
            get
            {
                return _UnlinkClientName;
            }
            set
            {
                OnUnlinkClientNameChanging(value);
                ReportPropertyChanging("UnlinkClientName");
                _UnlinkClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnlinkClientName");
                OnUnlinkClientNameChanged();
            }
        }
        private global::System.String _UnlinkClientName;
        partial void OnUnlinkClientNameChanging(global::System.String value);
        partial void OnUnlinkClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverageNickName
        {
            get
            {
                return _CoverageNickName;
            }
            set
            {
                OnCoverageNickNameChanging(value);
                ReportPropertyChanging("CoverageNickName");
                _CoverageNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverageNickName");
                OnCoverageNickNameChanged();
            }
        }
        private global::System.String _CoverageNickName;
        partial void OnCoverageNickNameChanging(global::System.String value);
        partial void OnCoverageNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierNickName
        {
            get
            {
                return _CarrierNickName;
            }
            set
            {
                OnCarrierNickNameChanging(value);
                ReportPropertyChanging("CarrierNickName");
                _CarrierNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierNickName");
                OnCarrierNickNameChanged();
            }
        }
        private global::System.String _CarrierNickName;
        partial void OnCarrierNickNameChanging(global::System.String value);
        partial void OnCarrierNickNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Carriers", "Carriers")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_EntriesByDEU_Carriers", "Carriers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_EntriesByDEU_Carriers", "Carriers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_EntriesByDEU_Carriers", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_EntriesByDEU_Carriers", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Clients", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_EntriesByDEU_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_EntriesByDEU_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_EntriesByDEU_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.FK_EntriesByDEU_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Coverages", "Coverages")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_EntriesByDEU_Coverages", "Coverages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_EntriesByDEU_Coverages", "Coverages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_EntriesByDEU_Coverages", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_EntriesByDEU_Coverages", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes")]
        public MasterIncomingPaymentType MasterIncomingPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_EntriesByDEU_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_EntriesByDEU_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIncomingPaymentType> MasterIncomingPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_EntriesByDEU_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIncomingPaymentType>("Model.FK_EntriesByDEU_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_MasterPolicyModes", "MasterPolicyModes")]
        public MasterPolicyMode MasterPolicyMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_EntriesByDEU_MasterPolicyModes", "MasterPolicyModes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_EntriesByDEU_MasterPolicyModes", "MasterPolicyModes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyMode> MasterPolicyModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_EntriesByDEU_MasterPolicyModes", "MasterPolicyModes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyMode>("Model.FK_EntriesByDEU_MasterPolicyModes", "MasterPolicyModes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_MasterPostStatus", "MasterPostStatus")]
        public MasterPostStatu MasterPostStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPostStatu>("Model.FK_EntriesByDEU_MasterPostStatus", "MasterPostStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPostStatu>("Model.FK_EntriesByDEU_MasterPostStatus", "MasterPostStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPostStatu> MasterPostStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPostStatu>("Model.FK_EntriesByDEU_MasterPostStatus", "MasterPostStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPostStatu>("Model.FK_EntriesByDEU_MasterPostStatus", "MasterPostStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_EntriesByDEU_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_EntriesByDEU_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_EntriesByDEU_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_EntriesByDEU_Payors", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_EntriesByDEU_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_EntriesByDEU_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_EntriesByDEU_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_EntriesByDEU_Policies", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_EntriesByDEU", "PolicyPaymentEntries")]
        public EntityCollection<PolicyPaymentEntry> PolicyPaymentEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_EntriesByDEU", "PolicyPaymentEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_EntriesByDEU", "PolicyPaymentEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Statements", "Statement")]
        public Statement Statement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statement>("Model.FK_EntriesByDEU_Statements", "Statement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statement>("Model.FK_EntriesByDEU_Statements", "Statement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statement> StatementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statement>("Model.FK_EntriesByDEU_Statements", "Statement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statement>("Model.FK_EntriesByDEU_Statements", "Statement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ExportBatchFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExportBatchFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportBatchFile object.
        /// </summary>
        /// <param name="exportBatchId">Initial value of the ExportBatchId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static ExportBatchFile CreateExportBatchFile(global::System.Guid exportBatchId, global::System.String fileName, global::System.DateTime createdOn)
        {
            ExportBatchFile exportBatchFile = new ExportBatchFile();
            exportBatchFile.ExportBatchId = exportBatchId;
            exportBatchFile.FileName = fileName;
            exportBatchFile.CreatedOn = createdOn;
            return exportBatchFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExportBatchId
        {
            get
            {
                return _ExportBatchId;
            }
            set
            {
                if (_ExportBatchId != value)
                {
                    OnExportBatchIdChanging(value);
                    ReportPropertyChanging("ExportBatchId");
                    _ExportBatchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExportBatchId");
                    OnExportBatchIdChanged();
                }
            }
        }
        private global::System.Guid _ExportBatchId;
        partial void OnExportBatchIdChanging(global::System.Guid value);
        partial void OnExportBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFileImported
        {
            get
            {
                return _IsFileImported;
            }
            set
            {
                OnIsFileImportedChanging(value);
                ReportPropertyChanging("IsFileImported");
                _IsFileImported = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFileImported");
                OnIsFileImportedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFileImported;
        partial void OnIsFileImportedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFileImportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Invoices_ExportBatchFiles", "Invoices")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("Model.FK_Invoices_ExportBatchFiles", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("Model.FK_Invoices_ExportBatchFiles", "Invoices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="FieldMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldMapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static FieldMapping CreateFieldMapping(global::System.Int32 id, global::System.Boolean isDeleted)
        {
            FieldMapping fieldMapping = new FieldMapping();
            fieldMapping.ID = id;
            fieldMapping.IsDeleted = isDeleted;
            return fieldMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExcelFieldNo
        {
            get
            {
                return _ExcelFieldNo;
            }
            set
            {
                OnExcelFieldNoChanging(value);
                ReportPropertyChanging("ExcelFieldNo");
                _ExcelFieldNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExcelFieldNo");
                OnExcelFieldNoChanged();
            }
        }
        private Nullable<global::System.Int32> _ExcelFieldNo;
        partial void OnExcelFieldNoChanging(Nullable<global::System.Int32> value);
        partial void OnExcelFieldNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DBFieldName
        {
            get
            {
                return _DBFieldName;
            }
            set
            {
                OnDBFieldNameChanging(value);
                ReportPropertyChanging("DBFieldName");
                _DBFieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DBFieldName");
                OnDBFieldNameChanged();
            }
        }
        private global::System.String _DBFieldName;
        partial void OnDBFieldNameChanging(global::System.String value);
        partial void OnDBFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcelFieldName
        {
            get
            {
                return _ExcelFieldName;
            }
            set
            {
                OnExcelFieldNameChanging(value);
                ReportPropertyChanging("ExcelFieldName");
                _ExcelFieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcelFieldName");
                OnExcelFieldNameChanged();
            }
        }
        private global::System.String _ExcelFieldName;
        partial void OnExcelFieldNameChanging(global::System.String value);
        partial void OnExcelFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcelFieldFormat
        {
            get
            {
                return _ExcelFieldFormat;
            }
            set
            {
                OnExcelFieldFormatChanging(value);
                ReportPropertyChanging("ExcelFieldFormat");
                _ExcelFieldFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcelFieldFormat");
                OnExcelFieldFormatChanged();
            }
        }
        private global::System.String _ExcelFieldFormat;
        partial void OnExcelFieldFormatChanging(global::System.String value);
        partial void OnExcelFieldFormatChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FieldMapping_Templates", "Templates")]
        public Template Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("Model.FK_FieldMapping_Templates", "Templates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("Model.FK_FieldMapping_Templates", "Templates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Template> TemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("Model.FK_FieldMapping_Templates", "Templates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Template>("Model.FK_FieldMapping_Templates", "Templates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="FollowupIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FollowupIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FollowupIssue object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        public static FollowupIssue CreateFollowupIssue(global::System.Guid issueId, global::System.Int32 issueTrackNumber)
        {
            FollowupIssue followupIssue = new FollowupIssue();
            followupIssue.IssueId = issueId;
            followupIssue.IssueTrackNumber = issueTrackNumber;
            return followupIssue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                if (_IssueId != value)
                {
                    OnIssueIdChanging(value);
                    ReportPropertyChanging("IssueId");
                    _IssueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueId");
                    OnIssueIdChanged();
                }
            }
        }
        private global::System.Guid _IssueId;
        partial void OnIssueIdChanging(global::System.Guid value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPMCVariance
        {
            get
            {
                return _IsPMCVariance;
            }
            set
            {
                OnIsPMCVarianceChanging(value);
                ReportPropertyChanging("IsPMCVariance");
                _IsPMCVariance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPMCVariance");
                OnIsPMCVarianceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPMCVariance;
        partial void OnIsPMCVarianceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPMCVarianceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueCategories", "MasterIssueCategory")]
        public MasterIssueCategory MasterIssueCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueCategory>("Model.FK_FollowupIssues_MasterIssueCategories", "MasterIssueCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueCategory>("Model.FK_FollowupIssues_MasterIssueCategories", "MasterIssueCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIssueCategory> MasterIssueCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueCategory>("Model.FK_FollowupIssues_MasterIssueCategories", "MasterIssueCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIssueCategory>("Model.FK_FollowupIssues_MasterIssueCategories", "MasterIssueCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueReasons", "MasterIssueReason")]
        public MasterIssueReason MasterIssueReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueReason>("Model.FK_FollowupIssues_MasterIssueReasons", "MasterIssueReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueReason>("Model.FK_FollowupIssues_MasterIssueReasons", "MasterIssueReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIssueReason> MasterIssueReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueReason>("Model.FK_FollowupIssues_MasterIssueReasons", "MasterIssueReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIssueReason>("Model.FK_FollowupIssues_MasterIssueReasons", "MasterIssueReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueResults", "MasterIssueResult")]
        public MasterIssueResult MasterIssueResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueResult>("Model.FK_FollowupIssues_MasterIssueResults", "MasterIssueResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueResult>("Model.FK_FollowupIssues_MasterIssueResults", "MasterIssueResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIssueResult> MasterIssueResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueResult>("Model.FK_FollowupIssues_MasterIssueResults", "MasterIssueResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIssueResult>("Model.FK_FollowupIssues_MasterIssueResults", "MasterIssueResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueStatus", "MasterIssueStatu")]
        public MasterIssueStatu MasterIssueStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus", "MasterIssueStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus", "MasterIssueStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIssueStatu> MasterIssueStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus", "MasterIssueStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus", "MasterIssueStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueStatus1", "MasterIssueStatu")]
        public MasterIssueStatu MasterIssueStatu1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus1", "MasterIssueStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus1", "MasterIssueStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIssueStatu> MasterIssueStatu1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus1", "MasterIssueStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIssueStatu>("Model.FK_FollowupIssues_MasterIssueStatus1", "MasterIssueStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_Policies", "Policy")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_FollowupIssues_Policies", "Policy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_FollowupIssues_Policies", "Policy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_FollowupIssues_Policies", "Policy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_FollowupIssues_Policies", "Policy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_FollowupIssues", "PolicyPaymentEntry")]
        public EntityCollection<PolicyPaymentEntry> PolicyPaymentEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_FollowupIssues", "PolicyPaymentEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_FollowupIssues", "PolicyPaymentEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Formula")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Formula : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Formula object.
        /// </summary>
        /// <param name="formulaId">Initial value of the FormulaId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Formula CreateFormula(global::System.Guid formulaId, global::System.Boolean isDeleted)
        {
            Formula formula = new Formula();
            formula.FormulaId = formulaId;
            formula.IsDeleted = isDeleted;
            return formula;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FormulaId
        {
            get
            {
                return _FormulaId;
            }
            set
            {
                if (_FormulaId != value)
                {
                    OnFormulaIdChanging(value);
                    ReportPropertyChanging("FormulaId");
                    _FormulaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FormulaId");
                    OnFormulaIdChanged();
                }
            }
        }
        private global::System.Guid _FormulaId;
        partial void OnFormulaIdChanging(global::System.Guid value);
        partial void OnFormulaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormulaTtitle
        {
            get
            {
                return _FormulaTtitle;
            }
            set
            {
                OnFormulaTtitleChanging(value);
                ReportPropertyChanging("FormulaTtitle");
                _FormulaTtitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormulaTtitle");
                OnFormulaTtitleChanged();
            }
        }
        private global::System.String _FormulaTtitle;
        partial void OnFormulaTtitleChanging(global::System.String value);
        partial void OnFormulaTtitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormulaExpression
        {
            get
            {
                return _FormulaExpression;
            }
            set
            {
                OnFormulaExpressionChanging(value);
                ReportPropertyChanging("FormulaExpression");
                _FormulaExpression = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormulaExpression");
                OnFormulaExpressionChanged();
            }
        }
        private global::System.String _FormulaExpression;
        partial void OnFormulaExpressionChanging(global::System.String value);
        partial void OnFormulaExpressionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_Formulas", "PayorToolFields")]
        public EntityCollection<PayorToolField> PayorToolFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_Formulas", "PayorToolFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_Formulas", "PayorToolFields", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GlobalCoveragesSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalCoveragesSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalCoveragesSchedule object.
        /// </summary>
        /// <param name="coveragesScheduleId">Initial value of the CoveragesScheduleId property.</param>
        /// <param name="carrierId">Initial value of the CarrierId property.</param>
        /// <param name="coverageId">Initial value of the CoverageId property.</param>
        /// <param name="scheduleTypeId">Initial value of the ScheduleTypeId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static GlobalCoveragesSchedule CreateGlobalCoveragesSchedule(global::System.Guid coveragesScheduleId, global::System.Guid carrierId, global::System.Guid coverageId, global::System.Int32 scheduleTypeId, global::System.Boolean isDeleted)
        {
            GlobalCoveragesSchedule globalCoveragesSchedule = new GlobalCoveragesSchedule();
            globalCoveragesSchedule.CoveragesScheduleId = coveragesScheduleId;
            globalCoveragesSchedule.CarrierId = carrierId;
            globalCoveragesSchedule.CoverageId = coverageId;
            globalCoveragesSchedule.ScheduleTypeId = scheduleTypeId;
            globalCoveragesSchedule.IsDeleted = isDeleted;
            return globalCoveragesSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CoveragesScheduleId
        {
            get
            {
                return _CoveragesScheduleId;
            }
            set
            {
                if (_CoveragesScheduleId != value)
                {
                    OnCoveragesScheduleIdChanging(value);
                    ReportPropertyChanging("CoveragesScheduleId");
                    _CoveragesScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoveragesScheduleId");
                    OnCoveragesScheduleIdChanged();
                }
            }
        }
        private global::System.Guid _CoveragesScheduleId;
        partial void OnCoveragesScheduleIdChanging(global::System.Guid value);
        partial void OnCoveragesScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private global::System.Guid _CarrierId;
        partial void OnCarrierIdChanging(global::System.Guid value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private global::System.Guid _CoverageId;
        partial void OnCoverageIdChanging(global::System.Guid value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleTypeId
        {
            get
            {
                return _ScheduleTypeId;
            }
            set
            {
                OnScheduleTypeIdChanging(value);
                ReportPropertyChanging("ScheduleTypeId");
                _ScheduleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTypeId");
                OnScheduleTypeIdChanged();
            }
        }
        private global::System.Int32 _ScheduleTypeId;
        partial void OnScheduleTypeIdChanging(global::System.Int32 value);
        partial void OnScheduleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FromRange
        {
            get
            {
                return _FromRange;
            }
            set
            {
                OnFromRangeChanging(value);
                ReportPropertyChanging("FromRange");
                _FromRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromRange");
                OnFromRangeChanged();
            }
        }
        private Nullable<global::System.Double> _FromRange;
        partial void OnFromRangeChanging(Nullable<global::System.Double> value);
        partial void OnFromRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ToRange
        {
            get
            {
                return _ToRange;
            }
            set
            {
                OnToRangeChanging(value);
                ReportPropertyChanging("ToRange");
                _ToRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToRange");
                OnToRangeChanged();
            }
        }
        private Nullable<global::System.Double> _ToRange;
        partial void OnToRangeChanging(Nullable<global::System.Double> value);
        partial void OnToRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveFromDate
        {
            get
            {
                return _EffectiveFromDate;
            }
            set
            {
                OnEffectiveFromDateChanging(value);
                ReportPropertyChanging("EffectiveFromDate");
                _EffectiveFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveFromDate");
                OnEffectiveFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveFromDate;
        partial void OnEffectiveFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveToDate
        {
            get
            {
                return _EffectiveToDate;
            }
            set
            {
                OnEffectiveToDateChanging(value);
                ReportPropertyChanging("EffectiveToDate");
                _EffectiveToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveToDate");
                OnEffectiveToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveToDate;
        partial void OnEffectiveToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalCoveragesSchedules_Carriers", "Carriers")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_GlobalCoveragesSchedules_Carriers", "Carriers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_GlobalCoveragesSchedules_Carriers", "Carriers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_GlobalCoveragesSchedules_Carriers", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_GlobalCoveragesSchedules_Carriers", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalCoveragesSchedules_Coverages", "Coverages")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_GlobalCoveragesSchedules_Coverages", "Coverages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_GlobalCoveragesSchedules_Coverages", "Coverages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_GlobalCoveragesSchedules_Coverages", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_GlobalCoveragesSchedules_Coverages", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalCoveragesSchedules_MasterScheduleTypes", "MasterScheduleTypes")]
        public MasterScheduleType MasterScheduleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_GlobalCoveragesSchedules_MasterScheduleTypes", "MasterScheduleTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_GlobalCoveragesSchedules_MasterScheduleTypes", "MasterScheduleTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterScheduleType> MasterScheduleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_GlobalCoveragesSchedules_MasterScheduleTypes", "MasterScheduleTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterScheduleType>("Model.FK_GlobalCoveragesSchedules_MasterScheduleTypes", "MasterScheduleTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GlobalPayorContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalPayorContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalPayorContact object.
        /// </summary>
        /// <param name="payorContactId">Initial value of the PayorContactId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static GlobalPayorContact CreateGlobalPayorContact(global::System.Guid payorContactId, global::System.Boolean isDeleted)
        {
            GlobalPayorContact globalPayorContact = new GlobalPayorContact();
            globalPayorContact.PayorContactId = payorContactId;
            globalPayorContact.IsDeleted = isDeleted;
            return globalPayorContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorContactId
        {
            get
            {
                return _PayorContactId;
            }
            set
            {
                if (_PayorContactId != value)
                {
                    OnPayorContactIdChanging(value);
                    ReportPropertyChanging("PayorContactId");
                    _PayorContactId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorContactId");
                    OnPayorContactIdChanged();
                }
            }
        }
        private global::System.Guid _PayorContactId;
        partial void OnPayorContactIdChanging(global::System.Guid value);
        partial void OnPayorContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GlobalPayorId
        {
            get
            {
                return _GlobalPayorId;
            }
            set
            {
                OnGlobalPayorIdChanging(value);
                ReportPropertyChanging("GlobalPayorId");
                _GlobalPayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GlobalPayorId");
                OnGlobalPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _GlobalPayorId;
        partial void OnGlobalPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnGlobalPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ZipCode;
        partial void OnZipCodeChanging(Nullable<global::System.Int64> value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficePhone
        {
            get
            {
                return _OfficePhone;
            }
            set
            {
                OnOfficePhoneChanging(value);
                ReportPropertyChanging("OfficePhone");
                _OfficePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficePhone");
                OnOfficePhoneChanged();
            }
        }
        private global::System.String _OfficePhone;
        partial void OnOfficePhoneChanging(global::System.String value);
        partial void OnOfficePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPref
        {
            get
            {
                return _ContactPref;
            }
            set
            {
                OnContactPrefChanging(value);
                ReportPropertyChanging("ContactPref");
                _ContactPref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPref");
                OnContactPrefChanged();
            }
        }
        private global::System.String _ContactPref;
        partial void OnContactPrefChanging(global::System.String value);
        partial void OnContactPrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorContacts_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorContacts_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorContacts_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorContacts_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_GlobalPayorContacts_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GlobalPayorDefault")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalPayorDefault : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalPayorDefault object.
        /// </summary>
        /// <param name="payorDefaultSettingsId">Initial value of the PayorDefaultSettingsId property.</param>
        /// <param name="isTotalExists">Initial value of the IsTotalExists property.</param>
        public static GlobalPayorDefault CreateGlobalPayorDefault(global::System.Guid payorDefaultSettingsId, global::System.Boolean isTotalExists)
        {
            GlobalPayorDefault globalPayorDefault = new GlobalPayorDefault();
            globalPayorDefault.PayorDefaultSettingsId = payorDefaultSettingsId;
            globalPayorDefault.IsTotalExists = isTotalExists;
            return globalPayorDefault;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorDefaultSettingsId
        {
            get
            {
                return _PayorDefaultSettingsId;
            }
            set
            {
                if (_PayorDefaultSettingsId != value)
                {
                    OnPayorDefaultSettingsIdChanging(value);
                    ReportPropertyChanging("PayorDefaultSettingsId");
                    _PayorDefaultSettingsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorDefaultSettingsId");
                    OnPayorDefaultSettingsIdChanged();
                }
            }
        }
        private global::System.Guid _PayorDefaultSettingsId;
        partial void OnPayorDefaultSettingsIdChanging(global::System.Guid value);
        partial void OnPayorDefaultSettingsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GlobalPayorId
        {
            get
            {
                return _GlobalPayorId;
            }
            set
            {
                OnGlobalPayorIdChanging(value);
                ReportPropertyChanging("GlobalPayorId");
                _GlobalPayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GlobalPayorId");
                OnGlobalPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _GlobalPayorId;
        partial void OnGlobalPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnGlobalPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FirstPaymentOnRow
        {
            get
            {
                return _FirstPaymentOnRow;
            }
            set
            {
                OnFirstPaymentOnRowChanging(value);
                ReportPropertyChanging("FirstPaymentOnRow");
                _FirstPaymentOnRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstPaymentOnRow");
                OnFirstPaymentOnRowChanged();
            }
        }
        private Nullable<global::System.Decimal> _FirstPaymentOnRow;
        partial void OnFirstPaymentOnRowChanging(Nullable<global::System.Decimal> value);
        partial void OnFirstPaymentOnRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FieldNamesRow
        {
            get
            {
                return _FieldNamesRow;
            }
            set
            {
                OnFieldNamesRowChanging(value);
                ReportPropertyChanging("FieldNamesRow");
                _FieldNamesRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldNamesRow");
                OnFieldNamesRowChanged();
            }
        }
        private Nullable<global::System.Decimal> _FieldNamesRow;
        partial void OnFieldNamesRowChanging(Nullable<global::System.Decimal> value);
        partial void OnFieldNamesRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTotalExists
        {
            get
            {
                return _IsTotalExists;
            }
            set
            {
                OnIsTotalExistsChanging(value);
                ReportPropertyChanging("IsTotalExists");
                _IsTotalExists = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTotalExists");
                OnIsTotalExistsChanged();
            }
        }
        private global::System.Boolean _IsTotalExists;
        partial void OnIsTotalExistsChanging(global::System.Boolean value);
        partial void OnIsTotalExistsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LocationColumn
        {
            get
            {
                return _LocationColumn;
            }
            set
            {
                OnLocationColumnChanging(value);
                ReportPropertyChanging("LocationColumn");
                _LocationColumn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationColumn");
                OnLocationColumnChanged();
            }
        }
        private Nullable<global::System.Decimal> _LocationColumn;
        partial void OnLocationColumnChanging(Nullable<global::System.Decimal> value);
        partial void OnLocationColumnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LocationRow
        {
            get
            {
                return _LocationRow;
            }
            set
            {
                OnLocationRowChanging(value);
                ReportPropertyChanging("LocationRow");
                _LocationRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationRow");
                OnLocationRowChanged();
            }
        }
        private Nullable<global::System.Decimal> _LocationRow;
        partial void OnLocationRowChanging(Nullable<global::System.Decimal> value);
        partial void OnLocationRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileTypeId
        {
            get
            {
                return _FileTypeId;
            }
            set
            {
                OnFileTypeIdChanging(value);
                ReportPropertyChanging("FileTypeId");
                _FileTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileTypeId");
                OnFileTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FileTypeId;
        partial void OnFileTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFileTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSiteUrl
        {
            get
            {
                return _WebSiteUrl;
            }
            set
            {
                OnWebSiteUrlChanging(value);
                ReportPropertyChanging("WebSiteUrl");
                _WebSiteUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSiteUrl");
                OnWebSiteUrlChanged();
            }
        }
        private global::System.String _WebSiteUrl;
        partial void OnWebSiteUrlChanging(global::System.String value);
        partial void OnWebSiteUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NavigationInstructions
        {
            get
            {
                return _NavigationInstructions;
            }
            set
            {
                OnNavigationInstructionsChanging(value);
                ReportPropertyChanging("NavigationInstructions");
                _NavigationInstructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NavigationInstructions");
                OnNavigationInstructionsChanged();
            }
        }
        private global::System.String _NavigationInstructions;
        partial void OnNavigationInstructionsChanging(global::System.String value);
        partial void OnNavigationInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginControl
        {
            get
            {
                return _LoginControl;
            }
            set
            {
                OnLoginControlChanging(value);
                ReportPropertyChanging("LoginControl");
                _LoginControl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginControl");
                OnLoginControlChanged();
            }
        }
        private global::System.String _LoginControl;
        partial void OnLoginControlChanging(global::System.String value);
        partial void OnLoginControlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordControl
        {
            get
            {
                return _PasswordControl;
            }
            set
            {
                OnPasswordControlChanging(value);
                ReportPropertyChanging("PasswordControl");
                _PasswordControl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordControl");
                OnPasswordControlChanged();
            }
        }
        private global::System.String _PasswordControl;
        partial void OnPasswordControlChanging(global::System.String value);
        partial void OnPasswordControlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorDefaults_MasterFileTypes", "MasterFileTypes")]
        public MasterFileType MasterFileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterFileType>("Model.FK_GlobalPayorDefaults_MasterFileTypes", "MasterFileTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterFileType>("Model.FK_GlobalPayorDefaults_MasterFileTypes", "MasterFileTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterFileType> MasterFileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterFileType>("Model.FK_GlobalPayorDefaults_MasterFileTypes", "MasterFileTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterFileType>("Model.FK_GlobalPayorDefaults_MasterFileTypes", "MasterFileTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorDefaults_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorDefaults_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorDefaults_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorDefaults_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_GlobalPayorDefaults_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GlobalPayorStatementDate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalPayorStatementDate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalPayorStatementDate object.
        /// </summary>
        /// <param name="payorStatementDateID">Initial value of the PayorStatementDateID property.</param>
        /// <param name="payorID">Initial value of the PayorID property.</param>
        /// <param name="statementDate">Initial value of the StatementDate property.</param>
        /// <param name="isBatchCreated">Initial value of the IsBatchCreated property.</param>
        public static GlobalPayorStatementDate CreateGlobalPayorStatementDate(global::System.Guid payorStatementDateID, global::System.Guid payorID, global::System.DateTime statementDate, global::System.Boolean isBatchCreated)
        {
            GlobalPayorStatementDate globalPayorStatementDate = new GlobalPayorStatementDate();
            globalPayorStatementDate.PayorStatementDateID = payorStatementDateID;
            globalPayorStatementDate.PayorID = payorID;
            globalPayorStatementDate.StatementDate = statementDate;
            globalPayorStatementDate.IsBatchCreated = isBatchCreated;
            return globalPayorStatementDate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorStatementDateID
        {
            get
            {
                return _PayorStatementDateID;
            }
            set
            {
                if (_PayorStatementDateID != value)
                {
                    OnPayorStatementDateIDChanging(value);
                    ReportPropertyChanging("PayorStatementDateID");
                    _PayorStatementDateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorStatementDateID");
                    OnPayorStatementDateIDChanged();
                }
            }
        }
        private global::System.Guid _PayorStatementDateID;
        partial void OnPayorStatementDateIDChanging(global::System.Guid value);
        partial void OnPayorStatementDateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private global::System.Guid _PayorID;
        partial void OnPayorIDChanging(global::System.Guid value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StatementDate
        {
            get
            {
                return _StatementDate;
            }
            set
            {
                OnStatementDateChanging(value);
                ReportPropertyChanging("StatementDate");
                _StatementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementDate");
                OnStatementDateChanged();
            }
        }
        private global::System.DateTime _StatementDate;
        partial void OnStatementDateChanging(global::System.DateTime value);
        partial void OnStatementDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBatchCreated
        {
            get
            {
                return _IsBatchCreated;
            }
            set
            {
                OnIsBatchCreatedChanging(value);
                ReportPropertyChanging("IsBatchCreated");
                _IsBatchCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBatchCreated");
                OnIsBatchCreatedChanged();
            }
        }
        private global::System.Boolean _IsBatchCreated;
        partial void OnIsBatchCreatedChanging(global::System.Boolean value);
        partial void OnIsBatchCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorStatementDate_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorStatementDate_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorStatementDate_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_GlobalPayorStatementDate_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_GlobalPayorStatementDate_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportBatchFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportBatchFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportBatchFile object.
        /// </summary>
        /// <param name="importBatchId">Initial value of the ImportBatchId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static ImportBatchFile CreateImportBatchFile(global::System.Guid importBatchId, global::System.String fileName, global::System.DateTime createdOn)
        {
            ImportBatchFile importBatchFile = new ImportBatchFile();
            importBatchFile.ImportBatchId = importBatchId;
            importBatchFile.FileName = fileName;
            importBatchFile.CreatedOn = createdOn;
            return importBatchFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ImportBatchId
        {
            get
            {
                return _ImportBatchId;
            }
            set
            {
                if (_ImportBatchId != value)
                {
                    OnImportBatchIdChanging(value);
                    ReportPropertyChanging("ImportBatchId");
                    _ImportBatchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImportBatchId");
                    OnImportBatchIdChanged();
                }
            }
        }
        private global::System.Guid _ImportBatchId;
        partial void OnImportBatchIdChanging(global::System.Guid value);
        partial void OnImportBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Journals_ImportBatchFiles", "Journals")]
        public EntityCollection<Journal> Journals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("Model.FK_Journals_ImportBatchFiles", "Journals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("Model.FK_Journals_ImportBatchFiles", "Journals", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolAvailableField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolAvailableField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolAvailableField object.
        /// </summary>
        /// <param name="pTAvailableFieldId">Initial value of the PTAvailableFieldId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isDeletable">Initial value of the IsDeletable property.</param>
        public static ImportToolAvailableField CreateImportToolAvailableField(global::System.Int32 pTAvailableFieldId, global::System.Boolean isDeleted, global::System.Boolean isDeletable)
        {
            ImportToolAvailableField importToolAvailableField = new ImportToolAvailableField();
            importToolAvailableField.PTAvailableFieldId = pTAvailableFieldId;
            importToolAvailableField.IsDeleted = isDeleted;
            importToolAvailableField.IsDeletable = isDeletable;
            return importToolAvailableField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PTAvailableFieldId
        {
            get
            {
                return _PTAvailableFieldId;
            }
            set
            {
                if (_PTAvailableFieldId != value)
                {
                    OnPTAvailableFieldIdChanging(value);
                    ReportPropertyChanging("PTAvailableFieldId");
                    _PTAvailableFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PTAvailableFieldId");
                    OnPTAvailableFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _PTAvailableFieldId;
        partial void OnPTAvailableFieldIdChanging(global::System.Int32 value);
        partial void OnPTAvailableFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelOnImage
        {
            get
            {
                return _LabelOnImage;
            }
            set
            {
                OnLabelOnImageChanging(value);
                ReportPropertyChanging("LabelOnImage");
                _LabelOnImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelOnImage");
                OnLabelOnImageChanged();
            }
        }
        private global::System.String _LabelOnImage;
        partial void OnLabelOnImageChanging(global::System.String value);
        partial void OnLabelOnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldStatus
        {
            get
            {
                return _FieldStatus;
            }
            set
            {
                OnFieldStatusChanging(value);
                ReportPropertyChanging("FieldStatus");
                _FieldStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldStatus");
                OnFieldStatusChanged();
            }
        }
        private global::System.String _FieldStatus;
        partial void OnFieldStatusChanging(global::System.String value);
        partial void OnFieldStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldOrder
        {
            get
            {
                return _FieldOrder;
            }
            set
            {
                OnFieldOrderChanging(value);
                ReportPropertyChanging("FieldOrder");
                _FieldOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldOrder");
                OnFieldOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldOrder;
        partial void OnFieldOrderChanging(Nullable<global::System.Int32> value);
        partial void OnFieldOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPartOfPrimary
        {
            get
            {
                return _IsPartOfPrimary;
            }
            set
            {
                OnIsPartOfPrimaryChanging(value);
                ReportPropertyChanging("IsPartOfPrimary");
                _IsPartOfPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPartOfPrimary");
                OnIsPartOfPrimaryChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPartOfPrimary;
        partial void OnIsPartOfPrimaryChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPartOfPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPopulatedIfLinked
        {
            get
            {
                return _IsPopulatedIfLinked;
            }
            set
            {
                OnIsPopulatedIfLinkedChanging(value);
                ReportPropertyChanging("IsPopulatedIfLinked");
                _IsPopulatedIfLinked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPopulatedIfLinked");
                OnIsPopulatedIfLinkedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPopulatedIfLinked;
        partial void OnIsPopulatedIfLinkedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPopulatedIfLinkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTabbedToNextFieldIfLinked
        {
            get
            {
                return _IsTabbedToNextFieldIfLinked;
            }
            set
            {
                OnIsTabbedToNextFieldIfLinkedChanging(value);
                ReportPropertyChanging("IsTabbedToNextFieldIfLinked");
                _IsTabbedToNextFieldIfLinked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTabbedToNextFieldIfLinked");
                OnIsTabbedToNextFieldIfLinkedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTabbedToNextFieldIfLinked;
        partial void OnIsTabbedToNextFieldIfLinkedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTabbedToNextFieldIfLinkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCalculatedField
        {
            get
            {
                return _IsCalculatedField;
            }
            set
            {
                OnIsCalculatedFieldChanging(value);
                ReportPropertyChanging("IsCalculatedField");
                _IsCalculatedField = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCalculatedField");
                OnIsCalculatedFieldChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCalculatedField;
        partial void OnIsCalculatedFieldChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCalculatedFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOverrideOfCalcAllowed
        {
            get
            {
                return _IsOverrideOfCalcAllowed;
            }
            set
            {
                OnIsOverrideOfCalcAllowedChanging(value);
                ReportPropertyChanging("IsOverrideOfCalcAllowed");
                _IsOverrideOfCalcAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOverrideOfCalcAllowed");
                OnIsOverrideOfCalcAllowedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOverrideOfCalcAllowed;
        partial void OnIsOverrideOfCalcAllowedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOverrideOfCalcAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultNumeric
        {
            get
            {
                return _DefaultNumeric;
            }
            set
            {
                OnDefaultNumericChanging(value);
                ReportPropertyChanging("DefaultNumeric");
                _DefaultNumeric = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultNumeric");
                OnDefaultNumericChanged();
            }
        }
        private global::System.String _DefaultNumeric;
        partial void OnDefaultNumericChanging(global::System.String value);
        partial void OnDefaultNumericChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOorBlankAllowed
        {
            get
            {
                return _IsOorBlankAllowed;
            }
            set
            {
                OnIsOorBlankAllowedChanging(value);
                ReportPropertyChanging("IsOorBlankAllowed");
                _IsOorBlankAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOorBlankAllowed");
                OnIsOorBlankAllowedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOorBlankAllowed;
        partial void OnIsOorBlankAllowedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOorBlankAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AllignedDirection
        {
            get
            {
                return _AllignedDirection;
            }
            set
            {
                OnAllignedDirectionChanging(value);
                ReportPropertyChanging("AllignedDirection");
                _AllignedDirection = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AllignedDirection");
                OnAllignedDirectionChanged();
            }
        }
        private global::System.String _AllignedDirection;
        partial void OnAllignedDirectionChanging(global::System.String value);
        partial void OnAllignedDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentIncomingField
        {
            get
            {
                return _EquivalentIncomingField;
            }
            set
            {
                OnEquivalentIncomingFieldChanging(value);
                ReportPropertyChanging("EquivalentIncomingField");
                _EquivalentIncomingField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentIncomingField");
                OnEquivalentIncomingFieldChanged();
            }
        }
        private global::System.String _EquivalentIncomingField;
        partial void OnEquivalentIncomingFieldChanging(global::System.String value);
        partial void OnEquivalentIncomingFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentLearnedField
        {
            get
            {
                return _EquivalentLearnedField;
            }
            set
            {
                OnEquivalentLearnedFieldChanging(value);
                ReportPropertyChanging("EquivalentLearnedField");
                _EquivalentLearnedField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentLearnedField");
                OnEquivalentLearnedFieldChanged();
            }
        }
        private global::System.String _EquivalentLearnedField;
        partial void OnEquivalentLearnedFieldChanging(global::System.String value);
        partial void OnEquivalentLearnedFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentDeuField
        {
            get
            {
                return _EquivalentDeuField;
            }
            set
            {
                OnEquivalentDeuFieldChanging(value);
                ReportPropertyChanging("EquivalentDeuField");
                _EquivalentDeuField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentDeuField");
                OnEquivalentDeuFieldChanged();
            }
        }
        private global::System.String _EquivalentDeuField;
        partial void OnEquivalentDeuFieldChanging(global::System.String value);
        partial void OnEquivalentDeuFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeletable
        {
            get
            {
                return _IsDeletable;
            }
            set
            {
                OnIsDeletableChanging(value);
                ReportPropertyChanging("IsDeletable");
                _IsDeletable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeletable");
                OnIsDeletableChanged();
            }
        }
        private global::System.Boolean _IsDeletable;
        partial void OnIsDeletableChanging(global::System.Boolean value);
        partial void OnIsDeletableChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolBrokersSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolBrokersSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolBrokersSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolBrokersSetting CreateImportToolBrokersSetting(global::System.Int32 id)
        {
            ImportToolBrokersSetting importToolBrokersSetting = new ImportToolBrokersSetting();
            importToolBrokersSetting.ID = id;
            return importToolBrokersSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedRows
        {
            get
            {
                return _FixedRows;
            }
            set
            {
                OnFixedRowsChanging(value);
                ReportPropertyChanging("FixedRows");
                _FixedRows = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedRows");
                OnFixedRowsChanged();
            }
        }
        private global::System.String _FixedRows;
        partial void OnFixedRowsChanging(global::System.String value);
        partial void OnFixedRowsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedColumns
        {
            get
            {
                return _FixedColumns;
            }
            set
            {
                OnFixedColumnsChanging(value);
                ReportPropertyChanging("FixedColumns");
                _FixedColumns = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedColumns");
                OnFixedColumnsChanged();
            }
        }
        private global::System.String _FixedColumns;
        partial void OnFixedColumnsChanging(global::System.String value);
        partial void OnFixedColumnsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeSearchtext
        {
            get
            {
                return _RelativeSearchtext;
            }
            set
            {
                OnRelativeSearchtextChanging(value);
                ReportPropertyChanging("RelativeSearchtext");
                _RelativeSearchtext = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeSearchtext");
                OnRelativeSearchtextChanged();
            }
        }
        private global::System.String _RelativeSearchtext;
        partial void OnRelativeSearchtextChanging(global::System.String value);
        partial void OnRelativeSearchtextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeRows
        {
            get
            {
                return _RelativeRows;
            }
            set
            {
                OnRelativeRowsChanging(value);
                ReportPropertyChanging("RelativeRows");
                _RelativeRows = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeRows");
                OnRelativeRowsChanged();
            }
        }
        private global::System.String _RelativeRows;
        partial void OnRelativeRowsChanging(global::System.String value);
        partial void OnRelativeRowsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeColumns
        {
            get
            {
                return _RelativeColumns;
            }
            set
            {
                OnRelativeColumnsChanging(value);
                ReportPropertyChanging("RelativeColumns");
                _RelativeColumns = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeColumns");
                OnRelativeColumnsChanged();
            }
        }
        private global::System.String _RelativeColumns;
        partial void OnRelativeColumnsChanging(global::System.String value);
        partial void OnRelativeColumnsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolCommTranslator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolCommTranslator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolCommTranslator object.
        /// </summary>
        /// <param name="transID">Initial value of the TransID property.</param>
        public static ImportToolCommTranslator CreateImportToolCommTranslator(global::System.Int32 transID)
        {
            ImportToolCommTranslator importToolCommTranslator = new ImportToolCommTranslator();
            importToolCommTranslator.TransID = transID;
            return importToolCommTranslator;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransID
        {
            get
            {
                return _TransID;
            }
            set
            {
                if (_TransID != value)
                {
                    OnTransIDChanging(value);
                    ReportPropertyChanging("TransID");
                    _TransID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransID");
                    OnTransIDChanged();
                }
            }
        }
        private global::System.Int32 _TransID;
        partial void OnTransIDChanging(global::System.Int32 value);
        partial void OnTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _Type;
        partial void OnTypeChanging(Nullable<global::System.Byte> value);
        partial void OnTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolMasterStatementData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolMasterStatementData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolMasterStatementData object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolMasterStatementData CreateImportToolMasterStatementData(global::System.Int32 id)
        {
            ImportToolMasterStatementData importToolMasterStatementData = new ImportToolMasterStatementData();
            importToolMasterStatementData.ID = id;
            return importToolMasterStatementData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Statementdata
        {
            get
            {
                return _Statementdata;
            }
            set
            {
                OnStatementdataChanging(value);
                ReportPropertyChanging("Statementdata");
                _Statementdata = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Statementdata");
                OnStatementdataChanged();
            }
        }
        private global::System.String _Statementdata;
        partial void OnStatementdataChanging(global::System.String value);
        partial void OnStatementdataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatementDataType
        {
            get
            {
                return _StatementDataType;
            }
            set
            {
                OnStatementDataTypeChanging(value);
                ReportPropertyChanging("StatementDataType");
                _StatementDataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatementDataType");
                OnStatementDataTypeChanged();
            }
        }
        private global::System.String _StatementDataType;
        partial void OnStatementDataTypeChanging(global::System.String value);
        partial void OnStatementDataTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolPaymentDataFieldsSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolPaymentDataFieldsSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolPaymentDataFieldsSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolPaymentDataFieldsSetting CreateImportToolPaymentDataFieldsSetting(global::System.Int32 id)
        {
            ImportToolPaymentDataFieldsSetting importToolPaymentDataFieldsSetting = new ImportToolPaymentDataFieldsSetting();
            importToolPaymentDataFieldsSetting.ID = id;
            return importToolPaymentDataFieldsSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayorToolAvailableFeildsID
        {
            get
            {
                return _PayorToolAvailableFeildsID;
            }
            set
            {
                OnPayorToolAvailableFeildsIDChanging(value);
                ReportPropertyChanging("PayorToolAvailableFeildsID");
                _PayorToolAvailableFeildsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorToolAvailableFeildsID");
                OnPayorToolAvailableFeildsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PayorToolAvailableFeildsID;
        partial void OnPayorToolAvailableFeildsIDChanging(Nullable<global::System.Int32> value);
        partial void OnPayorToolAvailableFeildsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldsID
        {
            get
            {
                return _FieldsID;
            }
            set
            {
                OnFieldsIDChanging(value);
                ReportPropertyChanging("FieldsID");
                _FieldsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldsID");
                OnFieldsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldsID;
        partial void OnFieldsIDChanging(Nullable<global::System.Int32> value);
        partial void OnFieldsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldsName
        {
            get
            {
                return _FieldsName;
            }
            set
            {
                OnFieldsNameChanging(value);
                ReportPropertyChanging("FieldsName");
                _FieldsName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldsName");
                OnFieldsNameChanged();
            }
        }
        private global::System.String _FieldsName;
        partial void OnFieldsNameChanging(global::System.String value);
        partial void OnFieldsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedRowLocation
        {
            get
            {
                return _FixedRowLocation;
            }
            set
            {
                OnFixedRowLocationChanging(value);
                ReportPropertyChanging("FixedRowLocation");
                _FixedRowLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedRowLocation");
                OnFixedRowLocationChanged();
            }
        }
        private global::System.String _FixedRowLocation;
        partial void OnFixedRowLocationChanging(global::System.String value);
        partial void OnFixedRowLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedColLocation
        {
            get
            {
                return _FixedColLocation;
            }
            set
            {
                OnFixedColLocationChanging(value);
                ReportPropertyChanging("FixedColLocation");
                _FixedColLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedColLocation");
                OnFixedColLocationChanged();
            }
        }
        private global::System.String _FixedColLocation;
        partial void OnFixedColLocationChanging(global::System.String value);
        partial void OnFixedColLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HeaderSearch
        {
            get
            {
                return _HeaderSearch;
            }
            set
            {
                OnHeaderSearchChanging(value);
                ReportPropertyChanging("HeaderSearch");
                _HeaderSearch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HeaderSearch");
                OnHeaderSearchChanged();
            }
        }
        private global::System.String _HeaderSearch;
        partial void OnHeaderSearchChanging(global::System.String value);
        partial void OnHeaderSearchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeRowLocation
        {
            get
            {
                return _RelativeRowLocation;
            }
            set
            {
                OnRelativeRowLocationChanging(value);
                ReportPropertyChanging("RelativeRowLocation");
                _RelativeRowLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeRowLocation");
                OnRelativeRowLocationChanged();
            }
        }
        private global::System.String _RelativeRowLocation;
        partial void OnRelativeRowLocationChanging(global::System.String value);
        partial void OnRelativeRowLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeColLocation
        {
            get
            {
                return _RelativeColLocation;
            }
            set
            {
                OnRelativeColLocationChanging(value);
                ReportPropertyChanging("RelativeColLocation");
                _RelativeColLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeColLocation");
                OnRelativeColLocationChanged();
            }
        }
        private global::System.String _RelativeColLocation;
        partial void OnRelativeColLocationChanging(global::System.String value);
        partial void OnRelativeColLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PartOfPrimaryKey
        {
            get
            {
                return _PartOfPrimaryKey;
            }
            set
            {
                OnPartOfPrimaryKeyChanging(value);
                ReportPropertyChanging("PartOfPrimaryKey");
                _PartOfPrimaryKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartOfPrimaryKey");
                OnPartOfPrimaryKeyChanged();
            }
        }
        private Nullable<global::System.Boolean> _PartOfPrimaryKey;
        partial void OnPartOfPrimaryKeyChanging(Nullable<global::System.Boolean> value);
        partial void OnPartOfPrimaryKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CalculatedFields
        {
            get
            {
                return _CalculatedFields;
            }
            set
            {
                OnCalculatedFieldsChanging(value);
                ReportPropertyChanging("CalculatedFields");
                _CalculatedFields = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculatedFields");
                OnCalculatedFieldsChanged();
            }
        }
        private Nullable<global::System.Boolean> _CalculatedFields;
        partial void OnCalculatedFieldsChanging(Nullable<global::System.Boolean> value);
        partial void OnCalculatedFieldsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormulaExpression
        {
            get
            {
                return _FormulaExpression;
            }
            set
            {
                OnFormulaExpressionChanging(value);
                ReportPropertyChanging("FormulaExpression");
                _FormulaExpression = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormulaExpression");
                OnFormulaExpressionChanged();
            }
        }
        private global::System.String _FormulaExpression;
        partial void OnFormulaExpressionChanging(global::System.String value);
        partial void OnFormulaExpressionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayorToolMaskFieldTypeId
        {
            get
            {
                return _PayorToolMaskFieldTypeId;
            }
            set
            {
                OnPayorToolMaskFieldTypeIdChanging(value);
                ReportPropertyChanging("PayorToolMaskFieldTypeId");
                _PayorToolMaskFieldTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorToolMaskFieldTypeId");
                OnPayorToolMaskFieldTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PayorToolMaskFieldTypeId;
        partial void OnPayorToolMaskFieldTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPayorToolMaskFieldTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StartRowLocation
        {
            get
            {
                return _StartRowLocation;
            }
            set
            {
                OnStartRowLocationChanging(value);
                ReportPropertyChanging("StartRowLocation");
                _StartRowLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StartRowLocation");
                OnStartRowLocationChanged();
            }
        }
        private global::System.String _StartRowLocation;
        partial void OnStartRowLocationChanging(global::System.String value);
        partial void OnStartRowLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StartColLocation
        {
            get
            {
                return _StartColLocation;
            }
            set
            {
                OnStartColLocationChanging(value);
                ReportPropertyChanging("StartColLocation");
                _StartColLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StartColLocation");
                OnStartColLocationChanged();
            }
        }
        private global::System.String _StartColLocation;
        partial void OnStartColLocationChanging(global::System.String value);
        partial void OnStartColLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndRowLocation
        {
            get
            {
                return _EndRowLocation;
            }
            set
            {
                OnEndRowLocationChanging(value);
                ReportPropertyChanging("EndRowLocation");
                _EndRowLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndRowLocation");
                OnEndRowLocationChanged();
            }
        }
        private global::System.String _EndRowLocation;
        partial void OnEndRowLocationChanging(global::System.String value);
        partial void OnEndRowLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndColLocation
        {
            get
            {
                return _EndColLocation;
            }
            set
            {
                OnEndColLocationChanging(value);
                ReportPropertyChanging("EndColLocation");
                _EndColLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndColLocation");
                OnEndColLocationChanged();
            }
        }
        private global::System.String _EndColLocation;
        partial void OnEndColLocationChanging(global::System.String value);
        partial void OnEndColLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransID
        {
            get
            {
                return _TransID;
            }
            set
            {
                OnTransIDChanging(value);
                ReportPropertyChanging("TransID");
                _TransID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransID");
                OnTransIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TransID;
        partial void OnTransIDChanging(Nullable<global::System.Int32> value);
        partial void OnTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransName
        {
            get
            {
                return _TransName;
            }
            set
            {
                OnTransNameChanging(value);
                ReportPropertyChanging("TransName");
                _TransName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransName");
                OnTransNameChanged();
            }
        }
        private global::System.String _TransName;
        partial void OnTransNameChanging(global::System.String value);
        partial void OnTransNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultText
        {
            get
            {
                return _DefaultText;
            }
            set
            {
                OnDefaultTextChanging(value);
                ReportPropertyChanging("DefaultText");
                _DefaultText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultText");
                OnDefaultTextChanged();
            }
        }
        private global::System.String _DefaultText;
        partial void OnDefaultTextChanging(global::System.String value);
        partial void OnDefaultTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolPayorPhrase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolPayorPhrase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolPayorPhrase object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolPayorPhrase CreateImportToolPayorPhrase(global::System.Int32 id)
        {
            ImportToolPayorPhrase importToolPayorPhrase = new ImportToolPayorPhrase();
            importToolPayorPhrase.ID = id;
            return importToolPayorPhrase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorName
        {
            get
            {
                return _PayorName;
            }
            set
            {
                OnPayorNameChanging(value);
                ReportPropertyChanging("PayorName");
                _PayorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorName");
                OnPayorNameChanged();
            }
        }
        private global::System.String _PayorName;
        partial void OnPayorNameChanging(global::System.String value);
        partial void OnPayorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateName
        {
            get
            {
                return _TemplateName;
            }
            set
            {
                OnTemplateNameChanging(value);
                ReportPropertyChanging("TemplateName");
                _TemplateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateName");
                OnTemplateNameChanged();
            }
        }
        private global::System.String _TemplateName;
        partial void OnTemplateNameChanging(global::System.String value);
        partial void OnTemplateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.String _FileType;
        partial void OnFileTypeChanging(global::System.String value);
        partial void OnFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileFormat
        {
            get
            {
                return _FileFormat;
            }
            set
            {
                OnFileFormatChanging(value);
                ReportPropertyChanging("FileFormat");
                _FileFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileFormat");
                OnFileFormatChanged();
            }
        }
        private global::System.String _FileFormat;
        partial void OnFileFormatChanging(global::System.String value);
        partial void OnFileFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedRowLocation
        {
            get
            {
                return _FixedRowLocation;
            }
            set
            {
                OnFixedRowLocationChanging(value);
                ReportPropertyChanging("FixedRowLocation");
                _FixedRowLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedRowLocation");
                OnFixedRowLocationChanged();
            }
        }
        private global::System.String _FixedRowLocation;
        partial void OnFixedRowLocationChanging(global::System.String value);
        partial void OnFixedRowLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedColLocation
        {
            get
            {
                return _FixedColLocation;
            }
            set
            {
                OnFixedColLocationChanging(value);
                ReportPropertyChanging("FixedColLocation");
                _FixedColLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedColLocation");
                OnFixedColLocationChanged();
            }
        }
        private global::System.String _FixedColLocation;
        partial void OnFixedColLocationChanging(global::System.String value);
        partial void OnFixedColLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeSearchText
        {
            get
            {
                return _RelativeSearchText;
            }
            set
            {
                OnRelativeSearchTextChanging(value);
                ReportPropertyChanging("RelativeSearchText");
                _RelativeSearchText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeSearchText");
                OnRelativeSearchTextChanged();
            }
        }
        private global::System.String _RelativeSearchText;
        partial void OnRelativeSearchTextChanging(global::System.String value);
        partial void OnRelativeSearchTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeRowLocation
        {
            get
            {
                return _RelativeRowLocation;
            }
            set
            {
                OnRelativeRowLocationChanging(value);
                ReportPropertyChanging("RelativeRowLocation");
                _RelativeRowLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeRowLocation");
                OnRelativeRowLocationChanged();
            }
        }
        private global::System.String _RelativeRowLocation;
        partial void OnRelativeRowLocationChanging(global::System.String value);
        partial void OnRelativeRowLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeColLocation
        {
            get
            {
                return _RelativeColLocation;
            }
            set
            {
                OnRelativeColLocationChanging(value);
                ReportPropertyChanging("RelativeColLocation");
                _RelativeColLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeColLocation");
                OnRelativeColLocationChanged();
            }
        }
        private global::System.String _RelativeColLocation;
        partial void OnRelativeColLocationChanging(global::System.String value);
        partial void OnRelativeColLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorPhrases
        {
            get
            {
                return _PayorPhrases;
            }
            set
            {
                OnPayorPhrasesChanging(value);
                ReportPropertyChanging("PayorPhrases");
                _PayorPhrases = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorPhrases");
                OnPayorPhrasesChanged();
            }
        }
        private global::System.String _PayorPhrases;
        partial void OnPayorPhrasesChanging(global::System.String value);
        partial void OnPayorPhrasesChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolPayorTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolPayorTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolPayorTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolPayorTemplate CreateImportToolPayorTemplate(global::System.Int32 id)
        {
            ImportToolPayorTemplate importToolPayorTemplate = new ImportToolPayorTemplate();
            importToolPayorTemplate.ID = id;
            return importToolPayorTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateName
        {
            get
            {
                return _TemplateName;
            }
            set
            {
                OnTemplateNameChanging(value);
                ReportPropertyChanging("TemplateName");
                _TemplateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateName");
                OnTemplateNameChanged();
            }
        }
        private global::System.String _TemplateName;
        partial void OnTemplateNameChanging(global::System.String value);
        partial void OnTemplateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsForceImport
        {
            get
            {
                return _IsForceImport;
            }
            set
            {
                OnIsForceImportChanging(value);
                ReportPropertyChanging("IsForceImport");
                _IsForceImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForceImport");
                OnIsForceImportChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsForceImport;
        partial void OnIsForceImportChanging(Nullable<global::System.Boolean> value);
        partial void OnIsForceImportChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolSeletedPaymentData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolSeletedPaymentData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolSeletedPaymentData object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolSeletedPaymentData CreateImportToolSeletedPaymentData(global::System.Int32 id)
        {
            ImportToolSeletedPaymentData importToolSeletedPaymentData = new ImportToolSeletedPaymentData();
            importToolSeletedPaymentData.ID = id;
            return importToolSeletedPaymentData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayorToolAvailableFieldId
        {
            get
            {
                return _PayorToolAvailableFieldId;
            }
            set
            {
                OnPayorToolAvailableFieldIdChanging(value);
                ReportPropertyChanging("PayorToolAvailableFieldId");
                _PayorToolAvailableFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorToolAvailableFieldId");
                OnPayorToolAvailableFieldIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PayorToolAvailableFieldId;
        partial void OnPayorToolAvailableFieldIdChanging(Nullable<global::System.Int32> value);
        partial void OnPayorToolAvailableFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldID
        {
            get
            {
                return _FieldID;
            }
            set
            {
                OnFieldIDChanging(value);
                ReportPropertyChanging("FieldID");
                _FieldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldID");
                OnFieldIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldID;
        partial void OnFieldIDChanging(Nullable<global::System.Int32> value);
        partial void OnFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolStatementDataSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolStatementDataSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolStatementDataSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolStatementDataSetting CreateImportToolStatementDataSetting(global::System.Byte id)
        {
            ImportToolStatementDataSetting importToolStatementDataSetting = new ImportToolStatementDataSetting();
            importToolStatementDataSetting.ID = id;
            return importToolStatementDataSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Byte _ID;
        partial void OnIDChanging(global::System.Byte value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterStatementDataID
        {
            get
            {
                return _MasterStatementDataID;
            }
            set
            {
                OnMasterStatementDataIDChanging(value);
                ReportPropertyChanging("MasterStatementDataID");
                _MasterStatementDataID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterStatementDataID");
                OnMasterStatementDataIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterStatementDataID;
        partial void OnMasterStatementDataIDChanging(Nullable<global::System.Int32> value);
        partial void OnMasterStatementDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedRowsLocation
        {
            get
            {
                return _FixedRowsLocation;
            }
            set
            {
                OnFixedRowsLocationChanging(value);
                ReportPropertyChanging("FixedRowsLocation");
                _FixedRowsLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedRowsLocation");
                OnFixedRowsLocationChanged();
            }
        }
        private global::System.String _FixedRowsLocation;
        partial void OnFixedRowsLocationChanging(global::System.String value);
        partial void OnFixedRowsLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedColsLocation
        {
            get
            {
                return _FixedColsLocation;
            }
            set
            {
                OnFixedColsLocationChanging(value);
                ReportPropertyChanging("FixedColsLocation");
                _FixedColsLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedColsLocation");
                OnFixedColsLocationChanged();
            }
        }
        private global::System.String _FixedColsLocation;
        partial void OnFixedColsLocationChanging(global::System.String value);
        partial void OnFixedColsLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeSearch
        {
            get
            {
                return _RelativeSearch;
            }
            set
            {
                OnRelativeSearchChanging(value);
                ReportPropertyChanging("RelativeSearch");
                _RelativeSearch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeSearch");
                OnRelativeSearchChanged();
            }
        }
        private global::System.String _RelativeSearch;
        partial void OnRelativeSearchChanging(global::System.String value);
        partial void OnRelativeSearchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeRowsLocation
        {
            get
            {
                return _RelativeRowsLocation;
            }
            set
            {
                OnRelativeRowsLocationChanging(value);
                ReportPropertyChanging("RelativeRowsLocation");
                _RelativeRowsLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeRowsLocation");
                OnRelativeRowsLocationChanged();
            }
        }
        private global::System.String _RelativeRowsLocation;
        partial void OnRelativeRowsLocationChanging(global::System.String value);
        partial void OnRelativeRowsLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeColsLocation
        {
            get
            {
                return _RelativeColsLocation;
            }
            set
            {
                OnRelativeColsLocationChanging(value);
                ReportPropertyChanging("RelativeColsLocation");
                _RelativeColsLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeColsLocation");
                OnRelativeColsLocationChanged();
            }
        }
        private global::System.String _RelativeColsLocation;
        partial void OnRelativeColsLocationChanging(global::System.String value);
        partial void OnRelativeColsLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBlankFieldsIndicatorAvailable
        {
            get
            {
                return _IsBlankFieldsIndicatorAvailable;
            }
            set
            {
                OnIsBlankFieldsIndicatorAvailableChanging(value);
                ReportPropertyChanging("IsBlankFieldsIndicatorAvailable");
                _IsBlankFieldsIndicatorAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBlankFieldsIndicatorAvailable");
                OnIsBlankFieldsIndicatorAvailableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBlankFieldsIndicatorAvailable;
        partial void OnIsBlankFieldsIndicatorAvailableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBlankFieldsIndicatorAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlankFieldsIndicator
        {
            get
            {
                return _BlankFieldsIndicator;
            }
            set
            {
                OnBlankFieldsIndicatorChanging(value);
                ReportPropertyChanging("BlankFieldsIndicator");
                _BlankFieldsIndicator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlankFieldsIndicator");
                OnBlankFieldsIndicatorChanged();
            }
        }
        private global::System.String _BlankFieldsIndicator;
        partial void OnBlankFieldsIndicatorChanging(global::System.String value);
        partial void OnBlankFieldsIndicatorChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ImportToolTemplatePhrase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportToolTemplatePhrase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportToolTemplatePhrase object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImportToolTemplatePhrase CreateImportToolTemplatePhrase(global::System.Int32 id)
        {
            ImportToolTemplatePhrase importToolTemplatePhrase = new ImportToolTemplatePhrase();
            importToolTemplatePhrase.ID = id;
            return importToolTemplatePhrase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatementDataSettingsID
        {
            get
            {
                return _StatementDataSettingsID;
            }
            set
            {
                OnStatementDataSettingsIDChanging(value);
                ReportPropertyChanging("StatementDataSettingsID");
                _StatementDataSettingsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementDataSettingsID");
                OnStatementDataSettingsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatementDataSettingsID;
        partial void OnStatementDataSettingsIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatementDataSettingsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterStatementDataID
        {
            get
            {
                return _MasterStatementDataID;
            }
            set
            {
                OnMasterStatementDataIDChanging(value);
                ReportPropertyChanging("MasterStatementDataID");
                _MasterStatementDataID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterStatementDataID");
                OnMasterStatementDataIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterStatementDataID;
        partial void OnMasterStatementDataIDChanging(Nullable<global::System.Int32> value);
        partial void OnMasterStatementDataIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="IncomingCompType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IncomingCompType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IncomingCompType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static IncomingCompType CreateIncomingCompType(global::System.Int32 id)
        {
            IncomingCompType incomingCompType = new IncomingCompType();
            incomingCompType.Id = id;
            return incomingCompType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IncomingPaymentTypeID
        {
            get
            {
                return _IncomingPaymentTypeID;
            }
            set
            {
                OnIncomingPaymentTypeIDChanging(value);
                ReportPropertyChanging("IncomingPaymentTypeID");
                _IncomingPaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncomingPaymentTypeID");
                OnIncomingPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IncomingPaymentTypeID;
        partial void OnIncomingPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnIncomingPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentTypeName
        {
            get
            {
                return _PaymentTypeName;
            }
            set
            {
                OnPaymentTypeNameChanging(value);
                ReportPropertyChanging("PaymentTypeName");
                _PaymentTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentTypeName");
                OnPaymentTypeNameChanged();
            }
        }
        private global::System.String _PaymentTypeName;
        partial void OnPaymentTypeNameChanging(global::System.String value);
        partial void OnPaymentTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Names
        {
            get
            {
                return _Names;
            }
            set
            {
                OnNamesChanging(value);
                ReportPropertyChanging("Names");
                _Names = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Names");
                OnNamesChanged();
            }
        }
        private global::System.String _Names;
        partial void OnNamesChanging(global::System.String value);
        partial void OnNamesChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="invoiceId">Initial value of the InvoiceId property.</param>
        public static Invoice CreateInvoice(global::System.Int64 invoiceId)
        {
            Invoice invoice = new Invoice();
            invoice.InvoiceId = invoiceId;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                if (_InvoiceId != value)
                {
                    OnInvoiceIdChanging(value);
                    ReportPropertyChanging("InvoiceId");
                    _InvoiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceId");
                    OnInvoiceIdChanged();
                }
            }
        }
        private global::System.Int64 _InvoiceId;
        partial void OnInvoiceIdChanging(global::System.Int64 value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BillingStartDate
        {
            get
            {
                return _BillingStartDate;
            }
            set
            {
                OnBillingStartDateChanging(value);
                ReportPropertyChanging("BillingStartDate");
                _BillingStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingStartDate");
                OnBillingStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BillingStartDate;
        partial void OnBillingStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBillingStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BillingDate
        {
            get
            {
                return _BillingDate;
            }
            set
            {
                OnBillingDateChanging(value);
                ReportPropertyChanging("BillingDate");
                _BillingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingDate");
                OnBillingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BillingDate;
        partial void OnBillingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBillingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoiceAmount
        {
            get
            {
                return _InvoiceAmount;
            }
            set
            {
                OnInvoiceAmountChanging(value);
                ReportPropertyChanging("InvoiceAmount");
                _InvoiceAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceAmount");
                OnInvoiceAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoiceAmount;
        partial void OnInvoiceAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoiceAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DueBalance
        {
            get
            {
                return _DueBalance;
            }
            set
            {
                OnDueBalanceChanging(value);
                ReportPropertyChanging("DueBalance");
                _DueBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueBalance");
                OnDueBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _DueBalance;
        partial void OnDueBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnDueBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceGeneratedOn
        {
            get
            {
                return _InvoiceGeneratedOn;
            }
            set
            {
                OnInvoiceGeneratedOnChanging(value);
                ReportPropertyChanging("InvoiceGeneratedOn");
                _InvoiceGeneratedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceGeneratedOn");
                OnInvoiceGeneratedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceGeneratedOn;
        partial void OnInvoiceGeneratedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceGeneratedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExportBatchId
        {
            get
            {
                return _ExportBatchId;
            }
            set
            {
                OnExportBatchIdChanging(value);
                ReportPropertyChanging("ExportBatchId");
                _ExportBatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExportBatchId");
                OnExportBatchIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ExportBatchId;
        partial void OnExportBatchIdChanging(Nullable<global::System.Guid> value);
        partial void OnExportBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BillingEndDate
        {
            get
            {
                return _BillingEndDate;
            }
            set
            {
                OnBillingEndDateChanging(value);
                ReportPropertyChanging("BillingEndDate");
                _BillingEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingEndDate");
                OnBillingEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BillingEndDate;
        partial void OnBillingEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBillingEndDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Invoices_ExportBatchFiles", "ExportBatchFiles")]
        public ExportBatchFile ExportBatchFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExportBatchFile>("Model.FK_Invoices_ExportBatchFiles", "ExportBatchFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExportBatchFile>("Model.FK_Invoices_ExportBatchFiles", "ExportBatchFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExportBatchFile> ExportBatchFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExportBatchFile>("Model.FK_Invoices_ExportBatchFiles", "ExportBatchFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExportBatchFile>("Model.FK_Invoices_ExportBatchFiles", "ExportBatchFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InvoiceBillingLineDetail_Invoices", "InvoiceBillingLineDetail")]
        public EntityCollection<InvoiceBillingLineDetail> InvoiceBillingLineDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceBillingLineDetail>("Model.FK_InvoiceBillingLineDetail_Invoices", "InvoiceBillingLineDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceBillingLineDetail>("Model.FK_InvoiceBillingLineDetail_Invoices", "InvoiceBillingLineDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Invoices_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Invoices_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Invoices_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Invoices_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_Invoices_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Journals_Invoices", "Journals")]
        public EntityCollection<Journal> Journals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("Model.FK_Journals_Invoices", "Journals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("Model.FK_Journals_Invoices", "Journals", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="InvoiceBillingLineDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceBillingLineDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceBillingLineDetail object.
        /// </summary>
        /// <param name="billingLineId">Initial value of the BillingLineId property.</param>
        /// <param name="invoiceId">Initial value of the InvoiceId property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="consumedUnit">Initial value of the ConsumedUnit property.</param>
        /// <param name="chargedAmount">Initial value of the ChargedAmount property.</param>
        /// <param name="tax">Initial value of the Tax property.</param>
        /// <param name="serviceChargeTypeId">Initial value of the ServiceChargeTypeId property.</param>
        public static InvoiceBillingLineDetail CreateInvoiceBillingLineDetail(global::System.Guid billingLineId, global::System.Int64 invoiceId, global::System.Int32 serviceId, global::System.Int32 consumedUnit, global::System.Decimal chargedAmount, global::System.Decimal tax, global::System.Int32 serviceChargeTypeId)
        {
            InvoiceBillingLineDetail invoiceBillingLineDetail = new InvoiceBillingLineDetail();
            invoiceBillingLineDetail.BillingLineId = billingLineId;
            invoiceBillingLineDetail.InvoiceId = invoiceId;
            invoiceBillingLineDetail.ServiceId = serviceId;
            invoiceBillingLineDetail.ConsumedUnit = consumedUnit;
            invoiceBillingLineDetail.ChargedAmount = chargedAmount;
            invoiceBillingLineDetail.Tax = tax;
            invoiceBillingLineDetail.ServiceChargeTypeId = serviceChargeTypeId;
            return invoiceBillingLineDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BillingLineId
        {
            get
            {
                return _BillingLineId;
            }
            set
            {
                if (_BillingLineId != value)
                {
                    OnBillingLineIdChanging(value);
                    ReportPropertyChanging("BillingLineId");
                    _BillingLineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillingLineId");
                    OnBillingLineIdChanged();
                }
            }
        }
        private global::System.Guid _BillingLineId;
        partial void OnBillingLineIdChanging(global::System.Guid value);
        partial void OnBillingLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                OnInvoiceIdChanging(value);
                ReportPropertyChanging("InvoiceId");
                _InvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceId");
                OnInvoiceIdChanged();
            }
        }
        private global::System.Int64 _InvoiceId;
        partial void OnInvoiceIdChanging(global::System.Int64 value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.Int32 _ServiceId;
        partial void OnServiceIdChanging(global::System.Int32 value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsumedUnit
        {
            get
            {
                return _ConsumedUnit;
            }
            set
            {
                OnConsumedUnitChanging(value);
                ReportPropertyChanging("ConsumedUnit");
                _ConsumedUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsumedUnit");
                OnConsumedUnitChanged();
            }
        }
        private global::System.Int32 _ConsumedUnit;
        partial void OnConsumedUnitChanging(global::System.Int32 value);
        partial void OnConsumedUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ChargedAmount
        {
            get
            {
                return _ChargedAmount;
            }
            set
            {
                OnChargedAmountChanging(value);
                ReportPropertyChanging("ChargedAmount");
                _ChargedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargedAmount");
                OnChargedAmountChanged();
            }
        }
        private global::System.Decimal _ChargedAmount;
        partial void OnChargedAmountChanging(global::System.Decimal value);
        partial void OnChargedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Min
        {
            get
            {
                return _Min;
            }
            set
            {
                OnMinChanging(value);
                ReportPropertyChanging("Min");
                _Min = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Min");
                OnMinChanged();
            }
        }
        private Nullable<global::System.Decimal> _Min;
        partial void OnMinChanging(Nullable<global::System.Decimal> value);
        partial void OnMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Range1
        {
            get
            {
                return _Range1;
            }
            set
            {
                OnRange1Changing(value);
                ReportPropertyChanging("Range1");
                _Range1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Range1");
                OnRange1Changed();
            }
        }
        private Nullable<global::System.Int32> _Range1;
        partial void OnRange1Changing(Nullable<global::System.Int32> value);
        partial void OnRange1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Range2
        {
            get
            {
                return _Range2;
            }
            set
            {
                OnRange2Changing(value);
                ReportPropertyChanging("Range2");
                _Range2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Range2");
                OnRange2Changed();
            }
        }
        private Nullable<global::System.Int32> _Range2;
        partial void OnRange2Changing(Nullable<global::System.Int32> value);
        partial void OnRange2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Tax
        {
            get
            {
                return _Tax;
            }
            set
            {
                OnTaxChanging(value);
                ReportPropertyChanging("Tax");
                _Tax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tax");
                OnTaxChanged();
            }
        }
        private global::System.Decimal _Tax;
        partial void OnTaxChanging(global::System.Decimal value);
        partial void OnTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceChargeTypeId
        {
            get
            {
                return _ServiceChargeTypeId;
            }
            set
            {
                OnServiceChargeTypeIdChanging(value);
                ReportPropertyChanging("ServiceChargeTypeId");
                _ServiceChargeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceChargeTypeId");
                OnServiceChargeTypeIdChanged();
            }
        }
        private global::System.Int32 _ServiceChargeTypeId;
        partial void OnServiceChargeTypeIdChanging(global::System.Int32 value);
        partial void OnServiceChargeTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InvoiceBillingLineDetail_Invoices", "Invoices")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("Model.FK_InvoiceBillingLineDetail_Invoices", "Invoices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("Model.FK_InvoiceBillingLineDetail_Invoices", "Invoices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("Model.FK_InvoiceBillingLineDetail_Invoices", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("Model.FK_InvoiceBillingLineDetail_Invoices", "Invoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "MasterServiceChargeTypes")]
        public MasterServiceChargeType MasterServiceChargeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "MasterServiceChargeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "MasterServiceChargeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterServiceChargeType> MasterServiceChargeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "MasterServiceChargeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterServiceChargeType>("Model.FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "MasterServiceChargeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InvoiceBillingLineDetail_MasterServices", "MasterServices")]
        public MasterService MasterService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_InvoiceBillingLineDetail_MasterServices", "MasterServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_InvoiceBillingLineDetail_MasterServices", "MasterServices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterService> MasterServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_InvoiceBillingLineDetail_MasterServices", "MasterServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterService>("Model.FK_InvoiceBillingLineDetail_MasterServices", "MasterServices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "PolicyLevelBillingDetail")]
        public EntityCollection<PolicyLevelBillingDetail> PolicyLevelBillingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLevelBillingDetail>("Model.FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "PolicyLevelBillingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLevelBillingDetail>("Model.FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "PolicyLevelBillingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_VariablesForBillingLine_InvoiceBillingLineDetail", "VariablesForBillingLine")]
        public VariablesForBillingLine VariablesForBillingLine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VariablesForBillingLine>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "VariablesForBillingLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VariablesForBillingLine>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "VariablesForBillingLine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VariablesForBillingLine> VariablesForBillingLineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VariablesForBillingLine>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "VariablesForBillingLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VariablesForBillingLine>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "VariablesForBillingLine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="IssuedFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssuedFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssuedFile object.
        /// </summary>
        /// <param name="payorID">Initial value of the PayorID property.</param>
        public static IssuedFile CreateIssuedFile(global::System.Guid payorID)
        {
            IssuedFile issuedFile = new IssuedFile();
            issuedFile.PayorID = payorID;
            return issuedFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                if (_PayorID != value)
                {
                    OnPayorIDChanging(value);
                    ReportPropertyChanging("PayorID");
                    _PayorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorID");
                    OnPayorIDChanged();
                }
            }
        }
        private global::System.Guid _PayorID;
        partial void OnPayorIDChanging(global::System.Guid value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_IssuedFiles_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_IssuedFiles_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_IssuedFiles_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_IssuedFiles_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_IssuedFiles_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Issuelog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issuelog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issuelog object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        public static Issuelog CreateIssuelog(global::System.Int64 issueId)
        {
            Issuelog issuelog = new Issuelog();
            issuelog.IssueId = issueId;
            return issuelog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                if (_IssueId != value)
                {
                    OnIssueIdChanging(value);
                    ReportPropertyChanging("IssueId");
                    _IssueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueId");
                    OnIssueIdChanged();
                }
            }
        }
        private global::System.Int64 _IssueId;
        partial void OnIssueIdChanging(global::System.Int64 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Issue
        {
            get
            {
                return _Issue;
            }
            set
            {
                OnIssueChanging(value);
                ReportPropertyChanging("Issue");
                _Issue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Issue");
                OnIssueChanged();
            }
        }
        private global::System.String _Issue;
        partial void OnIssueChanging(global::System.String value);
        partial void OnIssueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="journalId">Initial value of the JournalId property.</param>
        /// <param name="isManuallEntry">Initial value of the IsManuallEntry property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        public static Journal CreateJournal(global::System.Int64 journalId, global::System.Boolean isManuallEntry, global::System.Guid licenseeId)
        {
            Journal journal = new Journal();
            journal.JournalId = journalId;
            journal.IsManuallEntry = isManuallEntry;
            journal.LicenseeId = licenseeId;
            return journal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JournalId
        {
            get
            {
                return _JournalId;
            }
            set
            {
                if (_JournalId != value)
                {
                    OnJournalIdChanging(value);
                    ReportPropertyChanging("JournalId");
                    _JournalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalId");
                    OnJournalIdChanged();
                }
            }
        }
        private global::System.Int64 _JournalId;
        partial void OnJournalIdChanging(global::System.Int64 value);
        partial void OnJournalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                OnInvoiceIdChanging(value);
                ReportPropertyChanging("InvoiceId");
                _InvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceId");
                OnInvoiceIdChanged();
            }
        }
        private Nullable<global::System.Int64> _InvoiceId;
        partial void OnInvoiceIdChanging(Nullable<global::System.Int64> value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ImportBatchId
        {
            get
            {
                return _ImportBatchId;
            }
            set
            {
                OnImportBatchIdChanging(value);
                ReportPropertyChanging("ImportBatchId");
                _ImportBatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImportBatchId");
                OnImportBatchIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ImportBatchId;
        partial void OnImportBatchIdChanging(Nullable<global::System.Guid> value);
        partial void OnImportBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.String _TransactionId;
        partial void OnTransactionIdChanging(global::System.String value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BillingEndDate
        {
            get
            {
                return _BillingEndDate;
            }
            set
            {
                OnBillingEndDateChanging(value);
                ReportPropertyChanging("BillingEndDate");
                _BillingEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingEndDate");
                OnBillingEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BillingEndDate;
        partial void OnBillingEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBillingEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeOfEntry
        {
            get
            {
                return _TypeOfEntry;
            }
            set
            {
                OnTypeOfEntryChanging(value);
                ReportPropertyChanging("TypeOfEntry");
                _TypeOfEntry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeOfEntry");
                OnTypeOfEntryChanged();
            }
        }
        private global::System.String _TypeOfEntry;
        partial void OnTypeOfEntryChanging(global::System.String value);
        partial void OnTypeOfEntryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> JournalAmount
        {
            get
            {
                return _JournalAmount;
            }
            set
            {
                OnJournalAmountChanging(value);
                ReportPropertyChanging("JournalAmount");
                _JournalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JournalAmount");
                OnJournalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _JournalAmount;
        partial void OnJournalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnJournalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDateTime
        {
            get
            {
                return _TransactionDateTime;
            }
            set
            {
                OnTransactionDateTimeChanging(value);
                ReportPropertyChanging("TransactionDateTime");
                _TransactionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDateTime");
                OnTransactionDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDateTime;
        partial void OnTransactionDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManuallEntry
        {
            get
            {
                return _IsManuallEntry;
            }
            set
            {
                OnIsManuallEntryChanging(value);
                ReportPropertyChanging("IsManuallEntry");
                _IsManuallEntry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManuallEntry");
                OnIsManuallEntryChanged();
            }
        }
        private global::System.Boolean _IsManuallEntry;
        partial void OnIsManuallEntryChanging(global::System.Boolean value);
        partial void OnIsManuallEntryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentStatus
        {
            get
            {
                return _PaymentStatus;
            }
            set
            {
                OnPaymentStatusChanging(value);
                ReportPropertyChanging("PaymentStatus");
                _PaymentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentStatus");
                OnPaymentStatusChanged();
            }
        }
        private global::System.String _PaymentStatus;
        partial void OnPaymentStatusChanging(global::System.String value);
        partial void OnPaymentStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Journals_ImportBatchFiles", "ImportBatchFiles")]
        public ImportBatchFile ImportBatchFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportBatchFile>("Model.FK_Journals_ImportBatchFiles", "ImportBatchFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportBatchFile>("Model.FK_Journals_ImportBatchFiles", "ImportBatchFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImportBatchFile> ImportBatchFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportBatchFile>("Model.FK_Journals_ImportBatchFiles", "ImportBatchFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImportBatchFile>("Model.FK_Journals_ImportBatchFiles", "ImportBatchFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Journals_Invoices", "Invoices")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("Model.FK_Journals_Invoices", "Invoices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("Model.FK_Journals_Invoices", "Invoices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("Model.FK_Journals_Invoices", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("Model.FK_Journals_Invoices", "Invoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Journals_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Journals_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Journals_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Journals_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_Journals_Licensees", "Licensees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LastPolicyViewed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LastPolicyViewed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LastPolicyViewed object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sNo">Initial value of the SNo property.</param>
        public static LastPolicyViewed CreateLastPolicyViewed(global::System.Guid id, global::System.Int32 sNo)
        {
            LastPolicyViewed lastPolicyViewed = new LastPolicyViewed();
            lastPolicyViewed.ID = id;
            lastPolicyViewed.SNo = sNo;
            return lastPolicyViewed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                OnUserCredentialIdChanging(value);
                ReportPropertyChanging("UserCredentialId");
                _UserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCredentialId");
                OnUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserCredentialId;
        partial void OnUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Clientid
        {
            get
            {
                return _Clientid;
            }
            set
            {
                OnClientidChanging(value);
                ReportPropertyChanging("Clientid");
                _Clientid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Clientid");
                OnClientidChanged();
            }
        }
        private Nullable<global::System.Guid> _Clientid;
        partial void OnClientidChanging(Nullable<global::System.Guid> value);
        partial void OnClientidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SNo
        {
            get
            {
                return _SNo;
            }
            set
            {
                OnSNoChanging(value);
                ReportPropertyChanging("SNo");
                _SNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SNo");
                OnSNoChanged();
            }
        }
        private global::System.Int32 _SNo;
        partial void OnSNoChanging(global::System.Int32 value);
        partial void OnSNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_lastpolicyviewed_Clients", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_lastpolicyviewed_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_lastpolicyviewed_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_lastpolicyviewed_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.FK_lastpolicyviewed_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LastPolicyViewed_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_LastPolicyViewed_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_LastPolicyViewed_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_LastPolicyViewed_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_LastPolicyViewed_Policies", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_lastpolicyviewed_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_lastpolicyviewed_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_lastpolicyviewed_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_lastpolicyviewed_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_lastpolicyviewed_UserCredentials", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Licensee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Licensee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Licensee object.
        /// </summary>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        public static Licensee CreateLicensee(global::System.Guid licenseeId)
        {
            Licensee licensee = new Licensee();
            licensee.LicenseeId = licenseeId;
            return licensee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                if (_LicenseeId != value)
                {
                    OnLicenseeIdChanging(value);
                    ReportPropertyChanging("LicenseeId");
                    _LicenseeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseeId");
                    OnLicenseeIdChanged();
                }
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicenseStatusId
        {
            get
            {
                return _LicenseStatusId;
            }
            set
            {
                OnLicenseStatusIdChanging(value);
                ReportPropertyChanging("LicenseStatusId");
                _LicenseStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseStatusId");
                OnLicenseStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LicenseStatusId;
        partial void OnLicenseStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnLicenseStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactFirst
        {
            get
            {
                return _ContactFirst;
            }
            set
            {
                OnContactFirstChanging(value);
                ReportPropertyChanging("ContactFirst");
                _ContactFirst = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactFirst");
                OnContactFirstChanged();
            }
        }
        private global::System.String _ContactFirst;
        partial void OnContactFirstChanging(global::System.String value);
        partial void OnContactFirstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactLast
        {
            get
            {
                return _ContactLast;
            }
            set
            {
                OnContactLastChanging(value);
                ReportPropertyChanging("ContactLast");
                _ContactLast = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactLast");
                OnContactLastChanged();
            }
        }
        private global::System.String _ContactLast;
        partial void OnContactLastChanging(global::System.String value);
        partial void OnContactLastChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ZipCode;
        partial void OnZipCodeChanging(Nullable<global::System.Int64> value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicensePaymentModeId
        {
            get
            {
                return _LicensePaymentModeId;
            }
            set
            {
                OnLicensePaymentModeIdChanging(value);
                ReportPropertyChanging("LicensePaymentModeId");
                _LicensePaymentModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicensePaymentModeId");
                OnLicensePaymentModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LicensePaymentModeId;
        partial void OnLicensePaymentModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnLicensePaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountCode
        {
            get
            {
                return _AccountCode;
            }
            set
            {
                OnAccountCodeChanging(value);
                ReportPropertyChanging("AccountCode");
                _AccountCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountCode");
                OnAccountCodeChanged();
            }
        }
        private global::System.String _AccountCode;
        partial void OnAccountCodeChanging(global::System.String value);
        partial void OnAccountCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseeSource
        {
            get
            {
                return _LicenseeSource;
            }
            set
            {
                OnLicenseeSourceChanging(value);
                ReportPropertyChanging("LicenseeSource");
                _LicenseeSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseeSource");
                OnLicenseeSourceChanged();
            }
        }
        private global::System.String _LicenseeSource;
        partial void OnLicenseeSourceChanging(global::System.String value);
        partial void OnLicenseeSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Commissionable
        {
            get
            {
                return _Commissionable;
            }
            set
            {
                OnCommissionableChanging(value);
                ReportPropertyChanging("Commissionable");
                _Commissionable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commissionable");
                OnCommissionableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Commissionable;
        partial void OnCommissionableChanging(Nullable<global::System.Boolean> value);
        partial void OnCommissionableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackDateDefault
        {
            get
            {
                return _TrackDateDefault;
            }
            set
            {
                OnTrackDateDefaultChanging(value);
                ReportPropertyChanging("TrackDateDefault");
                _TrackDateDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackDateDefault");
                OnTrackDateDefaultChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackDateDefault;
        partial void OnTrackDateDefaultChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackDateDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private Nullable<global::System.Double> _TaxRate;
        partial void OnTaxRateChanging(Nullable<global::System.Double> value);
        partial void OnTaxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CutOffDay1
        {
            get
            {
                return _CutOffDay1;
            }
            set
            {
                OnCutOffDay1Changing(value);
                ReportPropertyChanging("CutOffDay1");
                _CutOffDay1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CutOffDay1");
                OnCutOffDay1Changed();
            }
        }
        private Nullable<global::System.Int32> _CutOffDay1;
        partial void OnCutOffDay1Changing(Nullable<global::System.Int32> value);
        partial void OnCutOffDay1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CutOffDay2
        {
            get
            {
                return _CutOffDay2;
            }
            set
            {
                OnCutOffDay2Changing(value);
                ReportPropertyChanging("CutOffDay2");
                _CutOffDay2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CutOffDay2");
                OnCutOffDay2Changed();
            }
        }
        private Nullable<global::System.Int32> _CutOffDay2;
        partial void OnCutOffDay2Changing(Nullable<global::System.Int32> value);
        partial void OnCutOffDay2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpload
        {
            get
            {
                return _LastUpload;
            }
            set
            {
                OnLastUploadChanging(value);
                ReportPropertyChanging("LastUpload");
                _LastUpload = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpload");
                OnLastUploadChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpload;
        partial void OnLastUploadChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUploadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DueBalance
        {
            get
            {
                return _DueBalance;
            }
            set
            {
                OnDueBalanceChanging(value);
                ReportPropertyChanging("DueBalance");
                _DueBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueBalance");
                OnDueBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _DueBalance;
        partial void OnDueBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnDueBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsClientEnable
        {
            get
            {
                return _IsClientEnable;
            }
            set
            {
                OnIsClientEnableChanging(value);
                ReportPropertyChanging("IsClientEnable");
                _IsClientEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsClientEnable");
                OnIsClientEnableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsClientEnable;
        partial void OnIsClientEnableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsClientEnableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_Licensees", "Batches")]
        public EntityCollection<Batch> Batches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("Model.FK_Batches_Licensees", "Batches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("Model.FK_Batches_Licensees", "Batches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarriers_Licensees", "Carriers")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("Model.FK_PayorCarriers_Licensees", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("Model.FK_PayorCarriers_Licensees", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Clients_Licensees", "Clients")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("Model.FK_Clients_Licensees", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("Model.FK_Clients_Licensees", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverages_Licensees", "Coverages")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("Model.FK_CarrierCoverages_Licensees", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("Model.FK_CarrierCoverages_Licensees", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Invoices_Licensees", "Invoices")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("Model.FK_Invoices_Licensees", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("Model.FK_Invoices_Licensees", "Invoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Journals_Licensees", "Journals")]
        public EntityCollection<Journal> Journals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("Model.FK_Journals_Licensees", "Journals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("Model.FK_Journals_Licensees", "Journals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseeNotes_Licensees", "LicenseeNotes")]
        public EntityCollection<LicenseeNote> LicenseeNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseeNote>("Model.FK_LicenseeNotes_Licensees", "LicenseeNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseeNote>("Model.FK_LicenseeNotes_Licensees", "LicenseeNotes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseePayors_Licensees", "LicenseePayors")]
        public EntityCollection<LicenseePayor> LicenseePayors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseePayor>("Model.FK_LicenseePayors_Licensees", "LicenseePayors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseePayor>("Model.FK_LicenseePayors_Licensees", "LicenseePayors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Licensees_MasterLicensePaymentModes", "MasterLicensePaymentModes")]
        public MasterLicensePaymentMode MasterLicensePaymentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLicensePaymentMode>("Model.FK_Licensees_MasterLicensePaymentModes", "MasterLicensePaymentModes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLicensePaymentMode>("Model.FK_Licensees_MasterLicensePaymentModes", "MasterLicensePaymentModes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterLicensePaymentMode> MasterLicensePaymentModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLicensePaymentMode>("Model.FK_Licensees_MasterLicensePaymentModes", "MasterLicensePaymentModes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterLicensePaymentMode>("Model.FK_Licensees_MasterLicensePaymentModes", "MasterLicensePaymentModes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Licensees_MasterLicenseStatus", "MasterLicenseStatus")]
        public MasterLicenseStatu MasterLicenseStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLicenseStatu>("Model.FK_Licensees_MasterLicenseStatus", "MasterLicenseStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLicenseStatu>("Model.FK_Licensees_MasterLicenseStatus", "MasterLicenseStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterLicenseStatu> MasterLicenseStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLicenseStatu>("Model.FK_Licensees_MasterLicenseStatus", "MasterLicenseStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterLicenseStatu>("Model.FK_Licensees_MasterLicenseStatus", "MasterLicenseStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseeServices_Licensees", "LicenseeServices")]
        public EntityCollection<LicenseeService> LicenseeServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseeService>("Model.FK_LicenseeServices_Licensees", "LicenseeServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseeService>("Model.FK_LicenseeServices_Licensees", "LicenseeServices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_Licensees", "Payors")]
        public EntityCollection<Payor> Payors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payor>("Model.FK_Payors_Licensees", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payor>("Model.FK_Payors_Licensees", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSiteLoginInfo_Licensees", "PayorSiteLoginInfo")]
        public EntityCollection<PayorSiteLoginInfo> PayorSiteLoginInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorSiteLoginInfo>("Model.FK_PayorSiteLoginInfo_Licensees", "PayorSiteLoginInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorSiteLoginInfo>("Model.FK_PayorSiteLoginInfo_Licensees", "PayorSiteLoginInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSource_Licensees", "PayorSource")]
        public EntityCollection<PayorSource> PayorSources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorSource>("Model.FK_PayorSource_Licensees", "PayorSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorSource>("Model.FK_PayorSource_Licensees", "PayorSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Licensees1", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_Licensees1", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_Licensees1", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Licensees1", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Licensees1", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Licensees1", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_Licensees", "ServiceLines")]
        public EntityCollection<ServiceLine> ServiceLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceLine>("Model.FK_ServiceLines_Licensees", "ServiceLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceLine>("Model.FK_ServiceLines_Licensees", "ServiceLines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserCredentials_Licensees", "UserCredentials")]
        public EntityCollection<UserCredential> UserCredentials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCredential>("Model.FK_UserCredentials_Licensees", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCredential>("Model.FK_UserCredentials_Licensees", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LicenseeNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicenseeNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicenseeNote object.
        /// </summary>
        /// <param name="licenseeNoteId">Initial value of the LicenseeNoteId property.</param>
        public static LicenseeNote CreateLicenseeNote(global::System.Guid licenseeNoteId)
        {
            LicenseeNote licenseeNote = new LicenseeNote();
            licenseeNote.LicenseeNoteId = licenseeNoteId;
            return licenseeNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeNoteId
        {
            get
            {
                return _LicenseeNoteId;
            }
            set
            {
                if (_LicenseeNoteId != value)
                {
                    OnLicenseeNoteIdChanging(value);
                    ReportPropertyChanging("LicenseeNoteId");
                    _LicenseeNoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseeNoteId");
                    OnLicenseeNoteIdChanged();
                }
            }
        }
        private global::System.Guid _LicenseeNoteId;
        partial void OnLicenseeNoteIdChanging(global::System.Guid value);
        partial void OnLicenseeNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseeNotes_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseeNotes_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseeNotes_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseeNotes_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_LicenseeNotes_Licensees", "Licensees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LicenseePayor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicenseePayor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicenseePayor object.
        /// </summary>
        /// <param name="licenseePayorId">Initial value of the LicenseePayorId property.</param>
        public static LicenseePayor CreateLicenseePayor(global::System.Guid licenseePayorId)
        {
            LicenseePayor licenseePayor = new LicenseePayor();
            licenseePayor.LicenseePayorId = licenseePayorId;
            return licenseePayor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseePayorId
        {
            get
            {
                return _LicenseePayorId;
            }
            set
            {
                if (_LicenseePayorId != value)
                {
                    OnLicenseePayorIdChanging(value);
                    ReportPropertyChanging("LicenseePayorId");
                    _LicenseePayorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseePayorId");
                    OnLicenseePayorIdChanged();
                }
            }
        }
        private global::System.Guid _LicenseePayorId;
        partial void OnLicenseePayorIdChanging(global::System.Guid value);
        partial void OnLicenseePayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceTypeId
        {
            get
            {
                return _SourceTypeId;
            }
            set
            {
                OnSourceTypeIdChanging(value);
                ReportPropertyChanging("SourceTypeId");
                _SourceTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceTypeId");
                OnSourceTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceTypeId;
        partial void OnSourceTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseePayors_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseePayors_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseePayors_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseePayors_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_LicenseePayors_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseePayors_MasterSourceTypes", "MasterSourceTypes")]
        public MasterSourceType MasterSourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSourceType>("Model.FK_LicenseePayors_MasterSourceTypes", "MasterSourceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSourceType>("Model.FK_LicenseePayors_MasterSourceTypes", "MasterSourceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSourceType> MasterSourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSourceType>("Model.FK_LicenseePayors_MasterSourceTypes", "MasterSourceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSourceType>("Model.FK_LicenseePayors_MasterSourceTypes", "MasterSourceTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseePayors_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_LicenseePayors_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_LicenseePayors_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_LicenseePayors_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_LicenseePayors_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LicenseePayorSiteInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicenseePayorSiteInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicenseePayorSiteInfo object.
        /// </summary>
        /// <param name="licenseePayorSiteInfoId">Initial value of the LicenseePayorSiteInfoId property.</param>
        public static LicenseePayorSiteInfo CreateLicenseePayorSiteInfo(global::System.Guid licenseePayorSiteInfoId)
        {
            LicenseePayorSiteInfo licenseePayorSiteInfo = new LicenseePayorSiteInfo();
            licenseePayorSiteInfo.LicenseePayorSiteInfoId = licenseePayorSiteInfoId;
            return licenseePayorSiteInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseePayorSiteInfoId
        {
            get
            {
                return _LicenseePayorSiteInfoId;
            }
            set
            {
                if (_LicenseePayorSiteInfoId != value)
                {
                    OnLicenseePayorSiteInfoIdChanging(value);
                    ReportPropertyChanging("LicenseePayorSiteInfoId");
                    _LicenseePayorSiteInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseePayorSiteInfoId");
                    OnLicenseePayorSiteInfoIdChanged();
                }
            }
        }
        private global::System.Guid _LicenseePayorSiteInfoId;
        partial void OnLicenseePayorSiteInfoIdChanging(global::System.Guid value);
        partial void OnLicenseePayorSiteInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseePayorId
        {
            get
            {
                return _LicenseePayorId;
            }
            set
            {
                OnLicenseePayorIdChanging(value);
                ReportPropertyChanging("LicenseePayorId");
                _LicenseePayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseePayorId");
                OnLicenseePayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseePayorId;
        partial void OnLicenseePayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseePayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPassword
        {
            get
            {
                return _UserPassword;
            }
            set
            {
                OnUserPasswordChanging(value);
                ReportPropertyChanging("UserPassword");
                _UserPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPassword");
                OnUserPasswordChanged();
            }
        }
        private global::System.String _UserPassword;
        partial void OnUserPasswordChanging(global::System.String value);
        partial void OnUserPasswordChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LicenseeService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicenseeService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicenseeService object.
        /// </summary>
        /// <param name="licenseeServiceId">Initial value of the LicenseeServiceId property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        public static LicenseeService CreateLicenseeService(global::System.Guid licenseeServiceId, global::System.Guid licenseeId, global::System.Int32 serviceId)
        {
            LicenseeService licenseeService = new LicenseeService();
            licenseeService.LicenseeServiceId = licenseeServiceId;
            licenseeService.LicenseeId = licenseeId;
            licenseeService.ServiceId = serviceId;
            return licenseeService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeServiceId
        {
            get
            {
                return _LicenseeServiceId;
            }
            set
            {
                if (_LicenseeServiceId != value)
                {
                    OnLicenseeServiceIdChanging(value);
                    ReportPropertyChanging("LicenseeServiceId");
                    _LicenseeServiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseeServiceId");
                    OnLicenseeServiceIdChanged();
                }
            }
        }
        private global::System.Guid _LicenseeServiceId;
        partial void OnLicenseeServiceIdChanging(global::System.Guid value);
        partial void OnLicenseeServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.Int32 _ServiceId;
        partial void OnServiceIdChanging(global::System.Int32 value);
        partial void OnServiceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseeServices_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseeServices_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseeServices_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_LicenseeServices_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_LicenseeServices_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseeServices_MasterServices", "MasterServices")]
        public MasterService MasterService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_LicenseeServices_MasterServices", "MasterServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_LicenseeServices_MasterServices", "MasterServices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterService> MasterServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_LicenseeServices_MasterServices", "MasterServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterService>("Model.FK_LicenseeServices_MasterServices", "MasterServices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LinkedUserList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkedUserList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkedUserList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LinkedUserList CreateLinkedUserList(global::System.Int32 id)
        {
            LinkedUserList linkedUserList = new LinkedUserList();
            linkedUserList.ID = id;
            return linkedUserList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LinkedUserID
        {
            get
            {
                return _LinkedUserID;
            }
            set
            {
                OnLinkedUserIDChanging(value);
                ReportPropertyChanging("LinkedUserID");
                _LinkedUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkedUserID");
                OnLinkedUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LinkedUserID;
        partial void OnLinkedUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnLinkedUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ManagementReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementReport object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="licenceID">Initial value of the LicenceID property.</param>
        /// <param name="reportOn">Initial value of the ReportOn property.</param>
        public static ManagementReport CreateManagementReport(global::System.Guid reportId, global::System.Guid licenceID, global::System.DateTime reportOn)
        {
            ManagementReport managementReport = new ManagementReport();
            managementReport.ReportId = reportId;
            managementReport.LicenceID = licenceID;
            managementReport.ReportOn = reportOn;
            return managementReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenceID
        {
            get
            {
                return _LicenceID;
            }
            set
            {
                OnLicenceIDChanging(value);
                ReportPropertyChanging("LicenceID");
                _LicenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenceID");
                OnLicenceIDChanged();
            }
        }
        private global::System.Guid _LicenceID;
        partial void OnLicenceIDChanging(global::System.Guid value);
        partial void OnLicenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carrier
        {
            get
            {
                return _Carrier;
            }
            set
            {
                OnCarrierChanging(value);
                ReportPropertyChanging("Carrier");
                _Carrier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Carrier");
                OnCarrierChanged();
            }
        }
        private global::System.String _Carrier;
        partial void OnCarrierChanging(global::System.String value);
        partial void OnCarrierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private global::System.String _Product;
        partial void OnProductChanging(global::System.String value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payee
        {
            get
            {
                return _Payee;
            }
            set
            {
                OnPayeeChanging(value);
                ReportPropertyChanging("Payee");
                _Payee = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payee");
                OnPayeeChanged();
            }
        }
        private global::System.String _Payee;
        partial void OnPayeeChanging(global::System.String value);
        partial void OnPayeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reports
        {
            get
            {
                return _Reports;
            }
            set
            {
                OnReportsChanging(value);
                ReportPropertyChanging("Reports");
                _Reports = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reports");
                OnReportsChanged();
            }
        }
        private global::System.String _Reports;
        partial void OnReportsChanging(global::System.String value);
        partial void OnReportsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderBy
        {
            get
            {
                return _OrderBy;
            }
            set
            {
                OnOrderByChanging(value);
                ReportPropertyChanging("OrderBy");
                _OrderBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderBy");
                OnOrderByChanged();
            }
        }
        private global::System.String _OrderBy;
        partial void OnOrderByChanging(global::System.String value);
        partial void OnOrderByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyType;
        partial void OnPolicyTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyMode
        {
            get
            {
                return _PolicyMode;
            }
            set
            {
                OnPolicyModeChanging(value);
                ReportPropertyChanging("PolicyMode");
                _PolicyMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyMode");
                OnPolicyModeChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyMode;
        partial void OnPolicyModeChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TrackPayment
        {
            get
            {
                return _TrackPayment;
            }
            set
            {
                OnTrackPaymentChanging(value);
                ReportPropertyChanging("TrackPayment");
                _TrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackPayment");
                OnTrackPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _TrackPayment;
        partial void OnTrackPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnTrackPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveFrom
        {
            get
            {
                return _EffectiveFrom;
            }
            set
            {
                OnEffectiveFromChanging(value);
                ReportPropertyChanging("EffectiveFrom");
                _EffectiveFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveFrom");
                OnEffectiveFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveFrom;
        partial void OnEffectiveFromChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveTo
        {
            get
            {
                return _EffectiveTo;
            }
            set
            {
                OnEffectiveToChanging(value);
                ReportPropertyChanging("EffectiveTo");
                _EffectiveTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveTo");
                OnEffectiveToChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveTo;
        partial void OnEffectiveToChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFrom
        {
            get
            {
                return _TrackFrom;
            }
            set
            {
                OnTrackFromChanging(value);
                ReportPropertyChanging("TrackFrom");
                _TrackFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFrom");
                OnTrackFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFrom;
        partial void OnTrackFromChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackTo
        {
            get
            {
                return _TrackTo;
            }
            set
            {
                OnTrackToChanging(value);
                ReportPropertyChanging("TrackTo");
                _TrackTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackTo");
                OnTrackToChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackTo;
        partial void OnTrackToChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TermFrom
        {
            get
            {
                return _TermFrom;
            }
            set
            {
                OnTermFromChanging(value);
                ReportPropertyChanging("TermFrom");
                _TermFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermFrom");
                OnTermFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _TermFrom;
        partial void OnTermFromChanging(Nullable<global::System.DateTime> value);
        partial void OnTermFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TermTo
        {
            get
            {
                return _TermTo;
            }
            set
            {
                OnTermToChanging(value);
                ReportPropertyChanging("TermTo");
                _TermTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermTo");
                OnTermToChanged();
            }
        }
        private Nullable<global::System.DateTime> _TermTo;
        partial void OnTermToChanging(Nullable<global::System.DateTime> value);
        partial void OnTermToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TermReason
        {
            get
            {
                return _TermReason;
            }
            set
            {
                OnTermReasonChanging(value);
                ReportPropertyChanging("TermReason");
                _TermReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermReason");
                OnTermReasonChanged();
            }
        }
        private Nullable<global::System.Int32> _TermReason;
        partial void OnTermReasonChanging(Nullable<global::System.Int32> value);
        partial void OnTermReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PremiumFrom
        {
            get
            {
                return _PremiumFrom;
            }
            set
            {
                OnPremiumFromChanging(value);
                ReportPropertyChanging("PremiumFrom");
                _PremiumFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PremiumFrom");
                OnPremiumFromChanged();
            }
        }
        private Nullable<global::System.Decimal> _PremiumFrom;
        partial void OnPremiumFromChanging(Nullable<global::System.Decimal> value);
        partial void OnPremiumFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PremiumTo
        {
            get
            {
                return _PremiumTo;
            }
            set
            {
                OnPremiumToChanging(value);
                ReportPropertyChanging("PremiumTo");
                _PremiumTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PremiumTo");
                OnPremiumToChanged();
            }
        }
        private Nullable<global::System.Decimal> _PremiumTo;
        partial void OnPremiumToChanging(Nullable<global::System.Decimal> value);
        partial void OnPremiumToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EnrolledFrom
        {
            get
            {
                return _EnrolledFrom;
            }
            set
            {
                OnEnrolledFromChanging(value);
                ReportPropertyChanging("EnrolledFrom");
                _EnrolledFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrolledFrom");
                OnEnrolledFromChanged();
            }
        }
        private Nullable<global::System.Int32> _EnrolledFrom;
        partial void OnEnrolledFromChanging(Nullable<global::System.Int32> value);
        partial void OnEnrolledFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EnrolledTo
        {
            get
            {
                return _EnrolledTo;
            }
            set
            {
                OnEnrolledToChanging(value);
                ReportPropertyChanging("EnrolledTo");
                _EnrolledTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrolledTo");
                OnEnrolledToChanged();
            }
        }
        private Nullable<global::System.Int32> _EnrolledTo;
        partial void OnEnrolledToChanging(Nullable<global::System.Int32> value);
        partial void OnEnrolledToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EligibleFrom
        {
            get
            {
                return _EligibleFrom;
            }
            set
            {
                OnEligibleFromChanging(value);
                ReportPropertyChanging("EligibleFrom");
                _EligibleFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EligibleFrom");
                OnEligibleFromChanged();
            }
        }
        private Nullable<global::System.Int32> _EligibleFrom;
        partial void OnEligibleFromChanging(Nullable<global::System.Int32> value);
        partial void OnEligibleFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EligibleTo
        {
            get
            {
                return _EligibleTo;
            }
            set
            {
                OnEligibleToChanging(value);
                ReportPropertyChanging("EligibleTo");
                _EligibleTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EligibleTo");
                OnEligibleToChanged();
            }
        }
        private Nullable<global::System.Int32> _EligibleTo;
        partial void OnEligibleToChanging(Nullable<global::System.Int32> value);
        partial void OnEligibleToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportOn
        {
            get
            {
                return _ReportOn;
            }
            set
            {
                OnReportOnChanging(value);
                ReportPropertyChanging("ReportOn");
                _ReportOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportOn");
                OnReportOnChanged();
            }
        }
        private global::System.DateTime _ReportOn;
        partial void OnReportOnChanging(global::System.DateTime value);
        partial void OnReportOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceFrom
        {
            get
            {
                return _InvoiceFrom;
            }
            set
            {
                OnInvoiceFromChanging(value);
                ReportPropertyChanging("InvoiceFrom");
                _InvoiceFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceFrom");
                OnInvoiceFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceFrom;
        partial void OnInvoiceFromChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceTo
        {
            get
            {
                return _InvoiceTo;
            }
            set
            {
                OnInvoiceToChanging(value);
                ReportPropertyChanging("InvoiceTo");
                _InvoiceTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceTo");
                OnInvoiceToChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceTo;
        partial void OnInvoiceToChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EffectiveMonth
        {
            get
            {
                return _EffectiveMonth;
            }
            set
            {
                OnEffectiveMonthChanging(value);
                ReportPropertyChanging("EffectiveMonth");
                _EffectiveMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveMonth");
                OnEffectiveMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _EffectiveMonth;
        partial void OnEffectiveMonthChanging(Nullable<global::System.Int32> value);
        partial void OnEffectiveMonthChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterAccessRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterAccessRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterAccessRight object.
        /// </summary>
        /// <param name="accessRightId">Initial value of the AccessRightId property.</param>
        public static MasterAccessRight CreateMasterAccessRight(global::System.Int32 accessRightId)
        {
            MasterAccessRight masterAccessRight = new MasterAccessRight();
            masterAccessRight.AccessRightId = accessRightId;
            return masterAccessRight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessRightId
        {
            get
            {
                return _AccessRightId;
            }
            set
            {
                if (_AccessRightId != value)
                {
                    OnAccessRightIdChanging(value);
                    ReportPropertyChanging("AccessRightId");
                    _AccessRightId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccessRightId");
                    OnAccessRightIdChanged();
                }
            }
        }
        private global::System.Int32 _AccessRightId;
        partial void OnAccessRightIdChanging(global::System.Int32 value);
        partial void OnAccessRightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserPermissions_MasterAccessRights1", "UserPermissions")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("Model.FK_UserPermissions_MasterAccessRights1", "UserPermissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("Model.FK_UserPermissions_MasterAccessRights1", "UserPermissions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterAlertType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterAlertType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterAlertType object.
        /// </summary>
        /// <param name="alertTypeId">Initial value of the AlertTypeId property.</param>
        public static MasterAlertType CreateMasterAlertType(global::System.Int32 alertTypeId)
        {
            MasterAlertType masterAlertType = new MasterAlertType();
            masterAlertType.AlertTypeId = alertTypeId;
            return masterAlertType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertTypeId
        {
            get
            {
                return _AlertTypeId;
            }
            set
            {
                if (_AlertTypeId != value)
                {
                    OnAlertTypeIdChanging(value);
                    ReportPropertyChanging("AlertTypeId");
                    _AlertTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertTypeId");
                    OnAlertTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AlertTypeId;
        partial void OnAlertTypeIdChanging(global::System.Int32 value);
        partial void OnAlertTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterBasicIncomingSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterBasicIncomingSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterBasicIncomingSchedule object.
        /// </summary>
        /// <param name="scheduleId">Initial value of the ScheduleId property.</param>
        public static MasterBasicIncomingSchedule CreateMasterBasicIncomingSchedule(global::System.Int32 scheduleId)
        {
            MasterBasicIncomingSchedule masterBasicIncomingSchedule = new MasterBasicIncomingSchedule();
            masterBasicIncomingSchedule.ScheduleId = scheduleId;
            return masterBasicIncomingSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleId
        {
            get
            {
                return _ScheduleId;
            }
            set
            {
                if (_ScheduleId != value)
                {
                    OnScheduleIdChanging(value);
                    ReportPropertyChanging("ScheduleId");
                    _ScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleId");
                    OnScheduleIdChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleId;
        partial void OnScheduleIdChanging(global::System.Int32 value);
        partial void OnScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "PolicyIncomingSchedules")]
        public EntityCollection<PolicyIncomingSchedule> PolicyIncomingSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyIncomingSchedule>("Model.FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "PolicyIncomingSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyIncomingSchedule>("Model.FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "PolicyIncomingSchedules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterBasicOutgoingSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterBasicOutgoingSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterBasicOutgoingSchedule object.
        /// </summary>
        /// <param name="scheduleId">Initial value of the ScheduleId property.</param>
        public static MasterBasicOutgoingSchedule CreateMasterBasicOutgoingSchedule(global::System.Int32 scheduleId)
        {
            MasterBasicOutgoingSchedule masterBasicOutgoingSchedule = new MasterBasicOutgoingSchedule();
            masterBasicOutgoingSchedule.ScheduleId = scheduleId;
            return masterBasicOutgoingSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleId
        {
            get
            {
                return _ScheduleId;
            }
            set
            {
                if (_ScheduleId != value)
                {
                    OnScheduleIdChanging(value);
                    ReportPropertyChanging("ScheduleId");
                    _ScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleId");
                    OnScheduleIdChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleId;
        partial void OnScheduleIdChanging(global::System.Int32 value);
        partial void OnScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "PolicyOutgoingSchedules")]
        public EntityCollection<PolicyOutgoingSchedule> PolicyOutgoingSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "PolicyOutgoingSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "PolicyOutgoingSchedules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterBatchDownloadStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterBatchDownloadStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterBatchDownloadStatu object.
        /// </summary>
        /// <param name="batchDownloadStatusId">Initial value of the BatchDownloadStatusId property.</param>
        public static MasterBatchDownloadStatu CreateMasterBatchDownloadStatu(global::System.Int32 batchDownloadStatusId)
        {
            MasterBatchDownloadStatu masterBatchDownloadStatu = new MasterBatchDownloadStatu();
            masterBatchDownloadStatu.BatchDownloadStatusId = batchDownloadStatusId;
            return masterBatchDownloadStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchDownloadStatusId
        {
            get
            {
                return _BatchDownloadStatusId;
            }
            set
            {
                if (_BatchDownloadStatusId != value)
                {
                    OnBatchDownloadStatusIdChanging(value);
                    ReportPropertyChanging("BatchDownloadStatusId");
                    _BatchDownloadStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchDownloadStatusId");
                    OnBatchDownloadStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _BatchDownloadStatusId;
        partial void OnBatchDownloadStatusIdChanging(global::System.Int32 value);
        partial void OnBatchDownloadStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterBatchEntryStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterBatchEntryStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterBatchEntryStatu object.
        /// </summary>
        /// <param name="batchEntryStatusId">Initial value of the BatchEntryStatusId property.</param>
        public static MasterBatchEntryStatu CreateMasterBatchEntryStatu(global::System.Int32 batchEntryStatusId)
        {
            MasterBatchEntryStatu masterBatchEntryStatu = new MasterBatchEntryStatu();
            masterBatchEntryStatu.BatchEntryStatusId = batchEntryStatusId;
            return masterBatchEntryStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchEntryStatusId
        {
            get
            {
                return _BatchEntryStatusId;
            }
            set
            {
                if (_BatchEntryStatusId != value)
                {
                    OnBatchEntryStatusIdChanging(value);
                    ReportPropertyChanging("BatchEntryStatusId");
                    _BatchEntryStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchEntryStatusId");
                    OnBatchEntryStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _BatchEntryStatusId;
        partial void OnBatchEntryStatusIdChanging(global::System.Int32 value);
        partial void OnBatchEntryStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_MasterBatchEntryStatus", "Batches")]
        public EntityCollection<Batch> Batches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("Model.FK_Batches_MasterBatchEntryStatus", "Batches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("Model.FK_Batches_MasterBatchEntryStatus", "Batches", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterBatchUploadStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterBatchUploadStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterBatchUploadStatu object.
        /// </summary>
        /// <param name="batchUploadStatusId">Initial value of the BatchUploadStatusId property.</param>
        public static MasterBatchUploadStatu CreateMasterBatchUploadStatu(global::System.Int32 batchUploadStatusId)
        {
            MasterBatchUploadStatu masterBatchUploadStatu = new MasterBatchUploadStatu();
            masterBatchUploadStatu.BatchUploadStatusId = batchUploadStatusId;
            return masterBatchUploadStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchUploadStatusId
        {
            get
            {
                return _BatchUploadStatusId;
            }
            set
            {
                if (_BatchUploadStatusId != value)
                {
                    OnBatchUploadStatusIdChanging(value);
                    ReportPropertyChanging("BatchUploadStatusId");
                    _BatchUploadStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchUploadStatusId");
                    OnBatchUploadStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _BatchUploadStatusId;
        partial void OnBatchUploadStatusIdChanging(global::System.Int32 value);
        partial void OnBatchUploadStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_MasterBatchUploadStatus", "Batches")]
        public EntityCollection<Batch> Batches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("Model.FK_Batches_MasterBatchUploadStatus", "Batches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("Model.FK_Batches_MasterBatchUploadStatus", "Batches", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterBillPaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterBillPaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterBillPaymentType object.
        /// </summary>
        /// <param name="billPaymentTypeId">Initial value of the BillPaymentTypeId property.</param>
        public static MasterBillPaymentType CreateMasterBillPaymentType(global::System.Int32 billPaymentTypeId)
        {
            MasterBillPaymentType masterBillPaymentType = new MasterBillPaymentType();
            masterBillPaymentType.BillPaymentTypeId = billPaymentTypeId;
            return masterBillPaymentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillPaymentTypeId
        {
            get
            {
                return _BillPaymentTypeId;
            }
            set
            {
                if (_BillPaymentTypeId != value)
                {
                    OnBillPaymentTypeIdChanging(value);
                    ReportPropertyChanging("BillPaymentTypeId");
                    _BillPaymentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillPaymentTypeId");
                    OnBillPaymentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _BillPaymentTypeId;
        partial void OnBillPaymentTypeIdChanging(global::System.Int32 value);
        partial void OnBillPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterFileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterFileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterFileType object.
        /// </summary>
        /// <param name="fileTypeId">Initial value of the FileTypeId property.</param>
        public static MasterFileType CreateMasterFileType(global::System.Int32 fileTypeId)
        {
            MasterFileType masterFileType = new MasterFileType();
            masterFileType.FileTypeId = fileTypeId;
            return masterFileType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeId
        {
            get
            {
                return _FileTypeId;
            }
            set
            {
                if (_FileTypeId != value)
                {
                    OnFileTypeIdChanging(value);
                    ReportPropertyChanging("FileTypeId");
                    _FileTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileTypeId");
                    OnFileTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FileTypeId;
        partial void OnFileTypeIdChanging(global::System.Int32 value);
        partial void OnFileTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorDefaults_MasterFileTypes", "GlobalPayorDefaults")]
        public EntityCollection<GlobalPayorDefault> GlobalPayorDefaults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalPayorDefault>("Model.FK_GlobalPayorDefaults_MasterFileTypes", "GlobalPayorDefaults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalPayorDefault>("Model.FK_GlobalPayorDefaults_MasterFileTypes", "GlobalPayorDefaults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterIncomingPaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterIncomingPaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterIncomingPaymentType object.
        /// </summary>
        /// <param name="incomingPaymentTypeId">Initial value of the IncomingPaymentTypeId property.</param>
        public static MasterIncomingPaymentType CreateMasterIncomingPaymentType(global::System.Int32 incomingPaymentTypeId)
        {
            MasterIncomingPaymentType masterIncomingPaymentType = new MasterIncomingPaymentType();
            masterIncomingPaymentType.IncomingPaymentTypeId = incomingPaymentTypeId;
            return masterIncomingPaymentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncomingPaymentTypeId
        {
            get
            {
                return _IncomingPaymentTypeId;
            }
            set
            {
                if (_IncomingPaymentTypeId != value)
                {
                    OnIncomingPaymentTypeIdChanging(value);
                    ReportPropertyChanging("IncomingPaymentTypeId");
                    _IncomingPaymentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncomingPaymentTypeId");
                    OnIncomingPaymentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _IncomingPaymentTypeId;
        partial void OnIncomingPaymentTypeIdChanging(global::System.Int32 value);
        partial void OnIncomingPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_MasterIncomingPaymentTypes", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_MasterIncomingPaymentTypes", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_MasterIncomingPaymentTypes", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterIncomingPaymentTypes", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_MasterIncomingPaymentTypes", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_MasterIncomingPaymentTypes", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterIncomingPaymentTypes", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterIncomingPaymentTypes", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterIncomingPaymentTypes", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "PolicyLearnedField")]
        public EntityCollection<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "PolicyLearnedFieldsHistory")]
        public EntityCollection<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "PolicyLearnedFieldsHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterIssueCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterIssueCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterIssueCategory object.
        /// </summary>
        /// <param name="issueCategoryId">Initial value of the IssueCategoryId property.</param>
        public static MasterIssueCategory CreateMasterIssueCategory(global::System.Int32 issueCategoryId)
        {
            MasterIssueCategory masterIssueCategory = new MasterIssueCategory();
            masterIssueCategory.IssueCategoryId = issueCategoryId;
            return masterIssueCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                if (_IssueCategoryId != value)
                {
                    OnIssueCategoryIdChanging(value);
                    ReportPropertyChanging("IssueCategoryId");
                    _IssueCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueCategoryId");
                    OnIssueCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(global::System.Int32 value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueCategories", "FollowupIssue")]
        public EntityCollection<FollowupIssue> FollowupIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueCategories", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueCategories", "FollowupIssue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterIssueReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterIssueReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterIssueReason object.
        /// </summary>
        /// <param name="issueReasonId">Initial value of the IssueReasonId property.</param>
        public static MasterIssueReason CreateMasterIssueReason(global::System.Int32 issueReasonId)
        {
            MasterIssueReason masterIssueReason = new MasterIssueReason();
            masterIssueReason.IssueReasonId = issueReasonId;
            return masterIssueReason;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                if (_IssueReasonId != value)
                {
                    OnIssueReasonIdChanging(value);
                    ReportPropertyChanging("IssueReasonId");
                    _IssueReasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueReasonId");
                    OnIssueReasonIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueReasonId;
        partial void OnIssueReasonIdChanging(global::System.Int32 value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueReasons", "FollowupIssue")]
        public EntityCollection<FollowupIssue> FollowupIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueReasons", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueReasons", "FollowupIssue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterIssueResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterIssueResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterIssueResult object.
        /// </summary>
        /// <param name="issueResultId">Initial value of the IssueResultId property.</param>
        public static MasterIssueResult CreateMasterIssueResult(global::System.Int32 issueResultId)
        {
            MasterIssueResult masterIssueResult = new MasterIssueResult();
            masterIssueResult.IssueResultId = issueResultId;
            return masterIssueResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                if (_IssueResultId != value)
                {
                    OnIssueResultIdChanging(value);
                    ReportPropertyChanging("IssueResultId");
                    _IssueResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueResultId");
                    OnIssueResultIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueResultId;
        partial void OnIssueResultIdChanging(global::System.Int32 value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueResults", "FollowupIssue")]
        public EntityCollection<FollowupIssue> FollowupIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueResults", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueResults", "FollowupIssue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterIssueStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterIssueStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterIssueStatu object.
        /// </summary>
        /// <param name="issueStatusId">Initial value of the IssueStatusId property.</param>
        public static MasterIssueStatu CreateMasterIssueStatu(global::System.Int32 issueStatusId)
        {
            MasterIssueStatu masterIssueStatu = new MasterIssueStatu();
            masterIssueStatu.IssueStatusId = issueStatusId;
            return masterIssueStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                if (_IssueStatusId != value)
                {
                    OnIssueStatusIdChanging(value);
                    ReportPropertyChanging("IssueStatusId");
                    _IssueStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueStatusId");
                    OnIssueStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueStatusId;
        partial void OnIssueStatusIdChanging(global::System.Int32 value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueStatus", "FollowupIssue")]
        public EntityCollection<FollowupIssue> FollowupIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueStatus", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueStatus", "FollowupIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_MasterIssueStatus1", "FollowupIssue")]
        public EntityCollection<FollowupIssue> FollowupIssues1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueStatus1", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_MasterIssueStatus1", "FollowupIssue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterLicensePaymentMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterLicensePaymentMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterLicensePaymentMode object.
        /// </summary>
        /// <param name="licensePaymentModeId">Initial value of the LicensePaymentModeId property.</param>
        public static MasterLicensePaymentMode CreateMasterLicensePaymentMode(global::System.Int32 licensePaymentModeId)
        {
            MasterLicensePaymentMode masterLicensePaymentMode = new MasterLicensePaymentMode();
            masterLicensePaymentMode.LicensePaymentModeId = licensePaymentModeId;
            return masterLicensePaymentMode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicensePaymentModeId
        {
            get
            {
                return _LicensePaymentModeId;
            }
            set
            {
                if (_LicensePaymentModeId != value)
                {
                    OnLicensePaymentModeIdChanging(value);
                    ReportPropertyChanging("LicensePaymentModeId");
                    _LicensePaymentModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicensePaymentModeId");
                    OnLicensePaymentModeIdChanged();
                }
            }
        }
        private global::System.Int32 _LicensePaymentModeId;
        partial void OnLicensePaymentModeIdChanging(global::System.Int32 value);
        partial void OnLicensePaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Licensees_MasterLicensePaymentModes", "Licensees")]
        public EntityCollection<Licensee> Licensees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Licensee>("Model.FK_Licensees_MasterLicensePaymentModes", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Licensee>("Model.FK_Licensees_MasterLicensePaymentModes", "Licensees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterLicenseStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterLicenseStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterLicenseStatu object.
        /// </summary>
        /// <param name="licenseStatusId">Initial value of the LicenseStatusId property.</param>
        public static MasterLicenseStatu CreateMasterLicenseStatu(global::System.Int32 licenseStatusId)
        {
            MasterLicenseStatu masterLicenseStatu = new MasterLicenseStatu();
            masterLicenseStatu.LicenseStatusId = licenseStatusId;
            return masterLicenseStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicenseStatusId
        {
            get
            {
                return _LicenseStatusId;
            }
            set
            {
                if (_LicenseStatusId != value)
                {
                    OnLicenseStatusIdChanging(value);
                    ReportPropertyChanging("LicenseStatusId");
                    _LicenseStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseStatusId");
                    OnLicenseStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _LicenseStatusId;
        partial void OnLicenseStatusIdChanging(global::System.Int32 value);
        partial void OnLicenseStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Licensees_MasterLicenseStatus", "Licensees")]
        public EntityCollection<Licensee> Licensees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Licensee>("Model.FK_Licensees_MasterLicenseStatus", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Licensee>("Model.FK_Licensees_MasterLicenseStatus", "Licensees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterManagementReportsOrderByType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterManagementReportsOrderByType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterManagementReportsOrderByType object.
        /// </summary>
        /// <param name="mROrderByTypeId">Initial value of the MROrderByTypeId property.</param>
        public static MasterManagementReportsOrderByType CreateMasterManagementReportsOrderByType(global::System.Int32 mROrderByTypeId)
        {
            MasterManagementReportsOrderByType masterManagementReportsOrderByType = new MasterManagementReportsOrderByType();
            masterManagementReportsOrderByType.MROrderByTypeId = mROrderByTypeId;
            return masterManagementReportsOrderByType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MROrderByTypeId
        {
            get
            {
                return _MROrderByTypeId;
            }
            set
            {
                if (_MROrderByTypeId != value)
                {
                    OnMROrderByTypeIdChanging(value);
                    ReportPropertyChanging("MROrderByTypeId");
                    _MROrderByTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MROrderByTypeId");
                    OnMROrderByTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _MROrderByTypeId;
        partial void OnMROrderByTypeIdChanging(global::System.Int32 value);
        partial void OnMROrderByTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterModule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterModule object.
        /// </summary>
        /// <param name="moduleId">Initial value of the ModuleId property.</param>
        public static MasterModule CreateMasterModule(global::System.Int32 moduleId)
        {
            MasterModule masterModule = new MasterModule();
            masterModule.ModuleId = moduleId;
            return masterModule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                if (_ModuleId != value)
                {
                    OnModuleIdChanging(value);
                    ReportPropertyChanging("ModuleId");
                    _ModuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModuleId");
                    OnModuleIdChanged();
                }
            }
        }
        private global::System.Int32 _ModuleId;
        partial void OnModuleIdChanging(global::System.Int32 value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserPermissions_MasterModules1", "UserPermissions")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("Model.FK_UserPermissions_MasterModules1", "UserPermissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("Model.FK_UserPermissions_MasterModules1", "UserPermissions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPasswordHintQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPasswordHintQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPasswordHintQuestion object.
        /// </summary>
        /// <param name="pHQuestionId">Initial value of the PHQuestionId property.</param>
        public static MasterPasswordHintQuestion CreateMasterPasswordHintQuestion(global::System.Int32 pHQuestionId)
        {
            MasterPasswordHintQuestion masterPasswordHintQuestion = new MasterPasswordHintQuestion();
            masterPasswordHintQuestion.PHQuestionId = pHQuestionId;
            return masterPasswordHintQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PHQuestionId
        {
            get
            {
                return _PHQuestionId;
            }
            set
            {
                if (_PHQuestionId != value)
                {
                    OnPHQuestionIdChanging(value);
                    ReportPropertyChanging("PHQuestionId");
                    _PHQuestionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PHQuestionId");
                    OnPHQuestionIdChanged();
                }
            }
        }
        private global::System.Int32 _PHQuestionId;
        partial void OnPHQuestionIdChanging(global::System.Int32 value);
        partial void OnPHQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Qestion
        {
            get
            {
                return _Qestion;
            }
            set
            {
                OnQestionChanging(value);
                ReportPropertyChanging("Qestion");
                _Qestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Qestion");
                OnQestionChanged();
            }
        }
        private global::System.String _Qestion;
        partial void OnQestionChanging(global::System.String value);
        partial void OnQestionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPaymentStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPaymentStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPaymentStatu object.
        /// </summary>
        /// <param name="paymentStatusId">Initial value of the PaymentStatusId property.</param>
        public static MasterPaymentStatu CreateMasterPaymentStatu(global::System.Int32 paymentStatusId)
        {
            MasterPaymentStatu masterPaymentStatu = new MasterPaymentStatu();
            masterPaymentStatu.PaymentStatusId = paymentStatusId;
            return masterPaymentStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentStatusId
        {
            get
            {
                return _PaymentStatusId;
            }
            set
            {
                if (_PaymentStatusId != value)
                {
                    OnPaymentStatusIdChanging(value);
                    ReportPropertyChanging("PaymentStatusId");
                    _PaymentStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentStatusId");
                    OnPaymentStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentStatusId;
        partial void OnPaymentStatusIdChanging(global::System.Int32 value);
        partial void OnPaymentStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorRegion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorRegion object.
        /// </summary>
        /// <param name="payorRegionId">Initial value of the PayorRegionId property.</param>
        public static MasterPayorRegion CreateMasterPayorRegion(global::System.Int32 payorRegionId)
        {
            MasterPayorRegion masterPayorRegion = new MasterPayorRegion();
            masterPayorRegion.PayorRegionId = payorRegionId;
            return masterPayorRegion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayorRegionId
        {
            get
            {
                return _PayorRegionId;
            }
            set
            {
                if (_PayorRegionId != value)
                {
                    OnPayorRegionIdChanging(value);
                    ReportPropertyChanging("PayorRegionId");
                    _PayorRegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorRegionId");
                    OnPayorRegionIdChanged();
                }
            }
        }
        private global::System.Int32 _PayorRegionId;
        partial void OnPayorRegionIdChanging(global::System.Int32 value);
        partial void OnPayorRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions1")]
        public MasterPayorRegion MasterPayorRegions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPayorRegion> MasterPayorRegions1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions")]
        public MasterPayorRegion MasterPayorRegion1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPayorRegion> MasterPayorRegion1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPayorRegion>("Model.FK_MasterPayorRegions_MasterPayorRegions", "MasterPayorRegions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_MasterPayorRegions", "Payors")]
        public EntityCollection<Payor> Payors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payor>("Model.FK_Payors_MasterPayorRegions", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payor>("Model.FK_Payors_MasterPayorRegions", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorSourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorSourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorSourceType object.
        /// </summary>
        /// <param name="sourceTypeId">Initial value of the SourceTypeId property.</param>
        public static MasterPayorSourceType CreateMasterPayorSourceType(global::System.Int32 sourceTypeId)
        {
            MasterPayorSourceType masterPayorSourceType = new MasterPayorSourceType();
            masterPayorSourceType.SourceTypeId = sourceTypeId;
            return masterPayorSourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceTypeId
        {
            get
            {
                return _SourceTypeId;
            }
            set
            {
                if (_SourceTypeId != value)
                {
                    OnSourceTypeIdChanging(value);
                    ReportPropertyChanging("SourceTypeId");
                    _SourceTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceTypeId");
                    OnSourceTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _SourceTypeId;
        partial void OnSourceTypeIdChanging(global::System.Int32 value);
        partial void OnSourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorStatu object.
        /// </summary>
        /// <param name="payorStatusId">Initial value of the PayorStatusId property.</param>
        public static MasterPayorStatu CreateMasterPayorStatu(global::System.Int32 payorStatusId)
        {
            MasterPayorStatu masterPayorStatu = new MasterPayorStatu();
            masterPayorStatu.PayorStatusId = payorStatusId;
            return masterPayorStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayorStatusId
        {
            get
            {
                return _PayorStatusId;
            }
            set
            {
                if (_PayorStatusId != value)
                {
                    OnPayorStatusIdChanging(value);
                    ReportPropertyChanging("PayorStatusId");
                    _PayorStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorStatusId");
                    OnPayorStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _PayorStatusId;
        partial void OnPayorStatusIdChanging(global::System.Int32 value);
        partial void OnPayorStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorToolAvailableField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorToolAvailableField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorToolAvailableField object.
        /// </summary>
        /// <param name="pTAvailableFieldId">Initial value of the PTAvailableFieldId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isDeletable">Initial value of the IsDeletable property.</param>
        public static MasterPayorToolAvailableField CreateMasterPayorToolAvailableField(global::System.Int32 pTAvailableFieldId, global::System.Boolean isDeleted, global::System.Boolean isDeletable)
        {
            MasterPayorToolAvailableField masterPayorToolAvailableField = new MasterPayorToolAvailableField();
            masterPayorToolAvailableField.PTAvailableFieldId = pTAvailableFieldId;
            masterPayorToolAvailableField.IsDeleted = isDeleted;
            masterPayorToolAvailableField.IsDeletable = isDeletable;
            return masterPayorToolAvailableField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PTAvailableFieldId
        {
            get
            {
                return _PTAvailableFieldId;
            }
            set
            {
                if (_PTAvailableFieldId != value)
                {
                    OnPTAvailableFieldIdChanging(value);
                    ReportPropertyChanging("PTAvailableFieldId");
                    _PTAvailableFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PTAvailableFieldId");
                    OnPTAvailableFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _PTAvailableFieldId;
        partial void OnPTAvailableFieldIdChanging(global::System.Int32 value);
        partial void OnPTAvailableFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelOnImage
        {
            get
            {
                return _LabelOnImage;
            }
            set
            {
                OnLabelOnImageChanging(value);
                ReportPropertyChanging("LabelOnImage");
                _LabelOnImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelOnImage");
                OnLabelOnImageChanged();
            }
        }
        private global::System.String _LabelOnImage;
        partial void OnLabelOnImageChanging(global::System.String value);
        partial void OnLabelOnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldStatus
        {
            get
            {
                return _FieldStatus;
            }
            set
            {
                OnFieldStatusChanging(value);
                ReportPropertyChanging("FieldStatus");
                _FieldStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldStatus");
                OnFieldStatusChanged();
            }
        }
        private global::System.String _FieldStatus;
        partial void OnFieldStatusChanging(global::System.String value);
        partial void OnFieldStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldOrder
        {
            get
            {
                return _FieldOrder;
            }
            set
            {
                OnFieldOrderChanging(value);
                ReportPropertyChanging("FieldOrder");
                _FieldOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldOrder");
                OnFieldOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldOrder;
        partial void OnFieldOrderChanging(Nullable<global::System.Int32> value);
        partial void OnFieldOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPartOfPrimary
        {
            get
            {
                return _IsPartOfPrimary;
            }
            set
            {
                OnIsPartOfPrimaryChanging(value);
                ReportPropertyChanging("IsPartOfPrimary");
                _IsPartOfPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPartOfPrimary");
                OnIsPartOfPrimaryChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPartOfPrimary;
        partial void OnIsPartOfPrimaryChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPartOfPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPopulatedIfLinked
        {
            get
            {
                return _IsPopulatedIfLinked;
            }
            set
            {
                OnIsPopulatedIfLinkedChanging(value);
                ReportPropertyChanging("IsPopulatedIfLinked");
                _IsPopulatedIfLinked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPopulatedIfLinked");
                OnIsPopulatedIfLinkedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPopulatedIfLinked;
        partial void OnIsPopulatedIfLinkedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPopulatedIfLinkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTabbedToNextFieldIfLinked
        {
            get
            {
                return _IsTabbedToNextFieldIfLinked;
            }
            set
            {
                OnIsTabbedToNextFieldIfLinkedChanging(value);
                ReportPropertyChanging("IsTabbedToNextFieldIfLinked");
                _IsTabbedToNextFieldIfLinked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTabbedToNextFieldIfLinked");
                OnIsTabbedToNextFieldIfLinkedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTabbedToNextFieldIfLinked;
        partial void OnIsTabbedToNextFieldIfLinkedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTabbedToNextFieldIfLinkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCalculatedField
        {
            get
            {
                return _IsCalculatedField;
            }
            set
            {
                OnIsCalculatedFieldChanging(value);
                ReportPropertyChanging("IsCalculatedField");
                _IsCalculatedField = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCalculatedField");
                OnIsCalculatedFieldChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCalculatedField;
        partial void OnIsCalculatedFieldChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCalculatedFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOverrideOfCalcAllowed
        {
            get
            {
                return _IsOverrideOfCalcAllowed;
            }
            set
            {
                OnIsOverrideOfCalcAllowedChanging(value);
                ReportPropertyChanging("IsOverrideOfCalcAllowed");
                _IsOverrideOfCalcAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOverrideOfCalcAllowed");
                OnIsOverrideOfCalcAllowedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOverrideOfCalcAllowed;
        partial void OnIsOverrideOfCalcAllowedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOverrideOfCalcAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultNumeric
        {
            get
            {
                return _DefaultNumeric;
            }
            set
            {
                OnDefaultNumericChanging(value);
                ReportPropertyChanging("DefaultNumeric");
                _DefaultNumeric = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultNumeric");
                OnDefaultNumericChanged();
            }
        }
        private global::System.String _DefaultNumeric;
        partial void OnDefaultNumericChanging(global::System.String value);
        partial void OnDefaultNumericChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOorBlankAllowed
        {
            get
            {
                return _IsOorBlankAllowed;
            }
            set
            {
                OnIsOorBlankAllowedChanging(value);
                ReportPropertyChanging("IsOorBlankAllowed");
                _IsOorBlankAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOorBlankAllowed");
                OnIsOorBlankAllowedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOorBlankAllowed;
        partial void OnIsOorBlankAllowedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOorBlankAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AllignedDirection
        {
            get
            {
                return _AllignedDirection;
            }
            set
            {
                OnAllignedDirectionChanging(value);
                ReportPropertyChanging("AllignedDirection");
                _AllignedDirection = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AllignedDirection");
                OnAllignedDirectionChanged();
            }
        }
        private global::System.String _AllignedDirection;
        partial void OnAllignedDirectionChanging(global::System.String value);
        partial void OnAllignedDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentIncomingField
        {
            get
            {
                return _EquivalentIncomingField;
            }
            set
            {
                OnEquivalentIncomingFieldChanging(value);
                ReportPropertyChanging("EquivalentIncomingField");
                _EquivalentIncomingField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentIncomingField");
                OnEquivalentIncomingFieldChanged();
            }
        }
        private global::System.String _EquivalentIncomingField;
        partial void OnEquivalentIncomingFieldChanging(global::System.String value);
        partial void OnEquivalentIncomingFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentLearnedField
        {
            get
            {
                return _EquivalentLearnedField;
            }
            set
            {
                OnEquivalentLearnedFieldChanging(value);
                ReportPropertyChanging("EquivalentLearnedField");
                _EquivalentLearnedField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentLearnedField");
                OnEquivalentLearnedFieldChanged();
            }
        }
        private global::System.String _EquivalentLearnedField;
        partial void OnEquivalentLearnedFieldChanging(global::System.String value);
        partial void OnEquivalentLearnedFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentDeuField
        {
            get
            {
                return _EquivalentDeuField;
            }
            set
            {
                OnEquivalentDeuFieldChanging(value);
                ReportPropertyChanging("EquivalentDeuField");
                _EquivalentDeuField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentDeuField");
                OnEquivalentDeuFieldChanged();
            }
        }
        private global::System.String _EquivalentDeuField;
        partial void OnEquivalentDeuFieldChanging(global::System.String value);
        partial void OnEquivalentDeuFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeletable
        {
            get
            {
                return _IsDeletable;
            }
            set
            {
                OnIsDeletableChanging(value);
                ReportPropertyChanging("IsDeletable");
                _IsDeletable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeletable");
                OnIsDeletableChanged();
            }
        }
        private global::System.Boolean _IsDeletable;
        partial void OnIsDeletableChanging(global::System.Boolean value);
        partial void OnIsDeletableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_MasterPayorToolAvailableFields", "PayorToolFields")]
        public EntityCollection<PayorToolField> PayorToolFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_MasterPayorToolAvailableFields", "PayorToolFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_MasterPayorToolAvailableFields", "PayorToolFields", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorToolIncomingField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorToolIncomingField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorToolIncomingField object.
        /// </summary>
        /// <param name="pTIncomingFieldId">Initial value of the PTIncomingFieldId property.</param>
        public static MasterPayorToolIncomingField CreateMasterPayorToolIncomingField(global::System.Int32 pTIncomingFieldId)
        {
            MasterPayorToolIncomingField masterPayorToolIncomingField = new MasterPayorToolIncomingField();
            masterPayorToolIncomingField.PTIncomingFieldId = pTIncomingFieldId;
            return masterPayorToolIncomingField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PTIncomingFieldId
        {
            get
            {
                return _PTIncomingFieldId;
            }
            set
            {
                if (_PTIncomingFieldId != value)
                {
                    OnPTIncomingFieldIdChanging(value);
                    ReportPropertyChanging("PTIncomingFieldId");
                    _PTIncomingFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PTIncomingFieldId");
                    OnPTIncomingFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _PTIncomingFieldId;
        partial void OnPTIncomingFieldIdChanging(global::System.Int32 value);
        partial void OnPTIncomingFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _Type;
        partial void OnTypeChanging(Nullable<global::System.Byte> value);
        partial void OnTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorToolLearnedField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorToolLearnedField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorToolLearnedField object.
        /// </summary>
        /// <param name="pTLearnedFieldId">Initial value of the PTLearnedFieldId property.</param>
        public static MasterPayorToolLearnedField CreateMasterPayorToolLearnedField(global::System.Int32 pTLearnedFieldId)
        {
            MasterPayorToolLearnedField masterPayorToolLearnedField = new MasterPayorToolLearnedField();
            masterPayorToolLearnedField.PTLearnedFieldId = pTLearnedFieldId;
            return masterPayorToolLearnedField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PTLearnedFieldId
        {
            get
            {
                return _PTLearnedFieldId;
            }
            set
            {
                if (_PTLearnedFieldId != value)
                {
                    OnPTLearnedFieldIdChanging(value);
                    ReportPropertyChanging("PTLearnedFieldId");
                    _PTLearnedFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PTLearnedFieldId");
                    OnPTLearnedFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _PTLearnedFieldId;
        partial void OnPTLearnedFieldIdChanging(global::System.Int32 value);
        partial void OnPTLearnedFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _Type;
        partial void OnTypeChanging(Nullable<global::System.Byte> value);
        partial void OnTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorToolMaskFieldType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorToolMaskFieldType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorToolMaskFieldType object.
        /// </summary>
        /// <param name="pTMaskFieldTypeId">Initial value of the PTMaskFieldTypeId property.</param>
        public static MasterPayorToolMaskFieldType CreateMasterPayorToolMaskFieldType(global::System.Int32 pTMaskFieldTypeId)
        {
            MasterPayorToolMaskFieldType masterPayorToolMaskFieldType = new MasterPayorToolMaskFieldType();
            masterPayorToolMaskFieldType.PTMaskFieldTypeId = pTMaskFieldTypeId;
            return masterPayorToolMaskFieldType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PTMaskFieldTypeId
        {
            get
            {
                return _PTMaskFieldTypeId;
            }
            set
            {
                if (_PTMaskFieldTypeId != value)
                {
                    OnPTMaskFieldTypeIdChanging(value);
                    ReportPropertyChanging("PTMaskFieldTypeId");
                    _PTMaskFieldTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PTMaskFieldTypeId");
                    OnPTMaskFieldTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PTMaskFieldTypeId;
        partial void OnPTMaskFieldTypeIdChanging(global::System.Int32 value);
        partial void OnPTMaskFieldTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _Type;
        partial void OnTypeChanging(Nullable<global::System.Byte> value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "PayorToolFields")]
        public EntityCollection<PayorToolField> PayorToolFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "PayorToolFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "PayorToolFields", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPayorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPayorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPayorType object.
        /// </summary>
        /// <param name="payorType">Initial value of the PayorType property.</param>
        public static MasterPayorType CreateMasterPayorType(global::System.Int32 payorType)
        {
            MasterPayorType masterPayorType = new MasterPayorType();
            masterPayorType.PayorType = payorType;
            return masterPayorType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayorType
        {
            get
            {
                return _PayorType;
            }
            set
            {
                if (_PayorType != value)
                {
                    OnPayorTypeChanging(value);
                    ReportPropertyChanging("PayorType");
                    _PayorType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorType");
                    OnPayorTypeChanged();
                }
            }
        }
        private global::System.Int32 _PayorType;
        partial void OnPayorTypeChanging(global::System.Int32 value);
        partial void OnPayorTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPermissionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPermissionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPermissionType object.
        /// </summary>
        /// <param name="permissionTypeId">Initial value of the PermissionTypeId property.</param>
        public static MasterPermissionType CreateMasterPermissionType(global::System.Int32 permissionTypeId)
        {
            MasterPermissionType masterPermissionType = new MasterPermissionType();
            masterPermissionType.PermissionTypeId = permissionTypeId;
            return masterPermissionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionTypeId
        {
            get
            {
                return _PermissionTypeId;
            }
            set
            {
                if (_PermissionTypeId != value)
                {
                    OnPermissionTypeIdChanging(value);
                    ReportPropertyChanging("PermissionTypeId");
                    _PermissionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionTypeId");
                    OnPermissionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PermissionTypeId;
        partial void OnPermissionTypeIdChanging(global::System.Int32 value);
        partial void OnPermissionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPolicyMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPolicyMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPolicyMode object.
        /// </summary>
        /// <param name="policyModeId">Initial value of the PolicyModeId property.</param>
        public static MasterPolicyMode CreateMasterPolicyMode(global::System.Int32 policyModeId)
        {
            MasterPolicyMode masterPolicyMode = new MasterPolicyMode();
            masterPolicyMode.PolicyModeId = policyModeId;
            return masterPolicyMode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                if (_PolicyModeId != value)
                {
                    OnPolicyModeIdChanging(value);
                    ReportPropertyChanging("PolicyModeId");
                    _PolicyModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyModeId");
                    OnPolicyModeIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyModeId;
        partial void OnPolicyModeIdChanging(global::System.Int32 value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_MasterPolicyModes", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_MasterPolicyModes", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_MasterPolicyModes", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterPolicyModes", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_MasterPolicyModes", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_MasterPolicyModes", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterPolicyModes", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterPolicyModes", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterPolicyModes", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_MasterPolicyModes", "PolicyLearnedField")]
        public EntityCollection<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_MasterPolicyModes", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_MasterPolicyModes", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "PolicyLearnedFieldsHistory")]
        public EntityCollection<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "PolicyLearnedFieldsHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPolicyStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPolicyStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPolicyStatu object.
        /// </summary>
        /// <param name="policyStatusId">Initial value of the PolicyStatusId property.</param>
        public static MasterPolicyStatu CreateMasterPolicyStatu(global::System.Int32 policyStatusId)
        {
            MasterPolicyStatu masterPolicyStatu = new MasterPolicyStatu();
            masterPolicyStatu.PolicyStatusId = policyStatusId;
            return masterPolicyStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyStatusId
        {
            get
            {
                return _PolicyStatusId;
            }
            set
            {
                if (_PolicyStatusId != value)
                {
                    OnPolicyStatusIdChanging(value);
                    ReportPropertyChanging("PolicyStatusId");
                    _PolicyStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyStatusId");
                    OnPolicyStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyStatusId;
        partial void OnPolicyStatusIdChanging(global::System.Int32 value);
        partial void OnPolicyStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterPolicyStatus", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_MasterPolicyStatus", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_MasterPolicyStatus", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterPolicyStatus", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterPolicyStatus", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterPolicyStatus", "PoliciesHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPolicyTerminationReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPolicyTerminationReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPolicyTerminationReason object.
        /// </summary>
        /// <param name="pTReasonId">Initial value of the PTReasonId property.</param>
        public static MasterPolicyTerminationReason CreateMasterPolicyTerminationReason(global::System.Int32 pTReasonId)
        {
            MasterPolicyTerminationReason masterPolicyTerminationReason = new MasterPolicyTerminationReason();
            masterPolicyTerminationReason.PTReasonId = pTReasonId;
            return masterPolicyTerminationReason;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PTReasonId
        {
            get
            {
                return _PTReasonId;
            }
            set
            {
                if (_PTReasonId != value)
                {
                    OnPTReasonIdChanging(value);
                    ReportPropertyChanging("PTReasonId");
                    _PTReasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PTReasonId");
                    OnPTReasonIdChanged();
                }
            }
        }
        private global::System.Int32 _PTReasonId;
        partial void OnPTReasonIdChanging(global::System.Int32 value);
        partial void OnPTReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterPolicyTerminationReasons", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_MasterPolicyTerminationReasons", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_MasterPolicyTerminationReasons", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterPolicyTerminationReasons", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterPolicyTerminationReasons", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_MasterPolicyTerminationReasons", "PoliciesHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterPostStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPostStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPostStatu object.
        /// </summary>
        /// <param name="postStatusID">Initial value of the PostStatusID property.</param>
        public static MasterPostStatu CreateMasterPostStatu(global::System.Int32 postStatusID)
        {
            MasterPostStatu masterPostStatu = new MasterPostStatu();
            masterPostStatu.PostStatusID = postStatusID;
            return masterPostStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostStatusID
        {
            get
            {
                return _PostStatusID;
            }
            set
            {
                if (_PostStatusID != value)
                {
                    OnPostStatusIDChanging(value);
                    ReportPropertyChanging("PostStatusID");
                    _PostStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostStatusID");
                    OnPostStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _PostStatusID;
        partial void OnPostStatusIDChanging(global::System.Int32 value);
        partial void OnPostStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_MasterPostStatus", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_MasterPostStatus", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_MasterPostStatus", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_MasterPostStatus", "PolicyPaymentEntries")]
        public EntityCollection<PolicyPaymentEntry> PolicyPaymentEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_MasterPostStatus", "PolicyPaymentEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_MasterPostStatus", "PolicyPaymentEntries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterReportList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterReportList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterReportList object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        public static MasterReportList CreateMasterReportList(global::System.Guid reportId)
        {
            MasterReportList masterReportList = new MasterReportList();
            masterReportList.ReportId = reportId;
            return masterReportList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportCode
        {
            get
            {
                return _ReportCode;
            }
            set
            {
                OnReportCodeChanging(value);
                ReportPropertyChanging("ReportCode");
                _ReportCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportCode");
                OnReportCodeChanged();
            }
        }
        private global::System.String _ReportCode;
        partial void OnReportCodeChanging(global::System.String value);
        partial void OnReportCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportName
        {
            get
            {
                return _ReportName;
            }
            set
            {
                OnReportNameChanging(value);
                ReportPropertyChanging("ReportName");
                _ReportName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportName");
                OnReportNameChanged();
            }
        }
        private global::System.String _ReportName;
        partial void OnReportNameChanging(global::System.String value);
        partial void OnReportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportGroupName
        {
            get
            {
                return _ReportGroupName;
            }
            set
            {
                OnReportGroupNameChanging(value);
                ReportPropertyChanging("ReportGroupName");
                _ReportGroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportGroupName");
                OnReportGroupNameChanged();
            }
        }
        private global::System.String _ReportGroupName;
        partial void OnReportGroupNameChanging(global::System.String value);
        partial void OnReportGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportDescription
        {
            get
            {
                return _ReportDescription;
            }
            set
            {
                OnReportDescriptionChanging(value);
                ReportPropertyChanging("ReportDescription");
                _ReportDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportDescription");
                OnReportDescriptionChanged();
            }
        }
        private global::System.String _ReportDescription;
        partial void OnReportDescriptionChanging(global::System.String value);
        partial void OnReportDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterRole object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static MasterRole CreateMasterRole(global::System.Int32 roleId)
        {
            MasterRole masterRole = new MasterRole();
            masterRole.RoleId = roleId;
            return masterRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserCredentials_MasterRoles", "UserCredentials")]
        public EntityCollection<UserCredential> UserCredentials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCredential>("Model.FK_UserCredentials_MasterRoles", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCredential>("Model.FK_UserCredentials_MasterRoles", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterScheduleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterScheduleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterScheduleType object.
        /// </summary>
        /// <param name="scheduleTypeId">Initial value of the ScheduleTypeId property.</param>
        public static MasterScheduleType CreateMasterScheduleType(global::System.Int32 scheduleTypeId)
        {
            MasterScheduleType masterScheduleType = new MasterScheduleType();
            masterScheduleType.ScheduleTypeId = scheduleTypeId;
            return masterScheduleType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleTypeId
        {
            get
            {
                return _ScheduleTypeId;
            }
            set
            {
                if (_ScheduleTypeId != value)
                {
                    OnScheduleTypeIdChanging(value);
                    ReportPropertyChanging("ScheduleTypeId");
                    _ScheduleTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleTypeId");
                    OnScheduleTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleTypeId;
        partial void OnScheduleTypeIdChanging(global::System.Int32 value);
        partial void OnScheduleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalCoveragesSchedules_MasterScheduleTypes", "GlobalCoveragesSchedules")]
        public EntityCollection<GlobalCoveragesSchedule> GlobalCoveragesSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalCoveragesSchedule>("Model.FK_GlobalCoveragesSchedules_MasterScheduleTypes", "GlobalCoveragesSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalCoveragesSchedule>("Model.FK_GlobalCoveragesSchedules_MasterScheduleTypes", "GlobalCoveragesSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "PolicyIncomingAdvancedSchedules")]
        public EntityCollection<PolicyIncomingAdvancedSchedule> PolicyIncomingAdvancedSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyIncomingAdvancedSchedule>("Model.FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "PolicyIncomingAdvancedSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyIncomingAdvancedSchedule>("Model.FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "PolicyIncomingAdvancedSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "PolicyOutgoingAdvancedSchedules")]
        public EntityCollection<PolicyOutgoingAdvancedSchedule> PolicyOutgoingAdvancedSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingAdvancedSchedule>("Model.FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "PolicyOutgoingAdvancedSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingAdvancedSchedule>("Model.FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "PolicyOutgoingAdvancedSchedules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterService object.
        /// </summary>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        public static MasterService CreateMasterService(global::System.Int32 serviceId)
        {
            MasterService masterService = new MasterService();
            masterService.ServiceId = serviceId;
            return masterService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                if (_ServiceId != value)
                {
                    OnServiceIdChanging(value);
                    ReportPropertyChanging("ServiceId");
                    _ServiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceId");
                    OnServiceIdChanged();
                }
            }
        }
        private global::System.Int32 _ServiceId;
        partial void OnServiceIdChanging(global::System.Int32 value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InvoiceBillingLineDetail_MasterServices", "InvoiceBillingLineDetail")]
        public EntityCollection<InvoiceBillingLineDetail> InvoiceBillingLineDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceBillingLineDetail>("Model.FK_InvoiceBillingLineDetail_MasterServices", "InvoiceBillingLineDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceBillingLineDetail>("Model.FK_InvoiceBillingLineDetail_MasterServices", "InvoiceBillingLineDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseeServices_MasterServices", "LicenseeServices")]
        public EntityCollection<LicenseeService> LicenseeServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseeService>("Model.FK_LicenseeServices_MasterServices", "LicenseeServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseeService>("Model.FK_LicenseeServices_MasterServices", "LicenseeServices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_MasterServices", "ServiceLines")]
        public EntityCollection<ServiceLine> ServiceLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceLine>("Model.FK_ServiceLines_MasterServices", "ServiceLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceLine>("Model.FK_ServiceLines_MasterServices", "ServiceLines", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterServiceChargeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterServiceChargeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterServiceChargeType object.
        /// </summary>
        /// <param name="sCTypeId">Initial value of the SCTypeId property.</param>
        public static MasterServiceChargeType CreateMasterServiceChargeType(global::System.Int32 sCTypeId)
        {
            MasterServiceChargeType masterServiceChargeType = new MasterServiceChargeType();
            masterServiceChargeType.SCTypeId = sCTypeId;
            return masterServiceChargeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SCTypeId
        {
            get
            {
                return _SCTypeId;
            }
            set
            {
                if (_SCTypeId != value)
                {
                    OnSCTypeIdChanging(value);
                    ReportPropertyChanging("SCTypeId");
                    _SCTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SCTypeId");
                    OnSCTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _SCTypeId;
        partial void OnSCTypeIdChanging(global::System.Int32 value);
        partial void OnSCTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "InvoiceBillingLineDetail")]
        public EntityCollection<InvoiceBillingLineDetail> InvoiceBillingLineDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceBillingLineDetail>("Model.FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "InvoiceBillingLineDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceBillingLineDetail>("Model.FK_InvoiceBillingLineDetail_MasterServiceChargeTypes", "InvoiceBillingLineDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_MasterServiceChargeTypes", "ServiceLines")]
        public EntityCollection<ServiceLine> ServiceLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceLine>("Model.FK_ServiceLines_MasterServiceChargeTypes", "ServiceLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceLine>("Model.FK_ServiceLines_MasterServiceChargeTypes", "ServiceLines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_MasterServiceChargeTypes1", "ServiceLines")]
        public EntityCollection<ServiceLine> ServiceLines1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceLine>("Model.FK_ServiceLines_MasterServiceChargeTypes1", "ServiceLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceLine>("Model.FK_ServiceLines_MasterServiceChargeTypes1", "ServiceLines", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterServicePaymentMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterServicePaymentMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterServicePaymentMode object.
        /// </summary>
        /// <param name="sPModeId">Initial value of the SPModeId property.</param>
        public static MasterServicePaymentMode CreateMasterServicePaymentMode(global::System.Int32 sPModeId)
        {
            MasterServicePaymentMode masterServicePaymentMode = new MasterServicePaymentMode();
            masterServicePaymentMode.SPModeId = sPModeId;
            return masterServicePaymentMode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SPModeId
        {
            get
            {
                return _SPModeId;
            }
            set
            {
                if (_SPModeId != value)
                {
                    OnSPModeIdChanging(value);
                    ReportPropertyChanging("SPModeId");
                    _SPModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SPModeId");
                    OnSPModeIdChanged();
                }
            }
        }
        private global::System.Int32 _SPModeId;
        partial void OnSPModeIdChanging(global::System.Int32 value);
        partial void OnSPModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterSourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterSourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterSourceType object.
        /// </summary>
        /// <param name="sourceTypeId">Initial value of the SourceTypeId property.</param>
        public static MasterSourceType CreateMasterSourceType(global::System.Int32 sourceTypeId)
        {
            MasterSourceType masterSourceType = new MasterSourceType();
            masterSourceType.SourceTypeId = sourceTypeId;
            return masterSourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceTypeId
        {
            get
            {
                return _SourceTypeId;
            }
            set
            {
                if (_SourceTypeId != value)
                {
                    OnSourceTypeIdChanging(value);
                    ReportPropertyChanging("SourceTypeId");
                    _SourceTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceTypeId");
                    OnSourceTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _SourceTypeId;
        partial void OnSourceTypeIdChanging(global::System.Int32 value);
        partial void OnSourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseePayors_MasterSourceTypes", "LicenseePayors")]
        public EntityCollection<LicenseePayor> LicenseePayors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseePayor>("Model.FK_LicenseePayors_MasterSourceTypes", "LicenseePayors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseePayor>("Model.FK_LicenseePayors_MasterSourceTypes", "LicenseePayors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_MasterSourceTypes", "Payors")]
        public EntityCollection<Payor> Payors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payor>("Model.FK_Payors_MasterSourceTypes", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payor>("Model.FK_Payors_MasterSourceTypes", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterStatementStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterStatementStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterStatementStatu object.
        /// </summary>
        /// <param name="statementStatusId">Initial value of the StatementStatusId property.</param>
        public static MasterStatementStatu CreateMasterStatementStatu(global::System.Int32 statementStatusId)
        {
            MasterStatementStatu masterStatementStatu = new MasterStatementStatu();
            masterStatementStatu.StatementStatusId = statementStatusId;
            return masterStatementStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatementStatusId
        {
            get
            {
                return _StatementStatusId;
            }
            set
            {
                if (_StatementStatusId != value)
                {
                    OnStatementStatusIdChanging(value);
                    ReportPropertyChanging("StatementStatusId");
                    _StatementStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatementStatusId");
                    OnStatementStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatementStatusId;
        partial void OnStatementStatusIdChanging(global::System.Int32 value);
        partial void OnStatementStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Statements_MasterStatementStatus", "Statement")]
        public EntityCollection<Statement> Statements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statement>("Model.FK_Statements_MasterStatementStatus", "Statement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statement>("Model.FK_Statements_MasterStatementStatus", "Statement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterSystemConstant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterSystemConstant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterSystemConstant object.
        /// </summary>
        /// <param name="systemConstantId">Initial value of the SystemConstantId property.</param>
        public static MasterSystemConstant CreateMasterSystemConstant(global::System.Int32 systemConstantId)
        {
            MasterSystemConstant masterSystemConstant = new MasterSystemConstant();
            masterSystemConstant.SystemConstantId = systemConstantId;
            return masterSystemConstant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemConstantId
        {
            get
            {
                return _SystemConstantId;
            }
            set
            {
                if (_SystemConstantId != value)
                {
                    OnSystemConstantIdChanging(value);
                    ReportPropertyChanging("SystemConstantId");
                    _SystemConstantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemConstantId");
                    OnSystemConstantIdChanged();
                }
            }
        }
        private global::System.Int32 _SystemConstantId;
        partial void OnSystemConstantIdChanging(global::System.Int32 value);
        partial void OnSystemConstantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterSystemEmail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterSystemEmail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterSystemEmail object.
        /// </summary>
        /// <param name="systemEmailId">Initial value of the SystemEmailId property.</param>
        public static MasterSystemEmail CreateMasterSystemEmail(global::System.Int32 systemEmailId)
        {
            MasterSystemEmail masterSystemEmail = new MasterSystemEmail();
            masterSystemEmail.SystemEmailId = systemEmailId;
            return masterSystemEmail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEmailId
        {
            get
            {
                return _SystemEmailId;
            }
            set
            {
                if (_SystemEmailId != value)
                {
                    OnSystemEmailIdChanging(value);
                    ReportPropertyChanging("SystemEmailId");
                    _SystemEmailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemEmailId");
                    OnSystemEmailIdChanged();
                }
            }
        }
        private global::System.Int32 _SystemEmailId;
        partial void OnSystemEmailIdChanging(global::System.Int32 value);
        partial void OnSystemEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.String _Purpose;
        partial void OnPurposeChanging(global::System.String value);
        partial void OnPurposeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MasterZipCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterZipCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterZipCode object.
        /// </summary>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static MasterZipCode CreateMasterZipCode(global::System.Int64 zipCode, global::System.String city, global::System.String state)
        {
            MasterZipCode masterZipCode = new MasterZipCode();
            masterZipCode.ZipCode = zipCode;
            masterZipCode.City = city;
            masterZipCode.State = state;
            return masterZipCode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                if (_ZipCode != value)
                {
                    OnZipCodeChanging(value);
                    ReportPropertyChanging("ZipCode");
                    _ZipCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZipCode");
                    OnZipCodeChanged();
                }
            }
        }
        private global::System.Int64 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int64 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new News object.
        /// </summary>
        /// <param name="newsId">Initial value of the NewsId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static News CreateNews(global::System.Guid newsId, global::System.Boolean isDeleted)
        {
            News news = new News();
            news.NewsId = newsId;
            news.IsDeleted = isDeleted;
            return news;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NewsId
        {
            get
            {
                return _NewsId;
            }
            set
            {
                if (_NewsId != value)
                {
                    OnNewsIdChanging(value);
                    ReportPropertyChanging("NewsId");
                    _NewsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NewsId");
                    OnNewsIdChanged();
                }
            }
        }
        private global::System.Guid _NewsId;
        partial void OnNewsIdChanging(global::System.Guid value);
        partial void OnNewsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewsTtitle
        {
            get
            {
                return _NewsTtitle;
            }
            set
            {
                OnNewsTtitleChanging(value);
                ReportPropertyChanging("NewsTtitle");
                _NewsTtitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewsTtitle");
                OnNewsTtitleChanged();
            }
        }
        private global::System.String _NewsTtitle;
        partial void OnNewsTtitleChanging(global::System.String value);
        partial void OnNewsTtitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewsContent
        {
            get
            {
                return _NewsContent;
            }
            set
            {
                OnNewsContentChanging(value);
                ReportPropertyChanging("NewsContent");
                _NewsContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewsContent");
                OnNewsContentChanged();
            }
        }
        private global::System.String _NewsContent;
        partial void OnNewsContentChanging(global::System.String value);
        partial void OnNewsContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOn
        {
            get
            {
                return _LastModifiedOn;
            }
            set
            {
                OnLastModifiedOnChanging(value);
                ReportPropertyChanging("LastModifiedOn");
                _LastModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOn");
                OnLastModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOn;
        partial void OnLastModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PayeeStatementReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayeeStatementReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayeeStatementReport object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="licenceID">Initial value of the LicenceID property.</param>
        /// <param name="reports">Initial value of the Reports property.</param>
        /// <param name="reportOn">Initial value of the ReportOn property.</param>
        public static PayeeStatementReport CreatePayeeStatementReport(global::System.Guid reportId, global::System.Guid licenceID, global::System.String reports, global::System.DateTime reportOn)
        {
            PayeeStatementReport payeeStatementReport = new PayeeStatementReport();
            payeeStatementReport.ReportId = reportId;
            payeeStatementReport.LicenceID = licenceID;
            payeeStatementReport.Reports = reports;
            payeeStatementReport.ReportOn = reportOn;
            return payeeStatementReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenceID
        {
            get
            {
                return _LicenceID;
            }
            set
            {
                OnLicenceIDChanging(value);
                ReportPropertyChanging("LicenceID");
                _LicenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenceID");
                OnLicenceIDChanged();
            }
        }
        private global::System.Guid _LicenceID;
        partial void OnLicenceIDChanging(global::System.Guid value);
        partial void OnLicenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Batch
        {
            get
            {
                return _Batch;
            }
            set
            {
                OnBatchChanging(value);
                ReportPropertyChanging("Batch");
                _Batch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Batch");
                OnBatchChanged();
            }
        }
        private global::System.String _Batch;
        partial void OnBatchChanging(global::System.String value);
        partial void OnBatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payee
        {
            get
            {
                return _Payee;
            }
            set
            {
                OnPayeeChanging(value);
                ReportPropertyChanging("Payee");
                _Payee = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payee");
                OnPayeeChanged();
            }
        }
        private global::System.String _Payee;
        partial void OnPayeeChanging(global::System.String value);
        partial void OnPayeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reports
        {
            get
            {
                return _Reports;
            }
            set
            {
                OnReportsChanging(value);
                ReportPropertyChanging("Reports");
                _Reports = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reports");
                OnReportsChanged();
            }
        }
        private global::System.String _Reports;
        partial void OnReportsChanging(global::System.String value);
        partial void OnReportsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PaymentType
        {
            get
            {
                return _PaymentType;
            }
            set
            {
                OnPaymentTypeChanging(value);
                ReportPropertyChanging("PaymentType");
                _PaymentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentType");
                OnPaymentTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _PaymentType;
        partial void OnPaymentTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnPaymentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportOn
        {
            get
            {
                return _ReportOn;
            }
            set
            {
                OnReportOnChanging(value);
                ReportPropertyChanging("ReportOn");
                _ReportOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportOn");
                OnReportOnChanged();
            }
        }
        private global::System.DateTime _ReportOn;
        partial void OnReportOnChanging(global::System.DateTime value);
        partial void OnReportOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Zero
        {
            get
            {
                return _Zero;
            }
            set
            {
                OnZeroChanging(value);
                ReportPropertyChanging("Zero");
                _Zero = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zero");
                OnZeroChanged();
            }
        }
        private Nullable<global::System.Boolean> _Zero;
        partial void OnZeroChanging(Nullable<global::System.Boolean> value);
        partial void OnZeroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSplit
        {
            get
            {
                return _IsSplit;
            }
            set
            {
                OnIsSplitChanging(value);
                ReportPropertyChanging("IsSplit");
                _IsSplit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSplit");
                OnIsSplitChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSplit;
        partial void OnIsSplitChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSplitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPayorRate
        {
            get
            {
                return _IsPayorRate;
            }
            set
            {
                OnIsPayorRateChanging(value);
                ReportPropertyChanging("IsPayorRate");
                _IsPayorRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPayorRate");
                OnIsPayorRateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPayorRate;
        partial void OnIsPayorRateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPayorRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSubTotal
        {
            get
            {
                return _IsSubTotal;
            }
            set
            {
                OnIsSubTotalChanging(value);
                ReportPropertyChanging("IsSubTotal");
                _IsSubTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSubTotal");
                OnIsSubTotalChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSubTotal;
        partial void OnIsSubTotalChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSubTotalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Payor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payor object.
        /// </summary>
        /// <param name="payorId">Initial value of the PayorId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isGlobal">Initial value of the IsGlobal property.</param>
        public static Payor CreatePayor(global::System.Guid payorId, global::System.Boolean isDeleted, global::System.Boolean isGlobal)
        {
            Payor payor = new Payor();
            payor.PayorId = payorId;
            payor.IsDeleted = isDeleted;
            payor.IsGlobal = isGlobal;
            return payor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                if (_PayorId != value)
                {
                    OnPayorIdChanging(value);
                    ReportPropertyChanging("PayorId");
                    _PayorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorId");
                    OnPayorIdChanged();
                }
            }
        }
        private global::System.Guid _PayorId;
        partial void OnPayorIdChanging(global::System.Guid value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorName
        {
            get
            {
                return _PayorName;
            }
            set
            {
                OnPayorNameChanging(value);
                ReportPropertyChanging("PayorName");
                _PayorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorName");
                OnPayorNameChanged();
            }
        }
        private global::System.String _PayorName;
        partial void OnPayorNameChanging(global::System.String value);
        partial void OnPayorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayorRegionId
        {
            get
            {
                return _PayorRegionId;
            }
            set
            {
                OnPayorRegionIdChanging(value);
                ReportPropertyChanging("PayorRegionId");
                _PayorRegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorRegionId");
                OnPayorRegionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PayorRegionId;
        partial void OnPayorRegionIdChanging(Nullable<global::System.Int32> value);
        partial void OnPayorRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayorTypeId
        {
            get
            {
                return _PayorTypeId;
            }
            set
            {
                OnPayorTypeIdChanging(value);
                ReportPropertyChanging("PayorTypeId");
                _PayorTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorTypeId");
                OnPayorTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PayorTypeId;
        partial void OnPayorTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPayorTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayorStatusId
        {
            get
            {
                return _PayorStatusId;
            }
            set
            {
                OnPayorStatusIdChanging(value);
                ReportPropertyChanging("PayorStatusId");
                _PayorStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorStatusId");
                OnPayorStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PayorStatusId;
        partial void OnPayorStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPayorStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGlobal
        {
            get
            {
                return _IsGlobal;
            }
            set
            {
                OnIsGlobalChanging(value);
                ReportPropertyChanging("IsGlobal");
                _IsGlobal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGlobal");
                OnIsGlobalChanged();
            }
        }
        private global::System.Boolean _IsGlobal;
        partial void OnIsGlobalChanging(global::System.Boolean value);
        partial void OnIsGlobalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                OnSourceIDChanging(value);
                ReportPropertyChanging("SourceID");
                _SourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceID");
                OnSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceID;
        partial void OnSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Batches_Payors", "Batches")]
        public EntityCollection<Batch> Batches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("Model.FK_Batches_Payors", "Batches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("Model.FK_Batches_Payors", "Batches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_Payors", "CarrierNickName")]
        public EntityCollection<CarrierNickName> CarrierNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_Payors", "CarrierNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_Payors", "CarrierNickName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Payors", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Payors", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Payors", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorContacts_Payors", "GlobalPayorContacts")]
        public EntityCollection<GlobalPayorContact> GlobalPayorContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalPayorContact>("Model.FK_GlobalPayorContacts_Payors", "GlobalPayorContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalPayorContact>("Model.FK_GlobalPayorContacts_Payors", "GlobalPayorContacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorDefaults_Payors", "GlobalPayorDefaults")]
        public EntityCollection<GlobalPayorDefault> GlobalPayorDefaults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalPayorDefault>("Model.FK_GlobalPayorDefaults_Payors", "GlobalPayorDefaults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalPayorDefault>("Model.FK_GlobalPayorDefaults_Payors", "GlobalPayorDefaults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_GlobalPayorStatementDate_Payors", "GlobalPayorStatementDate")]
        public EntityCollection<GlobalPayorStatementDate> GlobalPayorStatementDates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalPayorStatementDate>("Model.FK_GlobalPayorStatementDate_Payors", "GlobalPayorStatementDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalPayorStatementDate>("Model.FK_GlobalPayorStatementDate_Payors", "GlobalPayorStatementDate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_IssuedFiles_Payors", "IssuedFiles")]
        public IssuedFile IssuedFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssuedFile>("Model.FK_IssuedFiles_Payors", "IssuedFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssuedFile>("Model.FK_IssuedFiles_Payors", "IssuedFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssuedFile> IssuedFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssuedFile>("Model.FK_IssuedFiles_Payors", "IssuedFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssuedFile>("Model.FK_IssuedFiles_Payors", "IssuedFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LicenseePayors_Payors", "LicenseePayors")]
        public EntityCollection<LicenseePayor> LicenseePayors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicenseePayor>("Model.FK_LicenseePayors_Payors", "LicenseePayors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicenseePayor>("Model.FK_LicenseePayors_Payors", "LicenseePayors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Payors_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Payors_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Payors_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_Payors_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_MasterPayorRegions", "MasterPayorRegions")]
        public MasterPayorRegion MasterPayorRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_Payors_MasterPayorRegions", "MasterPayorRegions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_Payors_MasterPayorRegions", "MasterPayorRegions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPayorRegion> MasterPayorRegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorRegion>("Model.FK_Payors_MasterPayorRegions", "MasterPayorRegions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPayorRegion>("Model.FK_Payors_MasterPayorRegions", "MasterPayorRegions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_MasterSourceTypes", "MasterSourceTypes")]
        public MasterSourceType MasterSourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSourceType>("Model.FK_Payors_MasterSourceTypes", "MasterSourceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSourceType>("Model.FK_Payors_MasterSourceTypes", "MasterSourceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSourceType> MasterSourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSourceType>("Model.FK_Payors_MasterSourceTypes", "MasterSourceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSourceType>("Model.FK_Payors_MasterSourceTypes", "MasterSourceTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_Payors_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_Payors_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_Payors_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_Payors_UserCredentials", "UserCredentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSiteLoginInfo_Payors", "PayorSiteLoginInfo")]
        public EntityCollection<PayorSiteLoginInfo> PayorSiteLoginInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorSiteLoginInfo>("Model.FK_PayorSiteLoginInfo_Payors", "PayorSiteLoginInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorSiteLoginInfo>("Model.FK_PayorSiteLoginInfo_Payors", "PayorSiteLoginInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSource_Payors", "PayorSource")]
        public EntityCollection<PayorSource> PayorSources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorSource>("Model.FK_PayorSource_Payors", "PayorSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorSource>("Model.FK_PayorSource_Payors", "PayorSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorTools_Payors", "PayorTools")]
        public EntityCollection<PayorTool> PayorTools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorTool>("Model.FK_PayorTools_Payors", "PayorTools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorTool>("Model.FK_PayorTools_Payors", "PayorTools", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Payors", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_Payors", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_Payors", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Payors", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Payors", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_Payors", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Templates_Payors", "Templates")]
        public Template Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("Model.FK_Templates_Payors", "Templates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("Model.FK_Templates_Payors", "Templates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Template> TemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("Model.FK_Templates_Payors", "Templates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Template>("Model.FK_Templates_Payors", "Templates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Statements_Payors", "Statement")]
        public EntityCollection<Statement> Statements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statement>("Model.FK_Statements_Payors", "Statement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statement>("Model.FK_Statements_Payors", "Statement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_Payors", "PolicyLearnedField")]
        public EntityCollection<PolicyLearnedField> PolicyLearnedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Payors", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Payors", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_Payors", "PolicyLearnedFieldsHistory")]
        public EntityCollection<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Payors", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Payors", "PolicyLearnedFieldsHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoverageNickName_Payors", "CoverageNickName")]
        public EntityCollection<CoverageNickName> CoverageNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CoverageNickName>("Model.FK_CoverageNickName_Payors", "CoverageNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CoverageNickName>("Model.FK_CoverageNickName_Payors", "CoverageNickName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PayorSiteLoginInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayorSiteLoginInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayorSiteLoginInfo object.
        /// </summary>
        /// <param name="siteLoginID">Initial value of the SiteLoginID property.</param>
        /// <param name="payorID">Initial value of the PayorID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        public static PayorSiteLoginInfo CreatePayorSiteLoginInfo(global::System.Guid siteLoginID, global::System.Guid payorID, global::System.String login, global::System.String password, global::System.Guid licenseeId)
        {
            PayorSiteLoginInfo payorSiteLoginInfo = new PayorSiteLoginInfo();
            payorSiteLoginInfo.SiteLoginID = siteLoginID;
            payorSiteLoginInfo.PayorID = payorID;
            payorSiteLoginInfo.Login = login;
            payorSiteLoginInfo.Password = password;
            payorSiteLoginInfo.LicenseeId = licenseeId;
            return payorSiteLoginInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SiteLoginID
        {
            get
            {
                return _SiteLoginID;
            }
            set
            {
                if (_SiteLoginID != value)
                {
                    OnSiteLoginIDChanging(value);
                    ReportPropertyChanging("SiteLoginID");
                    _SiteLoginID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteLoginID");
                    OnSiteLoginIDChanged();
                }
            }
        }
        private global::System.Guid _SiteLoginID;
        partial void OnSiteLoginIDChanging(global::System.Guid value);
        partial void OnSiteLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private global::System.Guid _PayorID;
        partial void OnPayorIDChanging(global::System.Guid value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSiteLoginInfo_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorSiteLoginInfo_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorSiteLoginInfo_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorSiteLoginInfo_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_PayorSiteLoginInfo_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSiteLoginInfo_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorSiteLoginInfo_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorSiteLoginInfo_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorSiteLoginInfo_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PayorSiteLoginInfo_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PayorSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayorSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayorSource object.
        /// </summary>
        /// <param name="payorId">Initial value of the PayorId property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        /// <param name="sourceType">Initial value of the SourceType property.</param>
        public static PayorSource CreatePayorSource(global::System.Guid payorId, global::System.Guid licenseeId, global::System.Boolean sourceType)
        {
            PayorSource payorSource = new PayorSource();
            payorSource.PayorId = payorId;
            payorSource.LicenseeId = licenseeId;
            payorSource.SourceType = sourceType;
            return payorSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                if (_PayorId != value)
                {
                    OnPayorIdChanging(value);
                    ReportPropertyChanging("PayorId");
                    _PayorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorId");
                    OnPayorIdChanged();
                }
            }
        }
        private global::System.Guid _PayorId;
        partial void OnPayorIdChanging(global::System.Guid value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                if (_LicenseeId != value)
                {
                    OnLicenseeIdChanging(value);
                    ReportPropertyChanging("LicenseeId");
                    _LicenseeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseeId");
                    OnLicenseeIdChanged();
                }
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SourceType
        {
            get
            {
                return _SourceType;
            }
            set
            {
                OnSourceTypeChanging(value);
                ReportPropertyChanging("SourceType");
                _SourceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceType");
                OnSourceTypeChanged();
            }
        }
        private global::System.Boolean _SourceType;
        partial void OnSourceTypeChanging(global::System.Boolean value);
        partial void OnSourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfigNotes
        {
            get
            {
                return _ConfigNotes;
            }
            set
            {
                OnConfigNotesChanging(value);
                ReportPropertyChanging("ConfigNotes");
                _ConfigNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfigNotes");
                OnConfigNotesChanged();
            }
        }
        private global::System.String _ConfigNotes;
        partial void OnConfigNotesChanging(global::System.String value);
        partial void OnConfigNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSource_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorSource_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorSource_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PayorSource_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_PayorSource_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorSource_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorSource_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorSource_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorSource_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PayorSource_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PayorTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayorTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayorTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PayorTemplate CreatePayorTemplate(global::System.Int32 id)
        {
            PayorTemplate payorTemplate = new PayorTemplate();
            payorTemplate.ID = id;
            return payorTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateName
        {
            get
            {
                return _TemplateName;
            }
            set
            {
                OnTemplateNameChanging(value);
                ReportPropertyChanging("TemplateName");
                _TemplateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateName");
                OnTemplateNameChanged();
            }
        }
        private global::System.String _TemplateName;
        partial void OnTemplateNameChanging(global::System.String value);
        partial void OnTemplateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PayorTool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayorTool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayorTool object.
        /// </summary>
        /// <param name="payorToolId">Initial value of the PayorToolId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PayorTool CreatePayorTool(global::System.Guid payorToolId, global::System.Boolean isDeleted)
        {
            PayorTool payorTool = new PayorTool();
            payorTool.PayorToolId = payorToolId;
            payorTool.IsDeleted = isDeleted;
            return payorTool;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorToolId
        {
            get
            {
                return _PayorToolId;
            }
            set
            {
                if (_PayorToolId != value)
                {
                    OnPayorToolIdChanging(value);
                    ReportPropertyChanging("PayorToolId");
                    _PayorToolId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorToolId");
                    OnPayorToolIdChanged();
                }
            }
        }
        private global::System.Guid _PayorToolId;
        partial void OnPayorToolIdChanging(global::System.Guid value);
        partial void OnPayorToolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatementImageFile
        {
            get
            {
                return _StatementImageFile;
            }
            set
            {
                OnStatementImageFileChanging(value);
                ReportPropertyChanging("StatementImageFile");
                _StatementImageFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatementImageFile");
                OnStatementImageFileChanged();
            }
        }
        private global::System.String _StatementImageFile;
        partial void OnStatementImageFileChanging(global::System.String value);
        partial void OnStatementImageFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChequeImageFile
        {
            get
            {
                return _ChequeImageFile;
            }
            set
            {
                OnChequeImageFileChanging(value);
                ReportPropertyChanging("ChequeImageFile");
                _ChequeImageFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChequeImageFile");
                OnChequeImageFileChanged();
            }
        }
        private global::System.String _ChequeImageFile;
        partial void OnChequeImageFileChanging(global::System.String value);
        partial void OnChequeImageFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorTools_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorTools_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorTools_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PayorTools_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PayorTools_Payors", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_PayorTools", "PayorToolFields")]
        public EntityCollection<PayorToolField> PayorToolFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_PayorTools", "PayorToolFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayorToolField>("Model.FK_PayorToolFields_PayorTools", "PayorToolFields", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PayorToolField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayorToolField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayorToolField object.
        /// </summary>
        /// <param name="payorToolFieldId">Initial value of the PayorToolFieldId property.</param>
        /// <param name="isPartOfPrimary">Initial value of the IsPartOfPrimary property.</param>
        /// <param name="isPopulatedIfLinked">Initial value of the IsPopulatedIfLinked property.</param>
        /// <param name="isTabbedToNextFieldIfLinked">Initial value of the IsTabbedToNextFieldIfLinked property.</param>
        /// <param name="isCalculatedField">Initial value of the IsCalculatedField property.</param>
        /// <param name="isOverrideOfCalcAllowed">Initial value of the IsOverrideOfCalcAllowed property.</param>
        /// <param name="isOorBlankAllowed">Initial value of the IsOorBlankAllowed property.</param>
        /// <param name="allignedDirection">Initial value of the AllignedDirection property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PayorToolField CreatePayorToolField(global::System.Guid payorToolFieldId, global::System.Boolean isPartOfPrimary, global::System.Boolean isPopulatedIfLinked, global::System.Boolean isTabbedToNextFieldIfLinked, global::System.Boolean isCalculatedField, global::System.Boolean isOverrideOfCalcAllowed, global::System.Boolean isOorBlankAllowed, global::System.String allignedDirection, global::System.Boolean isDeleted)
        {
            PayorToolField payorToolField = new PayorToolField();
            payorToolField.PayorToolFieldId = payorToolFieldId;
            payorToolField.IsPartOfPrimary = isPartOfPrimary;
            payorToolField.IsPopulatedIfLinked = isPopulatedIfLinked;
            payorToolField.IsTabbedToNextFieldIfLinked = isTabbedToNextFieldIfLinked;
            payorToolField.IsCalculatedField = isCalculatedField;
            payorToolField.IsOverrideOfCalcAllowed = isOverrideOfCalcAllowed;
            payorToolField.IsOorBlankAllowed = isOorBlankAllowed;
            payorToolField.AllignedDirection = allignedDirection;
            payorToolField.IsDeleted = isDeleted;
            return payorToolField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorToolFieldId
        {
            get
            {
                return _PayorToolFieldId;
            }
            set
            {
                if (_PayorToolFieldId != value)
                {
                    OnPayorToolFieldIdChanging(value);
                    ReportPropertyChanging("PayorToolFieldId");
                    _PayorToolFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorToolFieldId");
                    OnPayorToolFieldIdChanged();
                }
            }
        }
        private global::System.Guid _PayorToolFieldId;
        partial void OnPayorToolFieldIdChanging(global::System.Guid value);
        partial void OnPayorToolFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorToolId
        {
            get
            {
                return _PayorToolId;
            }
            set
            {
                OnPayorToolIdChanging(value);
                ReportPropertyChanging("PayorToolId");
                _PayorToolId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorToolId");
                OnPayorToolIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorToolId;
        partial void OnPayorToolIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorToolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelOnImage
        {
            get
            {
                return _LabelOnImage;
            }
            set
            {
                OnLabelOnImageChanging(value);
                ReportPropertyChanging("LabelOnImage");
                _LabelOnImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelOnImage");
                OnLabelOnImageChanged();
            }
        }
        private global::System.String _LabelOnImage;
        partial void OnLabelOnImageChanging(global::System.String value);
        partial void OnLabelOnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldStatus
        {
            get
            {
                return _FieldStatus;
            }
            set
            {
                OnFieldStatusChanging(value);
                ReportPropertyChanging("FieldStatus");
                _FieldStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldStatus");
                OnFieldStatusChanged();
            }
        }
        private global::System.String _FieldStatus;
        partial void OnFieldStatusChanging(global::System.String value);
        partial void OnFieldStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldOrder
        {
            get
            {
                return _FieldOrder;
            }
            set
            {
                OnFieldOrderChanging(value);
                ReportPropertyChanging("FieldOrder");
                _FieldOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldOrder");
                OnFieldOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldOrder;
        partial void OnFieldOrderChanging(Nullable<global::System.Int32> value);
        partial void OnFieldOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPartOfPrimary
        {
            get
            {
                return _IsPartOfPrimary;
            }
            set
            {
                OnIsPartOfPrimaryChanging(value);
                ReportPropertyChanging("IsPartOfPrimary");
                _IsPartOfPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPartOfPrimary");
                OnIsPartOfPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPartOfPrimary;
        partial void OnIsPartOfPrimaryChanging(global::System.Boolean value);
        partial void OnIsPartOfPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPopulatedIfLinked
        {
            get
            {
                return _IsPopulatedIfLinked;
            }
            set
            {
                OnIsPopulatedIfLinkedChanging(value);
                ReportPropertyChanging("IsPopulatedIfLinked");
                _IsPopulatedIfLinked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPopulatedIfLinked");
                OnIsPopulatedIfLinkedChanged();
            }
        }
        private global::System.Boolean _IsPopulatedIfLinked;
        partial void OnIsPopulatedIfLinkedChanging(global::System.Boolean value);
        partial void OnIsPopulatedIfLinkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTabbedToNextFieldIfLinked
        {
            get
            {
                return _IsTabbedToNextFieldIfLinked;
            }
            set
            {
                OnIsTabbedToNextFieldIfLinkedChanging(value);
                ReportPropertyChanging("IsTabbedToNextFieldIfLinked");
                _IsTabbedToNextFieldIfLinked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTabbedToNextFieldIfLinked");
                OnIsTabbedToNextFieldIfLinkedChanged();
            }
        }
        private global::System.Boolean _IsTabbedToNextFieldIfLinked;
        partial void OnIsTabbedToNextFieldIfLinkedChanging(global::System.Boolean value);
        partial void OnIsTabbedToNextFieldIfLinkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCalculatedField
        {
            get
            {
                return _IsCalculatedField;
            }
            set
            {
                OnIsCalculatedFieldChanging(value);
                ReportPropertyChanging("IsCalculatedField");
                _IsCalculatedField = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCalculatedField");
                OnIsCalculatedFieldChanged();
            }
        }
        private global::System.Boolean _IsCalculatedField;
        partial void OnIsCalculatedFieldChanging(global::System.Boolean value);
        partial void OnIsCalculatedFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOverrideOfCalcAllowed
        {
            get
            {
                return _IsOverrideOfCalcAllowed;
            }
            set
            {
                OnIsOverrideOfCalcAllowedChanging(value);
                ReportPropertyChanging("IsOverrideOfCalcAllowed");
                _IsOverrideOfCalcAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOverrideOfCalcAllowed");
                OnIsOverrideOfCalcAllowedChanged();
            }
        }
        private global::System.Boolean _IsOverrideOfCalcAllowed;
        partial void OnIsOverrideOfCalcAllowedChanging(global::System.Boolean value);
        partial void OnIsOverrideOfCalcAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultNumeric
        {
            get
            {
                return _DefaultNumeric;
            }
            set
            {
                OnDefaultNumericChanging(value);
                ReportPropertyChanging("DefaultNumeric");
                _DefaultNumeric = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultNumeric");
                OnDefaultNumericChanged();
            }
        }
        private global::System.String _DefaultNumeric;
        partial void OnDefaultNumericChanging(global::System.String value);
        partial void OnDefaultNumericChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOorBlankAllowed
        {
            get
            {
                return _IsOorBlankAllowed;
            }
            set
            {
                OnIsOorBlankAllowedChanging(value);
                ReportPropertyChanging("IsOorBlankAllowed");
                _IsOorBlankAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOorBlankAllowed");
                OnIsOorBlankAllowedChanged();
            }
        }
        private global::System.Boolean _IsOorBlankAllowed;
        partial void OnIsOorBlankAllowedChanging(global::System.Boolean value);
        partial void OnIsOorBlankAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllignedDirection
        {
            get
            {
                return _AllignedDirection;
            }
            set
            {
                OnAllignedDirectionChanging(value);
                ReportPropertyChanging("AllignedDirection");
                _AllignedDirection = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllignedDirection");
                OnAllignedDirectionChanged();
            }
        }
        private global::System.String _AllignedDirection;
        partial void OnAllignedDirectionChanging(global::System.String value);
        partial void OnAllignedDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentIncomingField
        {
            get
            {
                return _EquivalentIncomingField;
            }
            set
            {
                OnEquivalentIncomingFieldChanging(value);
                ReportPropertyChanging("EquivalentIncomingField");
                _EquivalentIncomingField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentIncomingField");
                OnEquivalentIncomingFieldChanged();
            }
        }
        private global::System.String _EquivalentIncomingField;
        partial void OnEquivalentIncomingFieldChanging(global::System.String value);
        partial void OnEquivalentIncomingFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentLearnedField
        {
            get
            {
                return _EquivalentLearnedField;
            }
            set
            {
                OnEquivalentLearnedFieldChanging(value);
                ReportPropertyChanging("EquivalentLearnedField");
                _EquivalentLearnedField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentLearnedField");
                OnEquivalentLearnedFieldChanged();
            }
        }
        private global::System.String _EquivalentLearnedField;
        partial void OnEquivalentLearnedFieldChanging(global::System.String value);
        partial void OnEquivalentLearnedFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EquivalentDeuField
        {
            get
            {
                return _EquivalentDeuField;
            }
            set
            {
                OnEquivalentDeuFieldChanging(value);
                ReportPropertyChanging("EquivalentDeuField");
                _EquivalentDeuField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EquivalentDeuField");
                OnEquivalentDeuFieldChanged();
            }
        }
        private global::System.String _EquivalentDeuField;
        partial void OnEquivalentDeuFieldChanging(global::System.String value);
        partial void OnEquivalentDeuFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FormulaId
        {
            get
            {
                return _FormulaId;
            }
            set
            {
                OnFormulaIdChanging(value);
                ReportPropertyChanging("FormulaId");
                _FormulaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormulaId");
                OnFormulaIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FormulaId;
        partial void OnFormulaIdChanging(Nullable<global::System.Guid> value);
        partial void OnFormulaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldPositionX
        {
            get
            {
                return _FieldPositionX;
            }
            set
            {
                OnFieldPositionXChanging(value);
                ReportPropertyChanging("FieldPositionX");
                _FieldPositionX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldPositionX");
                OnFieldPositionXChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldPositionX;
        partial void OnFieldPositionXChanging(Nullable<global::System.Int32> value);
        partial void OnFieldPositionXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldPositionY
        {
            get
            {
                return _FieldPositionY;
            }
            set
            {
                OnFieldPositionYChanging(value);
                ReportPropertyChanging("FieldPositionY");
                _FieldPositionY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldPositionY");
                OnFieldPositionYChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldPositionY;
        partial void OnFieldPositionYChanging(Nullable<global::System.Int32> value);
        partial void OnFieldPositionYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldWidth
        {
            get
            {
                return _FieldWidth;
            }
            set
            {
                OnFieldWidthChanging(value);
                ReportPropertyChanging("FieldWidth");
                _FieldWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldWidth");
                OnFieldWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldWidth;
        partial void OnFieldWidthChanging(Nullable<global::System.Int32> value);
        partial void OnFieldWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldHeight
        {
            get
            {
                return _FieldHeight;
            }
            set
            {
                OnFieldHeightChanging(value);
                ReportPropertyChanging("FieldHeight");
                _FieldHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldHeight");
                OnFieldHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldHeight;
        partial void OnFieldHeightChanging(Nullable<global::System.Int32> value);
        partial void OnFieldHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PTAvailableFieldId
        {
            get
            {
                return _PTAvailableFieldId;
            }
            set
            {
                OnPTAvailableFieldIdChanging(value);
                ReportPropertyChanging("PTAvailableFieldId");
                _PTAvailableFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PTAvailableFieldId");
                OnPTAvailableFieldIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PTAvailableFieldId;
        partial void OnPTAvailableFieldIdChanging(Nullable<global::System.Int32> value);
        partial void OnPTAvailableFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaskFieldTypeId
        {
            get
            {
                return _MaskFieldTypeId;
            }
            set
            {
                OnMaskFieldTypeIdChanging(value);
                ReportPropertyChanging("MaskFieldTypeId");
                _MaskFieldTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaskFieldTypeId");
                OnMaskFieldTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MaskFieldTypeId;
        partial void OnMaskFieldTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMaskFieldTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_Formulas", "Formulas")]
        public Formula Formula
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formula>("Model.FK_PayorToolFields_Formulas", "Formulas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formula>("Model.FK_PayorToolFields_Formulas", "Formulas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Formula> FormulaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formula>("Model.FK_PayorToolFields_Formulas", "Formulas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Formula>("Model.FK_PayorToolFields_Formulas", "Formulas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_MasterPayorToolAvailableFields", "MasterPayorToolAvailableFields")]
        public MasterPayorToolAvailableField MasterPayorToolAvailableField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorToolAvailableField>("Model.FK_PayorToolFields_MasterPayorToolAvailableFields", "MasterPayorToolAvailableFields").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorToolAvailableField>("Model.FK_PayorToolFields_MasterPayorToolAvailableFields", "MasterPayorToolAvailableFields").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPayorToolAvailableField> MasterPayorToolAvailableFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorToolAvailableField>("Model.FK_PayorToolFields_MasterPayorToolAvailableFields", "MasterPayorToolAvailableFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPayorToolAvailableField>("Model.FK_PayorToolFields_MasterPayorToolAvailableFields", "MasterPayorToolAvailableFields", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "MasterPayorToolMaskFieldTypes")]
        public MasterPayorToolMaskFieldType MasterPayorToolMaskFieldType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorToolMaskFieldType>("Model.FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "MasterPayorToolMaskFieldTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorToolMaskFieldType>("Model.FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "MasterPayorToolMaskFieldTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPayorToolMaskFieldType> MasterPayorToolMaskFieldTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPayorToolMaskFieldType>("Model.FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "MasterPayorToolMaskFieldTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPayorToolMaskFieldType>("Model.FK_PayorToolFields_MasterPayorToolMaskFieldTypes", "MasterPayorToolMaskFieldTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorToolFields_PayorTools", "PayorTools")]
        public PayorTool PayorTool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayorTool>("Model.FK_PayorToolFields_PayorTools", "PayorTools").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayorTool>("Model.FK_PayorToolFields_PayorTools", "PayorTools").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayorTool> PayorToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayorTool>("Model.FK_PayorToolFields_PayorTools", "PayorTools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayorTool>("Model.FK_PayorToolFields_PayorTools", "PayorTools", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PoliciesHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PoliciesHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PoliciesHistory object.
        /// </summary>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        /// <param name="isTrackMissingMonth">Initial value of the IsTrackMissingMonth property.</param>
        /// <param name="isTrackIncomingPercentage">Initial value of the IsTrackIncomingPercentage property.</param>
        /// <param name="isTrackPayment">Initial value of the IsTrackPayment property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PoliciesHistory CreatePoliciesHistory(global::System.Guid policyId, global::System.Boolean isTrackMissingMonth, global::System.Boolean isTrackIncomingPercentage, global::System.Boolean isTrackPayment, global::System.Boolean isDeleted)
        {
            PoliciesHistory policiesHistory = new PoliciesHistory();
            policiesHistory.PolicyId = policyId;
            policiesHistory.IsTrackMissingMonth = isTrackMissingMonth;
            policiesHistory.IsTrackIncomingPercentage = isTrackIncomingPercentage;
            policiesHistory.IsTrackPayment = isTrackPayment;
            policiesHistory.IsDeleted = isDeleted;
            return policiesHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                if (_PolicyId != value)
                {
                    OnPolicyIdChanging(value);
                    ReportPropertyChanging("PolicyId");
                    _PolicyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyId");
                    OnPolicyIdChanged();
                }
            }
        }
        private global::System.Guid _PolicyId;
        partial void OnPolicyIdChanging(global::System.Guid value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyStatusId
        {
            get
            {
                return _PolicyStatusId;
            }
            set
            {
                OnPolicyStatusIdChanging(value);
                ReportPropertyChanging("PolicyStatusId");
                _PolicyStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyStatusId");
                OnPolicyStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyStatusId;
        partial void OnPolicyStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private global::System.String _PolicyType;
        partial void OnPolicyTypeChanging(global::System.String value);
        partial void OnPolicyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyClientId
        {
            get
            {
                return _PolicyClientId;
            }
            set
            {
                OnPolicyClientIdChanging(value);
                ReportPropertyChanging("PolicyClientId");
                _PolicyClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyClientId");
                OnPolicyClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyClientId;
        partial void OnPolicyClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyLicenseeId
        {
            get
            {
                return _PolicyLicenseeId;
            }
            set
            {
                OnPolicyLicenseeIdChanging(value);
                ReportPropertyChanging("PolicyLicenseeId");
                _PolicyLicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyLicenseeId");
                OnPolicyLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyLicenseeId;
        partial void OnPolicyLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalEffectiveDate
        {
            get
            {
                return _OriginalEffectiveDate;
            }
            set
            {
                OnOriginalEffectiveDateChanging(value);
                ReportPropertyChanging("OriginalEffectiveDate");
                _OriginalEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalEffectiveDate");
                OnOriginalEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalEffectiveDate;
        partial void OnOriginalEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFromDate
        {
            get
            {
                return _TrackFromDate;
            }
            set
            {
                OnTrackFromDateChanging(value);
                ReportPropertyChanging("TrackFromDate");
                _TrackFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFromDate");
                OnTrackFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFromDate;
        partial void OnTrackFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                OnPolicyModeIdChanging(value);
                ReportPropertyChanging("PolicyModeId");
                _PolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId");
                OnPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId;
        partial void OnPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MonthlyPremium
        {
            get
            {
                return _MonthlyPremium;
            }
            set
            {
                OnMonthlyPremiumChanging(value);
                ReportPropertyChanging("MonthlyPremium");
                _MonthlyPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthlyPremium");
                OnMonthlyPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _MonthlyPremium;
        partial void OnMonthlyPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnMonthlyPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittedThrough
        {
            get
            {
                return _SubmittedThrough;
            }
            set
            {
                OnSubmittedThroughChanging(value);
                ReportPropertyChanging("SubmittedThrough");
                _SubmittedThrough = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubmittedThrough");
                OnSubmittedThroughChanged();
            }
        }
        private global::System.String _SubmittedThrough;
        partial void OnSubmittedThroughChanging(global::System.String value);
        partial void OnSubmittedThroughChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PolicyTerminationDate
        {
            get
            {
                return _PolicyTerminationDate;
            }
            set
            {
                OnPolicyTerminationDateChanging(value);
                ReportPropertyChanging("PolicyTerminationDate");
                _PolicyTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyTerminationDate");
                OnPolicyTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PolicyTerminationDate;
        partial void OnPolicyTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPolicyTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TerminationReasonId
        {
            get
            {
                return _TerminationReasonId;
            }
            set
            {
                OnTerminationReasonIdChanging(value);
                ReportPropertyChanging("TerminationReasonId");
                _TerminationReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationReasonId");
                OnTerminationReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TerminationReasonId;
        partial void OnTerminationReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnTerminationReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private global::System.Boolean _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(global::System.Boolean value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private global::System.Boolean _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(global::System.Boolean value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackPayment
        {
            get
            {
                return _IsTrackPayment;
            }
            set
            {
                OnIsTrackPaymentChanging(value);
                ReportPropertyChanging("IsTrackPayment");
                _IsTrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackPayment");
                OnIsTrackPaymentChanged();
            }
        }
        private global::System.Boolean _IsTrackPayment;
        partial void OnIsTrackPaymentChanging(global::System.Boolean value);
        partial void OnIsTrackPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IncomingPaymentTypeId
        {
            get
            {
                return _IncomingPaymentTypeId;
            }
            set
            {
                OnIncomingPaymentTypeIdChanging(value);
                ReportPropertyChanging("IncomingPaymentTypeId");
                _IncomingPaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncomingPaymentTypeId");
                OnIncomingPaymentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IncomingPaymentTypeId;
        partial void OnIncomingPaymentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnIncomingPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReplacedBy
        {
            get
            {
                return _ReplacedBy;
            }
            set
            {
                OnReplacedByChanging(value);
                ReportPropertyChanging("ReplacedBy");
                _ReplacedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplacedBy");
                OnReplacedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ReplacedBy;
        partial void OnReplacedByChanging(Nullable<global::System.Guid> value);
        partial void OnReplacedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DuplicateFrom
        {
            get
            {
                return _DuplicateFrom;
            }
            set
            {
                OnDuplicateFromChanging(value);
                ReportPropertyChanging("DuplicateFrom");
                _DuplicateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DuplicateFrom");
                OnDuplicateFromChanged();
            }
        }
        private Nullable<global::System.Guid> _DuplicateFrom;
        partial void OnDuplicateFromChanging(Nullable<global::System.Guid> value);
        partial void OnDuplicateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsIncomingBasicSchedule
        {
            get
            {
                return _IsIncomingBasicSchedule;
            }
            set
            {
                OnIsIncomingBasicScheduleChanging(value);
                ReportPropertyChanging("IsIncomingBasicSchedule");
                _IsIncomingBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIncomingBasicSchedule");
                OnIsIncomingBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsIncomingBasicSchedule;
        partial void OnIsIncomingBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsIncomingBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOutGoingBasicSchedule
        {
            get
            {
                return _IsOutGoingBasicSchedule;
            }
            set
            {
                OnIsOutGoingBasicScheduleChanging(value);
                ReportPropertyChanging("IsOutGoingBasicSchedule");
                _IsOutGoingBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOutGoingBasicSchedule");
                OnIsOutGoingBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOutGoingBasicSchedule;
        partial void OnIsOutGoingBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOutGoingBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierId;
        partial void OnCarrierIdChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Double> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advance
        {
            get
            {
                return _Advance;
            }
            set
            {
                OnAdvanceChanging(value);
                ReportPropertyChanging("Advance");
                _Advance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Advance");
                OnAdvanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Advance;
        partial void OnAdvanceChanging(Nullable<global::System.Int32> value);
        partial void OnAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Carriers", "Carriers")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PoliciesHistory_Carriers", "Carriers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PoliciesHistory_Carriers", "Carriers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PoliciesHistory_Carriers", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_PoliciesHistory_Carriers", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Clients", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PoliciesHistory_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PoliciesHistory_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PoliciesHistory_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.FK_PoliciesHistory_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Coverages", "Coverages")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PoliciesHistory_Coverages", "Coverages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PoliciesHistory_Coverages", "Coverages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PoliciesHistory_Coverages", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_PoliciesHistory_Coverages", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Licensees1", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PoliciesHistory_Licensees1", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PoliciesHistory_Licensees1", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_PoliciesHistory_Licensees1", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_PoliciesHistory_Licensees1", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes")]
        public MasterIncomingPaymentType MasterIncomingPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PoliciesHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PoliciesHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIncomingPaymentType> MasterIncomingPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PoliciesHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIncomingPaymentType>("Model.FK_PoliciesHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterPolicyModes", "MasterPolicyModes")]
        public MasterPolicyMode MasterPolicyMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PoliciesHistory_MasterPolicyModes", "MasterPolicyModes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PoliciesHistory_MasterPolicyModes", "MasterPolicyModes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyMode> MasterPolicyModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PoliciesHistory_MasterPolicyModes", "MasterPolicyModes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyMode>("Model.FK_PoliciesHistory_MasterPolicyModes", "MasterPolicyModes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterPolicyStatus", "MasterPolicyStatus")]
        public MasterPolicyStatu MasterPolicyStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyStatu>("Model.FK_PoliciesHistory_MasterPolicyStatus", "MasterPolicyStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyStatu>("Model.FK_PoliciesHistory_MasterPolicyStatus", "MasterPolicyStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyStatu> MasterPolicyStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyStatu>("Model.FK_PoliciesHistory_MasterPolicyStatus", "MasterPolicyStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyStatu>("Model.FK_PoliciesHistory_MasterPolicyStatus", "MasterPolicyStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons")]
        public MasterPolicyTerminationReason MasterPolicyTerminationReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyTerminationReason>("Model.FK_PoliciesHistory_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyTerminationReason>("Model.FK_PoliciesHistory_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyTerminationReason> MasterPolicyTerminationReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyTerminationReason>("Model.FK_PoliciesHistory_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyTerminationReason>("Model.FK_PoliciesHistory_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PoliciesHistory_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PoliciesHistory_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PoliciesHistory_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PoliciesHistory_Payors", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PoliciesHistory_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PoliciesHistory_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PoliciesHistory_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PoliciesHistory_UserCredentials", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Policy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Policy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Policy object.
        /// </summary>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        /// <param name="isTrackMissingMonth">Initial value of the IsTrackMissingMonth property.</param>
        /// <param name="isTrackIncomingPercentage">Initial value of the IsTrackIncomingPercentage property.</param>
        /// <param name="isTrackPayment">Initial value of the IsTrackPayment property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Policy CreatePolicy(global::System.Guid policyId, global::System.Boolean isTrackMissingMonth, global::System.Boolean isTrackIncomingPercentage, global::System.Boolean isTrackPayment, global::System.Boolean isDeleted, global::System.Boolean isLocked, global::System.Byte[] rowVersion)
        {
            Policy policy = new Policy();
            policy.PolicyId = policyId;
            policy.IsTrackMissingMonth = isTrackMissingMonth;
            policy.IsTrackIncomingPercentage = isTrackIncomingPercentage;
            policy.IsTrackPayment = isTrackPayment;
            policy.IsDeleted = isDeleted;
            policy.IsLocked = isLocked;
            policy.RowVersion = rowVersion;
            return policy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                if (_PolicyId != value)
                {
                    OnPolicyIdChanging(value);
                    ReportPropertyChanging("PolicyId");
                    _PolicyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyId");
                    OnPolicyIdChanged();
                }
            }
        }
        private global::System.Guid _PolicyId;
        partial void OnPolicyIdChanging(global::System.Guid value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyStatusId
        {
            get
            {
                return _PolicyStatusId;
            }
            set
            {
                OnPolicyStatusIdChanging(value);
                ReportPropertyChanging("PolicyStatusId");
                _PolicyStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyStatusId");
                OnPolicyStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyStatusId;
        partial void OnPolicyStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private global::System.String _PolicyType;
        partial void OnPolicyTypeChanging(global::System.String value);
        partial void OnPolicyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyClientId
        {
            get
            {
                return _PolicyClientId;
            }
            set
            {
                OnPolicyClientIdChanging(value);
                ReportPropertyChanging("PolicyClientId");
                _PolicyClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyClientId");
                OnPolicyClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyClientId;
        partial void OnPolicyClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyLicenseeId
        {
            get
            {
                return _PolicyLicenseeId;
            }
            set
            {
                OnPolicyLicenseeIdChanging(value);
                ReportPropertyChanging("PolicyLicenseeId");
                _PolicyLicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyLicenseeId");
                OnPolicyLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyLicenseeId;
        partial void OnPolicyLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalEffectiveDate
        {
            get
            {
                return _OriginalEffectiveDate;
            }
            set
            {
                OnOriginalEffectiveDateChanging(value);
                ReportPropertyChanging("OriginalEffectiveDate");
                _OriginalEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalEffectiveDate");
                OnOriginalEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalEffectiveDate;
        partial void OnOriginalEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFromDate
        {
            get
            {
                return _TrackFromDate;
            }
            set
            {
                OnTrackFromDateChanging(value);
                ReportPropertyChanging("TrackFromDate");
                _TrackFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFromDate");
                OnTrackFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFromDate;
        partial void OnTrackFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                OnPolicyModeIdChanging(value);
                ReportPropertyChanging("PolicyModeId");
                _PolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId");
                OnPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId;
        partial void OnPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MonthlyPremium
        {
            get
            {
                return _MonthlyPremium;
            }
            set
            {
                OnMonthlyPremiumChanging(value);
                ReportPropertyChanging("MonthlyPremium");
                _MonthlyPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthlyPremium");
                OnMonthlyPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _MonthlyPremium;
        partial void OnMonthlyPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnMonthlyPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittedThrough
        {
            get
            {
                return _SubmittedThrough;
            }
            set
            {
                OnSubmittedThroughChanging(value);
                ReportPropertyChanging("SubmittedThrough");
                _SubmittedThrough = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubmittedThrough");
                OnSubmittedThroughChanged();
            }
        }
        private global::System.String _SubmittedThrough;
        partial void OnSubmittedThroughChanging(global::System.String value);
        partial void OnSubmittedThroughChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PolicyTerminationDate
        {
            get
            {
                return _PolicyTerminationDate;
            }
            set
            {
                OnPolicyTerminationDateChanging(value);
                ReportPropertyChanging("PolicyTerminationDate");
                _PolicyTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyTerminationDate");
                OnPolicyTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PolicyTerminationDate;
        partial void OnPolicyTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPolicyTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TerminationReasonId
        {
            get
            {
                return _TerminationReasonId;
            }
            set
            {
                OnTerminationReasonIdChanging(value);
                ReportPropertyChanging("TerminationReasonId");
                _TerminationReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationReasonId");
                OnTerminationReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TerminationReasonId;
        partial void OnTerminationReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnTerminationReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private global::System.Boolean _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(global::System.Boolean value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private global::System.Boolean _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(global::System.Boolean value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackPayment
        {
            get
            {
                return _IsTrackPayment;
            }
            set
            {
                OnIsTrackPaymentChanging(value);
                ReportPropertyChanging("IsTrackPayment");
                _IsTrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackPayment");
                OnIsTrackPaymentChanged();
            }
        }
        private global::System.Boolean _IsTrackPayment;
        partial void OnIsTrackPaymentChanging(global::System.Boolean value);
        partial void OnIsTrackPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IncomingPaymentTypeId
        {
            get
            {
                return _IncomingPaymentTypeId;
            }
            set
            {
                OnIncomingPaymentTypeIdChanging(value);
                ReportPropertyChanging("IncomingPaymentTypeId");
                _IncomingPaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncomingPaymentTypeId");
                OnIncomingPaymentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IncomingPaymentTypeId;
        partial void OnIncomingPaymentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnIncomingPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReplacedBy
        {
            get
            {
                return _ReplacedBy;
            }
            set
            {
                OnReplacedByChanging(value);
                ReportPropertyChanging("ReplacedBy");
                _ReplacedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplacedBy");
                OnReplacedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ReplacedBy;
        partial void OnReplacedByChanging(Nullable<global::System.Guid> value);
        partial void OnReplacedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DuplicateFrom
        {
            get
            {
                return _DuplicateFrom;
            }
            set
            {
                OnDuplicateFromChanging(value);
                ReportPropertyChanging("DuplicateFrom");
                _DuplicateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DuplicateFrom");
                OnDuplicateFromChanged();
            }
        }
        private Nullable<global::System.Guid> _DuplicateFrom;
        partial void OnDuplicateFromChanging(Nullable<global::System.Guid> value);
        partial void OnDuplicateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsIncomingBasicSchedule
        {
            get
            {
                return _IsIncomingBasicSchedule;
            }
            set
            {
                OnIsIncomingBasicScheduleChanging(value);
                ReportPropertyChanging("IsIncomingBasicSchedule");
                _IsIncomingBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIncomingBasicSchedule");
                OnIsIncomingBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsIncomingBasicSchedule;
        partial void OnIsIncomingBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsIncomingBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOutGoingBasicSchedule
        {
            get
            {
                return _IsOutGoingBasicSchedule;
            }
            set
            {
                OnIsOutGoingBasicScheduleChanging(value);
                ReportPropertyChanging("IsOutGoingBasicSchedule");
                _IsOutGoingBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOutGoingBasicSchedule");
                OnIsOutGoingBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOutGoingBasicSchedule;
        partial void OnIsOutGoingBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOutGoingBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierId;
        partial void OnCarrierIdChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Double> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivatedOn
        {
            get
            {
                return _ActivatedOn;
            }
            set
            {
                OnActivatedOnChanging(value);
                ReportPropertyChanging("ActivatedOn");
                _ActivatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivatedOn");
                OnActivatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivatedOn;
        partial void OnActivatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnActivatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastFollowUpRuns
        {
            get
            {
                return _LastFollowUpRuns;
            }
            set
            {
                OnLastFollowUpRunsChanging(value);
                ReportPropertyChanging("LastFollowUpRuns");
                _LastFollowUpRuns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFollowUpRuns");
                OnLastFollowUpRunsChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastFollowUpRuns;
        partial void OnLastFollowUpRunsChanging(Nullable<global::System.DateTime> value);
        partial void OnLastFollowUpRunsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advance
        {
            get
            {
                return _Advance;
            }
            set
            {
                OnAdvanceChanging(value);
                ReportPropertyChanging("Advance");
                _Advance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Advance");
                OnAdvanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Advance;
        partial void OnAdvanceChanging(Nullable<global::System.Int32> value);
        partial void OnAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                OnUserCredentialIdChanging(value);
                ReportPropertyChanging("UserCredentialId");
                _UserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCredentialId");
                OnUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserCredentialId;
        partial void OnUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccoutExec
        {
            get
            {
                return _AccoutExec;
            }
            set
            {
                OnAccoutExecChanging(value);
                ReportPropertyChanging("AccoutExec");
                _AccoutExec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccoutExec");
                OnAccoutExecChanged();
            }
        }
        private global::System.String _AccoutExec;
        partial void OnAccoutExecChanging(global::System.String value);
        partial void OnAccoutExecChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastNoMissIssueDate
        {
            get
            {
                return _LastNoMissIssueDate;
            }
            set
            {
                OnLastNoMissIssueDateChanging(value);
                ReportPropertyChanging("LastNoMissIssueDate");
                _LastNoMissIssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastNoMissIssueDate");
                OnLastNoMissIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastNoMissIssueDate;
        partial void OnLastNoMissIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastNoMissIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastNoVarIssueDate
        {
            get
            {
                return _LastNoVarIssueDate;
            }
            set
            {
                OnLastNoVarIssueDateChanging(value);
                ReportPropertyChanging("LastNoVarIssueDate");
                _LastNoVarIssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastNoVarIssueDate");
                OnLastNoVarIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastNoVarIssueDate;
        partial void OnLastNoVarIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastNoVarIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCustomBasicSchedule
        {
            get
            {
                return _IsCustomBasicSchedule;
            }
            set
            {
                OnIsCustomBasicScheduleChanging(value);
                ReportPropertyChanging("IsCustomBasicSchedule");
                _IsCustomBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCustomBasicSchedule");
                OnIsCustomBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCustomBasicSchedule;
        partial void OnIsCustomBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCustomBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomScheduleDateType
        {
            get
            {
                return _CustomScheduleDateType;
            }
            set
            {
                OnCustomScheduleDateTypeChanging(value);
                ReportPropertyChanging("CustomScheduleDateType");
                _CustomScheduleDateType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomScheduleDateType");
                OnCustomScheduleDateTypeChanged();
            }
        }
        private global::System.String _CustomScheduleDateType;
        partial void OnCustomScheduleDateTypeChanging(global::System.String value);
        partial void OnCustomScheduleDateTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PrimaryAgent
        {
            get
            {
                return _PrimaryAgent;
            }
            set
            {
                OnPrimaryAgentChanging(value);
                ReportPropertyChanging("PrimaryAgent");
                _PrimaryAgent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryAgent");
                OnPrimaryAgentChanged();
            }
        }
        private Nullable<global::System.Guid> _PrimaryAgent;
        partial void OnPrimaryAgentChanging(Nullable<global::System.Guid> value);
        partial void OnPrimaryAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTieredSchedule
        {
            get
            {
                return _IsTieredSchedule;
            }
            set
            {
                OnIsTieredScheduleChanging(value);
                ReportPropertyChanging("IsTieredSchedule");
                _IsTieredSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTieredSchedule");
                OnIsTieredScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTieredSchedule;
        partial void OnIsTieredScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTieredScheduleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Carriers", "Carriers")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_Policies_Carriers", "Carriers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_Policies_Carriers", "Carriers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_Policies_Carriers", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_Policies_Carriers", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Clients", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_Policies_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_Policies_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_Policies_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.FK_Policies_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Coverages", "Coverages")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_Policies_Coverages", "Coverages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_Policies_Coverages", "Coverages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_Policies_Coverages", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_Policies_Coverages", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Policies", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Policies", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Policies", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LastPolicyViewed_Policies", "LastPolicyViewed")]
        public EntityCollection<LastPolicyViewed> LastPolicyVieweds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LastPolicyViewed>("Model.FK_LastPolicyViewed_Policies", "LastPolicyViewed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LastPolicyViewed>("Model.FK_LastPolicyViewed_Policies", "LastPolicyViewed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Licensees1", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Policies_Licensees1", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Policies_Licensees1", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_Policies_Licensees1", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_Policies_Licensees1", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes")]
        public MasterIncomingPaymentType MasterIncomingPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_Policies_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_Policies_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIncomingPaymentType> MasterIncomingPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_Policies_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIncomingPaymentType>("Model.FK_Policies_MasterIncomingPaymentTypes", "MasterIncomingPaymentTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterPolicyModes", "MasterPolicyModes")]
        public MasterPolicyMode MasterPolicyMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_Policies_MasterPolicyModes", "MasterPolicyModes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_Policies_MasterPolicyModes", "MasterPolicyModes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyMode> MasterPolicyModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_Policies_MasterPolicyModes", "MasterPolicyModes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyMode>("Model.FK_Policies_MasterPolicyModes", "MasterPolicyModes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterPolicyStatus", "MasterPolicyStatus")]
        public MasterPolicyStatu MasterPolicyStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyStatu>("Model.FK_Policies_MasterPolicyStatus", "MasterPolicyStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyStatu>("Model.FK_Policies_MasterPolicyStatus", "MasterPolicyStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyStatu> MasterPolicyStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyStatu>("Model.FK_Policies_MasterPolicyStatus", "MasterPolicyStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyStatu>("Model.FK_Policies_MasterPolicyStatus", "MasterPolicyStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons")]
        public MasterPolicyTerminationReason MasterPolicyTerminationReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyTerminationReason>("Model.FK_Policies_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyTerminationReason>("Model.FK_Policies_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyTerminationReason> MasterPolicyTerminationReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyTerminationReason>("Model.FK_Policies_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyTerminationReason>("Model.FK_Policies_MasterPolicyTerminationReasons", "MasterPolicyTerminationReasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Policies_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Policies_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Policies_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_Policies_Payors", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_Policies_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_Policies_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_Policies_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_Policies_UserCredentials", "UserCredentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingAdvancedSchedules_Policies", "PolicyIncomingAdvancedSchedules")]
        public EntityCollection<PolicyIncomingAdvancedSchedule> PolicyIncomingAdvancedSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyIncomingAdvancedSchedule>("Model.FK_PolicyIncomingAdvancedSchedules_Policies", "PolicyIncomingAdvancedSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyIncomingAdvancedSchedule>("Model.FK_PolicyIncomingAdvancedSchedules_Policies", "PolicyIncomingAdvancedSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingSchedules_Policies", "PolicyIncomingSchedules")]
        public EntityCollection<PolicyIncomingSchedule> PolicyIncomingSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyIncomingSchedule>("Model.FK_PolicyIncomingSchedules_Policies", "PolicyIncomingSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyIncomingSchedule>("Model.FK_PolicyIncomingSchedules_Policies", "PolicyIncomingSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLevelBillingDetail_Policies", "PolicyLevelBillingDetail")]
        public EntityCollection<PolicyLevelBillingDetail> PolicyLevelBillingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLevelBillingDetail>("Model.FK_PolicyLevelBillingDetail_Policies", "PolicyLevelBillingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLevelBillingDetail>("Model.FK_PolicyLevelBillingDetail_Policies", "PolicyLevelBillingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyNotes_Policies", "PolicyNotes")]
        public EntityCollection<PolicyNote> PolicyNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyNote>("Model.FK_PolicyNotes_Policies", "PolicyNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyNote>("Model.FK_PolicyNotes_Policies", "PolicyNotes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_Policy", "PolicyOutgoingAdvancedSchedules")]
        public EntityCollection<PolicyOutgoingAdvancedSchedule> PolicyOutgoingAdvancedSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingAdvancedSchedule>("Model.FK_PolicyOutgoingAdvancedSchedules_Policy", "PolicyOutgoingAdvancedSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingAdvancedSchedule>("Model.FK_PolicyOutgoingAdvancedSchedules_Policy", "PolicyOutgoingAdvancedSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingSchedules_Policies", "PolicyOutgoingSchedules")]
        public EntityCollection<PolicyOutgoingSchedule> PolicyOutgoingSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_Policies", "PolicyOutgoingSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_Policies", "PolicyOutgoingSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_Policies", "PolicyPaymentEntries")]
        public EntityCollection<PolicyPaymentEntry> PolicyPaymentEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_Policies", "PolicyPaymentEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_Policies", "PolicyPaymentEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FollowupIssues_Policies", "FollowupIssue")]
        public EntityCollection<FollowupIssue> FollowupIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_Policies", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowupIssue>("Model.FK_FollowupIssues_Policies", "FollowupIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_Policies", "PolicyLearnedField")]
        public PolicyLearnedField PolicyLearnedField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Policies", "PolicyLearnedField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Policies", "PolicyLearnedField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyLearnedField> PolicyLearnedFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Policies", "PolicyLearnedField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyLearnedField>("Model.FK_PolicyLearnedFields_Policies", "PolicyLearnedField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_Policies", "PolicyLearnedFieldsHistory")]
        public PolicyLearnedFieldsHistory PolicyLearnedFieldsHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Policies", "PolicyLearnedFieldsHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Policies", "PolicyLearnedFieldsHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyLearnedFieldsHistory> PolicyLearnedFieldsHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Policies", "PolicyLearnedFieldsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyLearnedFieldsHistory>("Model.FK_PolicyLearnedFieldsHistory_Policies", "PolicyLearnedFieldsHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyIncomingAdvancedSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyIncomingAdvancedSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyIncomingAdvancedSchedule object.
        /// </summary>
        /// <param name="incomingAdvancedScheduleId">Initial value of the IncomingAdvancedScheduleId property.</param>
        public static PolicyIncomingAdvancedSchedule CreatePolicyIncomingAdvancedSchedule(global::System.Guid incomingAdvancedScheduleId)
        {
            PolicyIncomingAdvancedSchedule policyIncomingAdvancedSchedule = new PolicyIncomingAdvancedSchedule();
            policyIncomingAdvancedSchedule.IncomingAdvancedScheduleId = incomingAdvancedScheduleId;
            return policyIncomingAdvancedSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IncomingAdvancedScheduleId
        {
            get
            {
                return _IncomingAdvancedScheduleId;
            }
            set
            {
                if (_IncomingAdvancedScheduleId != value)
                {
                    OnIncomingAdvancedScheduleIdChanging(value);
                    ReportPropertyChanging("IncomingAdvancedScheduleId");
                    _IncomingAdvancedScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncomingAdvancedScheduleId");
                    OnIncomingAdvancedScheduleIdChanged();
                }
            }
        }
        private global::System.Guid _IncomingAdvancedScheduleId;
        partial void OnIncomingAdvancedScheduleIdChanging(global::System.Guid value);
        partial void OnIncomingAdvancedScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleTypeId
        {
            get
            {
                return _ScheduleTypeId;
            }
            set
            {
                OnScheduleTypeIdChanging(value);
                ReportPropertyChanging("ScheduleTypeId");
                _ScheduleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTypeId");
                OnScheduleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ScheduleTypeId;
        partial void OnScheduleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnScheduleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FromRange
        {
            get
            {
                return _FromRange;
            }
            set
            {
                OnFromRangeChanging(value);
                ReportPropertyChanging("FromRange");
                _FromRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromRange");
                OnFromRangeChanged();
            }
        }
        private Nullable<global::System.Double> _FromRange;
        partial void OnFromRangeChanging(Nullable<global::System.Double> value);
        partial void OnFromRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ToRange
        {
            get
            {
                return _ToRange;
            }
            set
            {
                OnToRangeChanging(value);
                ReportPropertyChanging("ToRange");
                _ToRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToRange");
                OnToRangeChanged();
            }
        }
        private Nullable<global::System.Double> _ToRange;
        partial void OnToRangeChanging(Nullable<global::System.Double> value);
        partial void OnToRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveFromDate
        {
            get
            {
                return _EffectiveFromDate;
            }
            set
            {
                OnEffectiveFromDateChanging(value);
                ReportPropertyChanging("EffectiveFromDate");
                _EffectiveFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveFromDate");
                OnEffectiveFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveFromDate;
        partial void OnEffectiveFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveToDate
        {
            get
            {
                return _EffectiveToDate;
            }
            set
            {
                OnEffectiveToDateChanging(value);
                ReportPropertyChanging("EffectiveToDate");
                _EffectiveToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveToDate");
                OnEffectiveToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveToDate;
        partial void OnEffectiveToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes")]
        public MasterScheduleType MasterScheduleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterScheduleType> MasterScheduleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterScheduleType>("Model.FK_PolicyIncomingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingAdvancedSchedules_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyIncomingAdvancedSchedules_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyIncomingAdvancedSchedules_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyIncomingAdvancedSchedules_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyIncomingAdvancedSchedules_Policies", "Policies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyIncomingSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyIncomingSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyIncomingSchedule object.
        /// </summary>
        /// <param name="incomingScheduleId">Initial value of the IncomingScheduleId property.</param>
        public static PolicyIncomingSchedule CreatePolicyIncomingSchedule(global::System.Guid incomingScheduleId)
        {
            PolicyIncomingSchedule policyIncomingSchedule = new PolicyIncomingSchedule();
            policyIncomingSchedule.IncomingScheduleId = incomingScheduleId;
            return policyIncomingSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IncomingScheduleId
        {
            get
            {
                return _IncomingScheduleId;
            }
            set
            {
                if (_IncomingScheduleId != value)
                {
                    OnIncomingScheduleIdChanging(value);
                    ReportPropertyChanging("IncomingScheduleId");
                    _IncomingScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncomingScheduleId");
                    OnIncomingScheduleIdChanged();
                }
            }
        }
        private global::System.Guid _IncomingScheduleId;
        partial void OnIncomingScheduleIdChanging(global::System.Guid value);
        partial void OnIncomingScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FirstYearPercentage
        {
            get
            {
                return _FirstYearPercentage;
            }
            set
            {
                OnFirstYearPercentageChanging(value);
                ReportPropertyChanging("FirstYearPercentage");
                _FirstYearPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstYearPercentage");
                OnFirstYearPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _FirstYearPercentage;
        partial void OnFirstYearPercentageChanging(Nullable<global::System.Double> value);
        partial void OnFirstYearPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RenewalPercentage
        {
            get
            {
                return _RenewalPercentage;
            }
            set
            {
                OnRenewalPercentageChanging(value);
                ReportPropertyChanging("RenewalPercentage");
                _RenewalPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenewalPercentage");
                OnRenewalPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _RenewalPercentage;
        partial void OnRenewalPercentageChanging(Nullable<global::System.Double> value);
        partial void OnRenewalPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleTypeId
        {
            get
            {
                return _ScheduleTypeId;
            }
            set
            {
                OnScheduleTypeIdChanging(value);
                ReportPropertyChanging("ScheduleTypeId");
                _ScheduleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTypeId");
                OnScheduleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ScheduleTypeId;
        partial void OnScheduleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnScheduleTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "MasterBasicIncomingSchedule")]
        public MasterBasicIncomingSchedule MasterBasicIncomingSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBasicIncomingSchedule>("Model.FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "MasterBasicIncomingSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBasicIncomingSchedule>("Model.FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "MasterBasicIncomingSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterBasicIncomingSchedule> MasterBasicIncomingScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBasicIncomingSchedule>("Model.FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "MasterBasicIncomingSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterBasicIncomingSchedule>("Model.FK_PolicyIncomingSchedules_MasterBasicIncomingSchedule", "MasterBasicIncomingSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyIncomingSchedules_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyIncomingSchedules_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyIncomingSchedules_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyIncomingSchedules_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyIncomingSchedules_Policies", "Policies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyLearnedField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyLearnedField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyLearnedField object.
        /// </summary>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        public static PolicyLearnedField CreatePolicyLearnedField(global::System.Guid policyId)
        {
            PolicyLearnedField policyLearnedField = new PolicyLearnedField();
            policyLearnedField.PolicyId = policyId;
            return policyLearnedField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                if (_PolicyId != value)
                {
                    OnPolicyIdChanging(value);
                    ReportPropertyChanging("PolicyId");
                    _PolicyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyId");
                    OnPolicyIdChanged();
                }
            }
        }
        private global::System.Guid _PolicyId;
        partial void OnPolicyIdChanging(global::System.Guid value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Effective
        {
            get
            {
                return _Effective;
            }
            set
            {
                OnEffectiveChanging(value);
                ReportPropertyChanging("Effective");
                _Effective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Effective");
                OnEffectiveChanged();
            }
        }
        private Nullable<global::System.DateTime> _Effective;
        partial void OnEffectiveChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFrom
        {
            get
            {
                return _TrackFrom;
            }
            set
            {
                OnTrackFromChanging(value);
                ReportPropertyChanging("TrackFrom");
                _TrackFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFrom");
                OnTrackFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFrom;
        partial void OnTrackFromChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAC
        {
            get
            {
                return _PAC;
            }
            set
            {
                OnPACChanging(value);
                ReportPropertyChanging("PAC");
                _PAC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAC");
                OnPACChanged();
            }
        }
        private global::System.String _PAC;
        partial void OnPACChanging(global::System.String value);
        partial void OnPACChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PMC
        {
            get
            {
                return _PMC;
            }
            set
            {
                OnPMCChanging(value);
                ReportPropertyChanging("PMC");
                _PMC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PMC");
                OnPMCChanged();
            }
        }
        private global::System.String _PMC;
        partial void OnPMCChanging(global::System.String value);
        partial void OnPMCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ModalAvgPremium
        {
            get
            {
                return _ModalAvgPremium;
            }
            set
            {
                OnModalAvgPremiumChanging(value);
                ReportPropertyChanging("ModalAvgPremium");
                _ModalAvgPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModalAvgPremium");
                OnModalAvgPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _ModalAvgPremium;
        partial void OnModalAvgPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnModalAvgPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                OnPolicyModeIdChanging(value);
                ReportPropertyChanging("PolicyModeId");
                _PolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId");
                OnPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId;
        partial void OnPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AutoTerminationDate
        {
            get
            {
                return _AutoTerminationDate;
            }
            set
            {
                OnAutoTerminationDateChanging(value);
                ReportPropertyChanging("AutoTerminationDate");
                _AutoTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoTerminationDate");
                OnAutoTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AutoTerminationDate;
        partial void OnAutoTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAutoTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link1
        {
            get
            {
                return _Link1;
            }
            set
            {
                OnLink1Changing(value);
                ReportPropertyChanging("Link1");
                _Link1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link1");
                OnLink1Changed();
            }
        }
        private global::System.String _Link1;
        partial void OnLink1Changing(global::System.String value);
        partial void OnLink1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOn
        {
            get
            {
                return _LastModifiedOn;
            }
            set
            {
                OnLastModifiedOnChanging(value);
                ReportPropertyChanging("LastModifiedOn");
                _LastModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOn");
                OnLastModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOn;
        partial void OnLastModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LastModifiedUserCredentialid
        {
            get
            {
                return _LastModifiedUserCredentialid;
            }
            set
            {
                OnLastModifiedUserCredentialidChanging(value);
                ReportPropertyChanging("LastModifiedUserCredentialid");
                _LastModifiedUserCredentialid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedUserCredentialid");
                OnLastModifiedUserCredentialidChanged();
            }
        }
        private Nullable<global::System.Guid> _LastModifiedUserCredentialid;
        partial void OnLastModifiedUserCredentialidChanging(Nullable<global::System.Guid> value);
        partial void OnLastModifiedUserCredentialidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Guid> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompTypeID
        {
            get
            {
                return _CompTypeID;
            }
            set
            {
                OnCompTypeIDChanging(value);
                ReportPropertyChanging("CompTypeID");
                _CompTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompTypeID");
                OnCompTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompTypeID;
        partial void OnCompTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorSysID
        {
            get
            {
                return _PayorSysID;
            }
            set
            {
                OnPayorSysIDChanging(value);
                ReportPropertyChanging("PayorSysID");
                _PayorSysID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorSysID");
                OnPayorSysIDChanged();
            }
        }
        private global::System.String _PayorSysID;
        partial void OnPayorSysIDChanging(global::System.String value);
        partial void OnPayorSysIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Renewal
        {
            get
            {
                return _Renewal;
            }
            set
            {
                OnRenewalChanging(value);
                ReportPropertyChanging("Renewal");
                _Renewal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Renewal");
                OnRenewalChanged();
            }
        }
        private global::System.String _Renewal;
        partial void OnRenewalChanging(global::System.String value);
        partial void OnRenewalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompScheduleType
        {
            get
            {
                return _CompScheduleType;
            }
            set
            {
                OnCompScheduleTypeChanging(value);
                ReportPropertyChanging("CompScheduleType");
                _CompScheduleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompScheduleType");
                OnCompScheduleTypeChanged();
            }
        }
        private global::System.String _CompScheduleType;
        partial void OnCompScheduleTypeChanging(global::System.String value);
        partial void OnCompScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierId;
        partial void OnCarrierIdChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PreviousEffectiveDate
        {
            get
            {
                return _PreviousEffectiveDate;
            }
            set
            {
                OnPreviousEffectiveDateChanging(value);
                ReportPropertyChanging("PreviousEffectiveDate");
                _PreviousEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousEffectiveDate");
                OnPreviousEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PreviousEffectiveDate;
        partial void OnPreviousEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPreviousEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousPolicyModeId
        {
            get
            {
                return _PreviousPolicyModeId;
            }
            set
            {
                OnPreviousPolicyModeIdChanging(value);
                ReportPropertyChanging("PreviousPolicyModeId");
                _PreviousPolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousPolicyModeId");
                OnPreviousPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousPolicyModeId;
        partial void OnPreviousPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierNickName
        {
            get
            {
                return _CarrierNickName;
            }
            set
            {
                OnCarrierNickNameChanging(value);
                ReportPropertyChanging("CarrierNickName");
                _CarrierNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierNickName");
                OnCarrierNickNameChanged();
            }
        }
        private global::System.String _CarrierNickName;
        partial void OnCarrierNickNameChanging(global::System.String value);
        partial void OnCarrierNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverageNickName
        {
            get
            {
                return _CoverageNickName;
            }
            set
            {
                OnCoverageNickNameChanging(value);
                ReportPropertyChanging("CoverageNickName");
                _CoverageNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverageNickName");
                OnCoverageNickNameChanged();
            }
        }
        private global::System.String _CoverageNickName;
        partial void OnCoverageNickNameChanging(global::System.String value);
        partial void OnCoverageNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advance
        {
            get
            {
                return _Advance;
            }
            set
            {
                OnAdvanceChanging(value);
                ReportPropertyChanging("Advance");
                _Advance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Advance");
                OnAdvanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Advance;
        partial void OnAdvanceChanging(Nullable<global::System.Int32> value);
        partial void OnAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                OnUserCredentialIdChanging(value);
                ReportPropertyChanging("UserCredentialId");
                _UserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCredentialId");
                OnUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserCredentialId;
        partial void OnUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccoutExec
        {
            get
            {
                return _AccoutExec;
            }
            set
            {
                OnAccoutExecChanging(value);
                ReportPropertyChanging("AccoutExec");
                _AccoutExec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccoutExec");
                OnAccoutExecChanged();
            }
        }
        private global::System.String _AccoutExec;
        partial void OnAccoutExecChanging(global::System.String value);
        partial void OnAccoutExecChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImportPolicyID
        {
            get
            {
                return _ImportPolicyID;
            }
            set
            {
                OnImportPolicyIDChanging(value);
                ReportPropertyChanging("ImportPolicyID");
                _ImportPolicyID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportPolicyID");
                OnImportPolicyIDChanged();
            }
        }
        private global::System.String _ImportPolicyID;
        partial void OnImportPolicyIDChanging(global::System.String value);
        partial void OnImportPolicyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_PayorCarriers", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PolicyLearnedFields_PayorCarriers", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PolicyLearnedFields_PayorCarriers", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PolicyLearnedFields_PayorCarriers", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_PolicyLearnedFields_PayorCarriers", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_Clients", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PolicyLearnedFields_Clients", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PolicyLearnedFields_Clients", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PolicyLearnedFields_Clients", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.FK_PolicyLearnedFields_Clients", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_CarrierCoverages", "Coverage")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PolicyLearnedFields_CarrierCoverages", "Coverage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PolicyLearnedFields_CarrierCoverages", "Coverage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PolicyLearnedFields_CarrierCoverages", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_PolicyLearnedFields_CarrierCoverages", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "MasterIncomingPaymentType")]
        public MasterIncomingPaymentType MasterIncomingPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "MasterIncomingPaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "MasterIncomingPaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIncomingPaymentType> MasterIncomingPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "MasterIncomingPaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFields_MasterIncomingPaymentTypes", "MasterIncomingPaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_MasterPolicyModes", "MasterPolicyMode")]
        public MasterPolicyMode MasterPolicyMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFields_MasterPolicyModes", "MasterPolicyMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFields_MasterPolicyModes", "MasterPolicyMode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyMode> MasterPolicyModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFields_MasterPolicyModes", "MasterPolicyMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFields_MasterPolicyModes", "MasterPolicyMode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_Payors", "Payor")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PolicyLearnedFields_Payors", "Payor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PolicyLearnedFields_Payors", "Payor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PolicyLearnedFields_Payors", "Payor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PolicyLearnedFields_Payors", "Payor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFields_Policies", "Policy")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLearnedFields_Policies", "Policy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLearnedFields_Policies", "Policy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLearnedFields_Policies", "Policy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyLearnedFields_Policies", "Policy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyLearnedFieldsHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyLearnedFieldsHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyLearnedFieldsHistory object.
        /// </summary>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        public static PolicyLearnedFieldsHistory CreatePolicyLearnedFieldsHistory(global::System.Guid policyId)
        {
            PolicyLearnedFieldsHistory policyLearnedFieldsHistory = new PolicyLearnedFieldsHistory();
            policyLearnedFieldsHistory.PolicyId = policyId;
            return policyLearnedFieldsHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                if (_PolicyId != value)
                {
                    OnPolicyIdChanging(value);
                    ReportPropertyChanging("PolicyId");
                    _PolicyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyId");
                    OnPolicyIdChanged();
                }
            }
        }
        private global::System.Guid _PolicyId;
        partial void OnPolicyIdChanging(global::System.Guid value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Effective
        {
            get
            {
                return _Effective;
            }
            set
            {
                OnEffectiveChanging(value);
                ReportPropertyChanging("Effective");
                _Effective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Effective");
                OnEffectiveChanged();
            }
        }
        private Nullable<global::System.DateTime> _Effective;
        partial void OnEffectiveChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFrom
        {
            get
            {
                return _TrackFrom;
            }
            set
            {
                OnTrackFromChanging(value);
                ReportPropertyChanging("TrackFrom");
                _TrackFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFrom");
                OnTrackFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFrom;
        partial void OnTrackFromChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAC
        {
            get
            {
                return _PAC;
            }
            set
            {
                OnPACChanging(value);
                ReportPropertyChanging("PAC");
                _PAC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAC");
                OnPACChanged();
            }
        }
        private global::System.String _PAC;
        partial void OnPACChanging(global::System.String value);
        partial void OnPACChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PMC
        {
            get
            {
                return _PMC;
            }
            set
            {
                OnPMCChanging(value);
                ReportPropertyChanging("PMC");
                _PMC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PMC");
                OnPMCChanged();
            }
        }
        private global::System.String _PMC;
        partial void OnPMCChanging(global::System.String value);
        partial void OnPMCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ModalAvgPremium
        {
            get
            {
                return _ModalAvgPremium;
            }
            set
            {
                OnModalAvgPremiumChanging(value);
                ReportPropertyChanging("ModalAvgPremium");
                _ModalAvgPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModalAvgPremium");
                OnModalAvgPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _ModalAvgPremium;
        partial void OnModalAvgPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnModalAvgPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                OnPolicyModeIdChanging(value);
                ReportPropertyChanging("PolicyModeId");
                _PolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId");
                OnPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId;
        partial void OnPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AutoTerminationDate
        {
            get
            {
                return _AutoTerminationDate;
            }
            set
            {
                OnAutoTerminationDateChanging(value);
                ReportPropertyChanging("AutoTerminationDate");
                _AutoTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoTerminationDate");
                OnAutoTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AutoTerminationDate;
        partial void OnAutoTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAutoTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link1
        {
            get
            {
                return _Link1;
            }
            set
            {
                OnLink1Changing(value);
                ReportPropertyChanging("Link1");
                _Link1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link1");
                OnLink1Changed();
            }
        }
        private global::System.String _Link1;
        partial void OnLink1Changing(global::System.String value);
        partial void OnLink1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOn
        {
            get
            {
                return _LastModifiedOn;
            }
            set
            {
                OnLastModifiedOnChanging(value);
                ReportPropertyChanging("LastModifiedOn");
                _LastModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOn");
                OnLastModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOn;
        partial void OnLastModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LastModifiedUserCredentialid
        {
            get
            {
                return _LastModifiedUserCredentialid;
            }
            set
            {
                OnLastModifiedUserCredentialidChanging(value);
                ReportPropertyChanging("LastModifiedUserCredentialid");
                _LastModifiedUserCredentialid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedUserCredentialid");
                OnLastModifiedUserCredentialidChanged();
            }
        }
        private Nullable<global::System.Guid> _LastModifiedUserCredentialid;
        partial void OnLastModifiedUserCredentialidChanging(Nullable<global::System.Guid> value);
        partial void OnLastModifiedUserCredentialidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Guid> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompTypeID
        {
            get
            {
                return _CompTypeID;
            }
            set
            {
                OnCompTypeIDChanging(value);
                ReportPropertyChanging("CompTypeID");
                _CompTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompTypeID");
                OnCompTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompTypeID;
        partial void OnCompTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorSysID
        {
            get
            {
                return _PayorSysID;
            }
            set
            {
                OnPayorSysIDChanging(value);
                ReportPropertyChanging("PayorSysID");
                _PayorSysID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorSysID");
                OnPayorSysIDChanged();
            }
        }
        private global::System.String _PayorSysID;
        partial void OnPayorSysIDChanging(global::System.String value);
        partial void OnPayorSysIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Renewal
        {
            get
            {
                return _Renewal;
            }
            set
            {
                OnRenewalChanging(value);
                ReportPropertyChanging("Renewal");
                _Renewal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Renewal");
                OnRenewalChanged();
            }
        }
        private global::System.String _Renewal;
        partial void OnRenewalChanging(global::System.String value);
        partial void OnRenewalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompScheduleType
        {
            get
            {
                return _CompScheduleType;
            }
            set
            {
                OnCompScheduleTypeChanging(value);
                ReportPropertyChanging("CompScheduleType");
                _CompScheduleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompScheduleType");
                OnCompScheduleTypeChanged();
            }
        }
        private global::System.String _CompScheduleType;
        partial void OnCompScheduleTypeChanging(global::System.String value);
        partial void OnCompScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierId;
        partial void OnCarrierIdChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PreviousEffectiveDate
        {
            get
            {
                return _PreviousEffectiveDate;
            }
            set
            {
                OnPreviousEffectiveDateChanging(value);
                ReportPropertyChanging("PreviousEffectiveDate");
                _PreviousEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousEffectiveDate");
                OnPreviousEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PreviousEffectiveDate;
        partial void OnPreviousEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPreviousEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousPolicyModeId
        {
            get
            {
                return _PreviousPolicyModeId;
            }
            set
            {
                OnPreviousPolicyModeIdChanging(value);
                ReportPropertyChanging("PreviousPolicyModeId");
                _PreviousPolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousPolicyModeId");
                OnPreviousPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousPolicyModeId;
        partial void OnPreviousPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierNickName
        {
            get
            {
                return _CarrierNickName;
            }
            set
            {
                OnCarrierNickNameChanging(value);
                ReportPropertyChanging("CarrierNickName");
                _CarrierNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierNickName");
                OnCarrierNickNameChanged();
            }
        }
        private global::System.String _CarrierNickName;
        partial void OnCarrierNickNameChanging(global::System.String value);
        partial void OnCarrierNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverageNickName
        {
            get
            {
                return _CoverageNickName;
            }
            set
            {
                OnCoverageNickNameChanging(value);
                ReportPropertyChanging("CoverageNickName");
                _CoverageNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverageNickName");
                OnCoverageNickNameChanged();
            }
        }
        private global::System.String _CoverageNickName;
        partial void OnCoverageNickNameChanging(global::System.String value);
        partial void OnCoverageNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advance
        {
            get
            {
                return _Advance;
            }
            set
            {
                OnAdvanceChanging(value);
                ReportPropertyChanging("Advance");
                _Advance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Advance");
                OnAdvanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Advance;
        partial void OnAdvanceChanging(Nullable<global::System.Int32> value);
        partial void OnAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImportPolicyID
        {
            get
            {
                return _ImportPolicyID;
            }
            set
            {
                OnImportPolicyIDChanging(value);
                ReportPropertyChanging("ImportPolicyID");
                _ImportPolicyID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportPolicyID");
                OnImportPolicyIDChanged();
            }
        }
        private global::System.String _ImportPolicyID;
        partial void OnImportPolicyIDChanging(global::System.String value);
        partial void OnImportPolicyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_PayorCarriers", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PolicyLearnedFieldsHistory_PayorCarriers", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PolicyLearnedFieldsHistory_PayorCarriers", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Model.FK_PolicyLearnedFieldsHistory_PayorCarriers", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Model.FK_PolicyLearnedFieldsHistory_PayorCarriers", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_Clients", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PolicyLearnedFieldsHistory_Clients", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PolicyLearnedFieldsHistory_Clients", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.FK_PolicyLearnedFieldsHistory_Clients", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.FK_PolicyLearnedFieldsHistory_Clients", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_CarrierCoverages", "Coverage")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PolicyLearnedFieldsHistory_CarrierCoverages", "Coverage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PolicyLearnedFieldsHistory_CarrierCoverages", "Coverage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Model.FK_PolicyLearnedFieldsHistory_CarrierCoverages", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Model.FK_PolicyLearnedFieldsHistory_CarrierCoverages", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentType")]
        public MasterIncomingPaymentType MasterIncomingPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIncomingPaymentType> MasterIncomingPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIncomingPaymentType>("Model.FK_PolicyLearnedFieldsHistory_MasterIncomingPaymentTypes", "MasterIncomingPaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "MasterPolicyMode")]
        public MasterPolicyMode MasterPolicyMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "MasterPolicyMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "MasterPolicyMode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPolicyMode> MasterPolicyModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "MasterPolicyMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPolicyMode>("Model.FK_PolicyLearnedFieldsHistory_MasterPolicyModes", "MasterPolicyMode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_Payors", "Payor")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PolicyLearnedFieldsHistory_Payors", "Payor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PolicyLearnedFieldsHistory_Payors", "Payor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_PolicyLearnedFieldsHistory_Payors", "Payor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_PolicyLearnedFieldsHistory_Payors", "Payor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLearnedFieldsHistory_Policies", "Policy")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLearnedFieldsHistory_Policies", "Policy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLearnedFieldsHistory_Policies", "Policy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLearnedFieldsHistory_Policies", "Policy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyLearnedFieldsHistory_Policies", "Policy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyLevelBillingDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyLevelBillingDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyLevelBillingDetail object.
        /// </summary>
        /// <param name="billingLineId">Initial value of the BillingLineId property.</param>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        public static PolicyLevelBillingDetail CreatePolicyLevelBillingDetail(global::System.Guid billingLineId, global::System.Guid policyId)
        {
            PolicyLevelBillingDetail policyLevelBillingDetail = new PolicyLevelBillingDetail();
            policyLevelBillingDetail.BillingLineId = billingLineId;
            policyLevelBillingDetail.PolicyId = policyId;
            return policyLevelBillingDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BillingLineId
        {
            get
            {
                return _BillingLineId;
            }
            set
            {
                if (_BillingLineId != value)
                {
                    OnBillingLineIdChanging(value);
                    ReportPropertyChanging("BillingLineId");
                    _BillingLineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillingLineId");
                    OnBillingLineIdChanged();
                }
            }
        }
        private global::System.Guid _BillingLineId;
        partial void OnBillingLineIdChanging(global::System.Guid value);
        partial void OnBillingLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalUnits
        {
            get
            {
                return _TotalUnits;
            }
            set
            {
                OnTotalUnitsChanging(value);
                ReportPropertyChanging("TotalUnits");
                _TotalUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalUnits");
                OnTotalUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalUnits;
        partial void OnTotalUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                if (_PolicyId != value)
                {
                    OnPolicyIdChanging(value);
                    ReportPropertyChanging("PolicyId");
                    _PolicyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyId");
                    OnPolicyIdChanged();
                }
            }
        }
        private global::System.Guid _PolicyId;
        partial void OnPolicyIdChanging(global::System.Guid value);
        partial void OnPolicyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "InvoiceBillingLineDetail")]
        public InvoiceBillingLineDetail InvoiceBillingLineDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceBillingLineDetail>("Model.FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "InvoiceBillingLineDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceBillingLineDetail>("Model.FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "InvoiceBillingLineDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceBillingLineDetail> InvoiceBillingLineDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceBillingLineDetail>("Model.FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "InvoiceBillingLineDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceBillingLineDetail>("Model.FK_PolicyLevelBillingDetail_InvoiceBillingLineDetail", "InvoiceBillingLineDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyLevelBillingDetail_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLevelBillingDetail_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLevelBillingDetail_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyLevelBillingDetail_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyLevelBillingDetail_Policies", "Policies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyNote object.
        /// </summary>
        /// <param name="policyNoteId">Initial value of the PolicyNoteId property.</param>
        public static PolicyNote CreatePolicyNote(global::System.Guid policyNoteId)
        {
            PolicyNote policyNote = new PolicyNote();
            policyNote.PolicyNoteId = policyNoteId;
            return policyNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyNoteId
        {
            get
            {
                return _PolicyNoteId;
            }
            set
            {
                if (_PolicyNoteId != value)
                {
                    OnPolicyNoteIdChanging(value);
                    ReportPropertyChanging("PolicyNoteId");
                    _PolicyNoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyNoteId");
                    OnPolicyNoteIdChanged();
                }
            }
        }
        private global::System.Guid _PolicyNoteId;
        partial void OnPolicyNoteIdChanging(global::System.Guid value);
        partial void OnPolicyNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOn
        {
            get
            {
                return _LastModifiedOn;
            }
            set
            {
                OnLastModifiedOnChanging(value);
                ReportPropertyChanging("LastModifiedOn");
                _LastModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOn");
                OnLastModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOn;
        partial void OnLastModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyNotes_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyNotes_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyNotes_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyNotes_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyNotes_Policies", "Policies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyOutgoingAdvancedSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyOutgoingAdvancedSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyOutgoingAdvancedSchedule object.
        /// </summary>
        /// <param name="outgoingAdvancedScheduleId">Initial value of the OutgoingAdvancedScheduleId property.</param>
        /// <param name="isPrimaryAgent">Initial value of the IsPrimaryAgent property.</param>
        public static PolicyOutgoingAdvancedSchedule CreatePolicyOutgoingAdvancedSchedule(global::System.Guid outgoingAdvancedScheduleId, global::System.Boolean isPrimaryAgent)
        {
            PolicyOutgoingAdvancedSchedule policyOutgoingAdvancedSchedule = new PolicyOutgoingAdvancedSchedule();
            policyOutgoingAdvancedSchedule.OutgoingAdvancedScheduleId = outgoingAdvancedScheduleId;
            policyOutgoingAdvancedSchedule.IsPrimaryAgent = isPrimaryAgent;
            return policyOutgoingAdvancedSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OutgoingAdvancedScheduleId
        {
            get
            {
                return _OutgoingAdvancedScheduleId;
            }
            set
            {
                if (_OutgoingAdvancedScheduleId != value)
                {
                    OnOutgoingAdvancedScheduleIdChanging(value);
                    ReportPropertyChanging("OutgoingAdvancedScheduleId");
                    _OutgoingAdvancedScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutgoingAdvancedScheduleId");
                    OnOutgoingAdvancedScheduleIdChanged();
                }
            }
        }
        private global::System.Guid _OutgoingAdvancedScheduleId;
        partial void OnOutgoingAdvancedScheduleIdChanging(global::System.Guid value);
        partial void OnOutgoingAdvancedScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleTypeId
        {
            get
            {
                return _ScheduleTypeId;
            }
            set
            {
                OnScheduleTypeIdChanging(value);
                ReportPropertyChanging("ScheduleTypeId");
                _ScheduleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTypeId");
                OnScheduleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ScheduleTypeId;
        partial void OnScheduleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnScheduleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FromRange
        {
            get
            {
                return _FromRange;
            }
            set
            {
                OnFromRangeChanging(value);
                ReportPropertyChanging("FromRange");
                _FromRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromRange");
                OnFromRangeChanged();
            }
        }
        private Nullable<global::System.Double> _FromRange;
        partial void OnFromRangeChanging(Nullable<global::System.Double> value);
        partial void OnFromRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ToRange
        {
            get
            {
                return _ToRange;
            }
            set
            {
                OnToRangeChanging(value);
                ReportPropertyChanging("ToRange");
                _ToRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToRange");
                OnToRangeChanged();
            }
        }
        private Nullable<global::System.Double> _ToRange;
        partial void OnToRangeChanging(Nullable<global::System.Double> value);
        partial void OnToRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveFromDate
        {
            get
            {
                return _EffectiveFromDate;
            }
            set
            {
                OnEffectiveFromDateChanging(value);
                ReportPropertyChanging("EffectiveFromDate");
                _EffectiveFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveFromDate");
                OnEffectiveFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveFromDate;
        partial void OnEffectiveFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveToDate
        {
            get
            {
                return _EffectiveToDate;
            }
            set
            {
                OnEffectiveToDateChanging(value);
                ReportPropertyChanging("EffectiveToDate");
                _EffectiveToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveToDate");
                OnEffectiveToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveToDate;
        partial void OnEffectiveToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayeeUserCredentialId
        {
            get
            {
                return _PayeeUserCredentialId;
            }
            set
            {
                OnPayeeUserCredentialIdChanging(value);
                ReportPropertyChanging("PayeeUserCredentialId");
                _PayeeUserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayeeUserCredentialId");
                OnPayeeUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayeeUserCredentialId;
        partial void OnPayeeUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayeeUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimaryAgent
        {
            get
            {
                return _IsPrimaryAgent;
            }
            set
            {
                OnIsPrimaryAgentChanging(value);
                ReportPropertyChanging("IsPrimaryAgent");
                _IsPrimaryAgent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimaryAgent");
                OnIsPrimaryAgentChanged();
            }
        }
        private global::System.Boolean _IsPrimaryAgent;
        partial void OnIsPrimaryAgentChanging(global::System.Boolean value);
        partial void OnIsPrimaryAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayeeName
        {
            get
            {
                return _PayeeName;
            }
            set
            {
                OnPayeeNameChanging(value);
                ReportPropertyChanging("PayeeName");
                _PayeeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayeeName");
                OnPayeeNameChanged();
            }
        }
        private global::System.String _PayeeName;
        partial void OnPayeeNameChanging(global::System.String value);
        partial void OnPayeeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes")]
        public MasterScheduleType MasterScheduleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterScheduleType> MasterScheduleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterScheduleType>("Model.FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterScheduleType>("Model.FK_PolicyOutgoingAdvancedSchedules_MasterScheduleTypes", "MasterScheduleTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_Policy", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyOutgoingAdvancedSchedules_Policy", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyOutgoingAdvancedSchedules_Policy", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyOutgoingAdvancedSchedules_Policy", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyOutgoingAdvancedSchedules_Policy", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyOutgoingPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyOutgoingPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyOutgoingPayment object.
        /// </summary>
        /// <param name="outgoingPaymentId">Initial value of the OutgoingPaymentId property.</param>
        public static PolicyOutgoingPayment CreatePolicyOutgoingPayment(global::System.Guid outgoingPaymentId)
        {
            PolicyOutgoingPayment policyOutgoingPayment = new PolicyOutgoingPayment();
            policyOutgoingPayment.OutgoingPaymentId = outgoingPaymentId;
            return policyOutgoingPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OutgoingPaymentId
        {
            get
            {
                return _OutgoingPaymentId;
            }
            set
            {
                if (_OutgoingPaymentId != value)
                {
                    OnOutgoingPaymentIdChanging(value);
                    ReportPropertyChanging("OutgoingPaymentId");
                    _OutgoingPaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutgoingPaymentId");
                    OnOutgoingPaymentIdChanged();
                }
            }
        }
        private global::System.Guid _OutgoingPaymentId;
        partial void OnOutgoingPaymentIdChanging(global::System.Guid value);
        partial void OnOutgoingPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PaymentEntryId
        {
            get
            {
                return _PaymentEntryId;
            }
            set
            {
                OnPaymentEntryIdChanging(value);
                ReportPropertyChanging("PaymentEntryId");
                _PaymentEntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentEntryId");
                OnPaymentEntryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PaymentEntryId;
        partial void OnPaymentEntryIdChanging(Nullable<global::System.Guid> value);
        partial void OnPaymentEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RecipientUserCredentialId
        {
            get
            {
                return _RecipientUserCredentialId;
            }
            set
            {
                OnRecipientUserCredentialIdChanging(value);
                ReportPropertyChanging("RecipientUserCredentialId");
                _RecipientUserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecipientUserCredentialId");
                OnRecipientUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RecipientUserCredentialId;
        partial void OnRecipientUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnRecipientUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PaidAmount
        {
            get
            {
                return _PaidAmount;
            }
            set
            {
                OnPaidAmountChanging(value);
                ReportPropertyChanging("PaidAmount");
                _PaidAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidAmount");
                OnPaidAmountChanged();
            }
        }
        private Nullable<global::System.Double> _PaidAmount;
        partial void OnPaidAmountChanging(Nullable<global::System.Double> value);
        partial void OnPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPaid;
        partial void OnIsPaidChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Premium
        {
            get
            {
                return _Premium;
            }
            set
            {
                OnPremiumChanging(value);
                ReportPropertyChanging("Premium");
                _Premium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Premium");
                OnPremiumChanged();
            }
        }
        private Nullable<global::System.Double> _Premium;
        partial void OnPremiumChanging(Nullable<global::System.Double> value);
        partial void OnPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OutgoingPerUnit
        {
            get
            {
                return _OutgoingPerUnit;
            }
            set
            {
                OnOutgoingPerUnitChanging(value);
                ReportPropertyChanging("OutgoingPerUnit");
                _OutgoingPerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutgoingPerUnit");
                OnOutgoingPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _OutgoingPerUnit;
        partial void OnOutgoingPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnOutgoingPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Double> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Double> value);
        partial void OnPaymentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyPaymentEntry")]
        public PolicyPaymentEntry PolicyPaymentEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyPaymentEntry>("Model.FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyPaymentEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyPaymentEntry>("Model.FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyPaymentEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyPaymentEntry> PolicyPaymentEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyPaymentEntry>("Model.FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyPaymentEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyPaymentEntry>("Model.FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyPaymentEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingPayments_UserCredentials", "UserCredential")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingPayments_UserCredentials", "UserCredential").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingPayments_UserCredentials", "UserCredential").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingPayments_UserCredentials", "UserCredential");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PolicyOutgoingPayments_UserCredentials", "UserCredential", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyOutgoingSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyOutgoingSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyOutgoingSchedule object.
        /// </summary>
        /// <param name="outgoingScheduleId">Initial value of the OutgoingScheduleId property.</param>
        /// <param name="isPrimaryAgent">Initial value of the IsPrimaryAgent property.</param>
        public static PolicyOutgoingSchedule CreatePolicyOutgoingSchedule(global::System.Guid outgoingScheduleId, global::System.Boolean isPrimaryAgent)
        {
            PolicyOutgoingSchedule policyOutgoingSchedule = new PolicyOutgoingSchedule();
            policyOutgoingSchedule.OutgoingScheduleId = outgoingScheduleId;
            policyOutgoingSchedule.IsPrimaryAgent = isPrimaryAgent;
            return policyOutgoingSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OutgoingScheduleId
        {
            get
            {
                return _OutgoingScheduleId;
            }
            set
            {
                if (_OutgoingScheduleId != value)
                {
                    OnOutgoingScheduleIdChanging(value);
                    ReportPropertyChanging("OutgoingScheduleId");
                    _OutgoingScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutgoingScheduleId");
                    OnOutgoingScheduleIdChanged();
                }
            }
        }
        private global::System.Guid _OutgoingScheduleId;
        partial void OnOutgoingScheduleIdChanging(global::System.Guid value);
        partial void OnOutgoingScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayeeUserCredentialId
        {
            get
            {
                return _PayeeUserCredentialId;
            }
            set
            {
                OnPayeeUserCredentialIdChanging(value);
                ReportPropertyChanging("PayeeUserCredentialId");
                _PayeeUserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayeeUserCredentialId");
                OnPayeeUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayeeUserCredentialId;
        partial void OnPayeeUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayeeUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimaryAgent
        {
            get
            {
                return _IsPrimaryAgent;
            }
            set
            {
                OnIsPrimaryAgentChanging(value);
                ReportPropertyChanging("IsPrimaryAgent");
                _IsPrimaryAgent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimaryAgent");
                OnIsPrimaryAgentChanged();
            }
        }
        private global::System.Boolean _IsPrimaryAgent;
        partial void OnIsPrimaryAgentChanging(global::System.Boolean value);
        partial void OnIsPrimaryAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FirstYearPercentage
        {
            get
            {
                return _FirstYearPercentage;
            }
            set
            {
                OnFirstYearPercentageChanging(value);
                ReportPropertyChanging("FirstYearPercentage");
                _FirstYearPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstYearPercentage");
                OnFirstYearPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _FirstYearPercentage;
        partial void OnFirstYearPercentageChanging(Nullable<global::System.Double> value);
        partial void OnFirstYearPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RenewalPercentage
        {
            get
            {
                return _RenewalPercentage;
            }
            set
            {
                OnRenewalPercentageChanging(value);
                ReportPropertyChanging("RenewalPercentage");
                _RenewalPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenewalPercentage");
                OnRenewalPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _RenewalPercentage;
        partial void OnRenewalPercentageChanging(Nullable<global::System.Double> value);
        partial void OnRenewalPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleTypeId
        {
            get
            {
                return _ScheduleTypeId;
            }
            set
            {
                OnScheduleTypeIdChanging(value);
                ReportPropertyChanging("ScheduleTypeId");
                _ScheduleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTypeId");
                OnScheduleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ScheduleTypeId;
        partial void OnScheduleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnScheduleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CustomStartDate
        {
            get
            {
                return _CustomStartDate;
            }
            set
            {
                OnCustomStartDateChanging(value);
                ReportPropertyChanging("CustomStartDate");
                _CustomStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomStartDate");
                OnCustomStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CustomStartDate;
        partial void OnCustomStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCustomStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CustomEndDate
        {
            get
            {
                return _CustomEndDate;
            }
            set
            {
                OnCustomEndDateChanging(value);
                ReportPropertyChanging("CustomEndDate");
                _CustomEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomEndDate");
                OnCustomEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CustomEndDate;
        partial void OnCustomEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCustomEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPercent
        {
            get
            {
                return _SplitPercent;
            }
            set
            {
                OnSplitPercentChanging(value);
                ReportPropertyChanging("SplitPercent");
                _SplitPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercent");
                OnSplitPercentChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPercent;
        partial void OnSplitPercentChanging(Nullable<global::System.Double> value);
        partial void OnSplitPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TierNumber
        {
            get
            {
                return _TierNumber;
            }
            set
            {
                OnTierNumberChanging(value);
                ReportPropertyChanging("TierNumber");
                _TierNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TierNumber");
                OnTierNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _TierNumber;
        partial void OnTierNumberChanging(Nullable<global::System.Int32> value);
        partial void OnTierNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "MasterBasicOutgoingSchedule")]
        public MasterBasicOutgoingSchedule MasterBasicOutgoingSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBasicOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "MasterBasicOutgoingSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBasicOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "MasterBasicOutgoingSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterBasicOutgoingSchedule> MasterBasicOutgoingScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterBasicOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "MasterBasicOutgoingSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterBasicOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_MasterBasicOutgoingSchedule", "MasterBasicOutgoingSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingSchedules_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyOutgoingSchedules_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyOutgoingSchedules_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyOutgoingSchedules_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyOutgoingSchedules_Policies", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingSchedules_UserCredentials", "UserCredential")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingSchedules_UserCredentials", "UserCredential").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingSchedules_UserCredentials", "UserCredential").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_PolicyOutgoingSchedules_UserCredentials", "UserCredential");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_PolicyOutgoingSchedules_UserCredentials", "UserCredential", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyPaymentAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyPaymentAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyPaymentAlert object.
        /// </summary>
        /// <param name="paymentAlertId">Initial value of the PaymentAlertId property.</param>
        public static PolicyPaymentAlert CreatePolicyPaymentAlert(global::System.Guid paymentAlertId)
        {
            PolicyPaymentAlert policyPaymentAlert = new PolicyPaymentAlert();
            policyPaymentAlert.PaymentAlertId = paymentAlertId;
            return policyPaymentAlert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PaymentAlertId
        {
            get
            {
                return _PaymentAlertId;
            }
            set
            {
                if (_PaymentAlertId != value)
                {
                    OnPaymentAlertIdChanging(value);
                    ReportPropertyChanging("PaymentAlertId");
                    _PaymentAlertId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentAlertId");
                    OnPaymentAlertIdChanged();
                }
            }
        }
        private global::System.Guid _PaymentAlertId;
        partial void OnPaymentAlertIdChanging(global::System.Guid value);
        partial void OnPaymentAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PaymentEntryId
        {
            get
            {
                return _PaymentEntryId;
            }
            set
            {
                OnPaymentEntryIdChanging(value);
                ReportPropertyChanging("PaymentEntryId");
                _PaymentEntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentEntryId");
                OnPaymentEntryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PaymentEntryId;
        partial void OnPaymentEntryIdChanging(Nullable<global::System.Guid> value);
        partial void OnPaymentEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AlertTypeId
        {
            get
            {
                return _AlertTypeId;
            }
            set
            {
                OnAlertTypeIdChanging(value);
                ReportPropertyChanging("AlertTypeId");
                _AlertTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertTypeId");
                OnAlertTypeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _AlertTypeId;
        partial void OnAlertTypeIdChanging(Nullable<global::System.Guid> value);
        partial void OnAlertTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                OnUserCredentialIdChanging(value);
                ReportPropertyChanging("UserCredentialId");
                _UserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCredentialId");
                OnUserCredentialIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserCredentialId;
        partial void OnUserCredentialIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PolicyPaymentEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyPaymentEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyPaymentEntry object.
        /// </summary>
        /// <param name="paymentEntryId">Initial value of the PaymentEntryId property.</param>
        public static PolicyPaymentEntry CreatePolicyPaymentEntry(global::System.Guid paymentEntryId)
        {
            PolicyPaymentEntry policyPaymentEntry = new PolicyPaymentEntry();
            policyPaymentEntry.PaymentEntryId = paymentEntryId;
            return policyPaymentEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PaymentEntryId
        {
            get
            {
                return _PaymentEntryId;
            }
            set
            {
                if (_PaymentEntryId != value)
                {
                    OnPaymentEntryIdChanging(value);
                    ReportPropertyChanging("PaymentEntryId");
                    _PaymentEntryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentEntryId");
                    OnPaymentEntryIdChanged();
                }
            }
        }
        private global::System.Guid _PaymentEntryId;
        partial void OnPaymentEntryIdChanging(global::System.Guid value);
        partial void OnPaymentEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatementId
        {
            get
            {
                return _StatementId;
            }
            set
            {
                OnStatementIdChanging(value);
                ReportPropertyChanging("StatementId");
                _StatementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementId");
                OnStatementIdChanged();
            }
        }
        private Nullable<global::System.Guid> _StatementId;
        partial void OnStatementIdChanging(Nullable<global::System.Guid> value);
        partial void OnStatementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentRecived
        {
            get
            {
                return _PaymentRecived;
            }
            set
            {
                OnPaymentRecivedChanging(value);
                ReportPropertyChanging("PaymentRecived");
                _PaymentRecived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentRecived");
                OnPaymentRecivedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentRecived;
        partial void OnPaymentRecivedChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentRecivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CommissionPercentage
        {
            get
            {
                return _CommissionPercentage;
            }
            set
            {
                OnCommissionPercentageChanging(value);
                ReportPropertyChanging("CommissionPercentage");
                _CommissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPercentage");
                OnCommissionPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _CommissionPercentage;
        partial void OnCommissionPercentageChanging(Nullable<global::System.Double> value);
        partial void OnCommissionPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfUnits
        {
            get
            {
                return _NumberOfUnits;
            }
            set
            {
                OnNumberOfUnitsChanging(value);
                ReportPropertyChanging("NumberOfUnits");
                _NumberOfUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUnits");
                OnNumberOfUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfUnits;
        partial void OnNumberOfUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Fee;
        partial void OnFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Double> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPayment
        {
            get
            {
                return _TotalPayment;
            }
            set
            {
                OnTotalPaymentChanging(value);
                ReportPropertyChanging("TotalPayment");
                _TotalPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPayment");
                OnTotalPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPayment;
        partial void OnTotalPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostStatusID
        {
            get
            {
                return _PostStatusID;
            }
            set
            {
                OnPostStatusIDChanging(value);
                ReportPropertyChanging("PostStatusID");
                _PostStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostStatusID");
                OnPostStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PostStatusID;
        partial void OnPostStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnPostStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private Nullable<global::System.Decimal> _Bonus;
        partial void OnBonusChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DollerPerUnit
        {
            get
            {
                return _DollerPerUnit;
            }
            set
            {
                OnDollerPerUnitChanging(value);
                ReportPropertyChanging("DollerPerUnit");
                _DollerPerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DollerPerUnit");
                OnDollerPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _DollerPerUnit;
        partial void OnDollerPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnDollerPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DEUEntryId
        {
            get
            {
                return _DEUEntryId;
            }
            set
            {
                OnDEUEntryIdChanging(value);
                ReportPropertyChanging("DEUEntryId");
                _DEUEntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEUEntryId");
                OnDEUEntryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _DEUEntryId;
        partial void OnDEUEntryIdChanging(Nullable<global::System.Guid> value);
        partial void OnDEUEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExpectedPayment
        {
            get
            {
                return _ExpectedPayment;
            }
            set
            {
                OnExpectedPaymentChanging(value);
                ReportPropertyChanging("ExpectedPayment");
                _ExpectedPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedPayment");
                OnExpectedPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExpectedPayment;
        partial void OnExpectedPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnExpectedPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FollowUpVarIssueId
        {
            get
            {
                return _FollowUpVarIssueId;
            }
            set
            {
                OnFollowUpVarIssueIdChanging(value);
                ReportPropertyChanging("FollowUpVarIssueId");
                _FollowUpVarIssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowUpVarIssueId");
                OnFollowUpVarIssueIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FollowUpVarIssueId;
        partial void OnFollowUpVarIssueIdChanging(Nullable<global::System.Guid> value);
        partial void OnFollowUpVarIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FollowUpIssueResolveOrClosed
        {
            get
            {
                return _FollowUpIssueResolveOrClosed;
            }
            set
            {
                OnFollowUpIssueResolveOrClosedChanging(value);
                ReportPropertyChanging("FollowUpIssueResolveOrClosed");
                _FollowUpIssueResolveOrClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowUpIssueResolveOrClosed");
                OnFollowUpIssueResolveOrClosedChanged();
            }
        }
        private Nullable<global::System.Int32> _FollowUpIssueResolveOrClosed;
        partial void OnFollowUpIssueResolveOrClosedChanging(Nullable<global::System.Int32> value);
        partial void OnFollowUpIssueResolveOrClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLinkPayment
        {
            get
            {
                return _IsLinkPayment;
            }
            set
            {
                OnIsLinkPaymentChanging(value);
                ReportPropertyChanging("IsLinkPayment");
                _IsLinkPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLinkPayment");
                OnIsLinkPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLinkPayment;
        partial void OnIsLinkPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLinkPaymentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_EntriesByDEU", "EntriesByDEU")]
        public EntriesByDEU EntriesByDEU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntriesByDEU>("Model.FK_PolicyPaymentEntries_EntriesByDEU", "EntriesByDEU").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntriesByDEU>("Model.FK_PolicyPaymentEntries_EntriesByDEU", "EntriesByDEU").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntriesByDEU> EntriesByDEUReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntriesByDEU>("Model.FK_PolicyPaymentEntries_EntriesByDEU", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntriesByDEU>("Model.FK_PolicyPaymentEntries_EntriesByDEU", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_MasterPostStatus", "MasterPostStatus")]
        public MasterPostStatu MasterPostStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPostStatu>("Model.FK_PolicyPaymentEntries_MasterPostStatus", "MasterPostStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPostStatu>("Model.FK_PolicyPaymentEntries_MasterPostStatus", "MasterPostStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPostStatu> MasterPostStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPostStatu>("Model.FK_PolicyPaymentEntries_MasterPostStatus", "MasterPostStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPostStatu>("Model.FK_PolicyPaymentEntries_MasterPostStatus", "MasterPostStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_Policies", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyPaymentEntries_Policies", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyPaymentEntries_Policies", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("Model.FK_PolicyPaymentEntries_Policies", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("Model.FK_PolicyPaymentEntries_Policies", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_FollowupIssues", "FollowupIssue")]
        public FollowupIssue FollowupIssue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FollowupIssue>("Model.FK_PolicyPaymentEntries_FollowupIssues", "FollowupIssue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FollowupIssue>("Model.FK_PolicyPaymentEntries_FollowupIssues", "FollowupIssue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FollowupIssue> FollowupIssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FollowupIssue>("Model.FK_PolicyPaymentEntries_FollowupIssues", "FollowupIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FollowupIssue>("Model.FK_PolicyPaymentEntries_FollowupIssues", "FollowupIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_Statements", "Statement")]
        public Statement Statement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statement>("Model.FK_PolicyPaymentEntries_Statements", "Statement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statement>("Model.FK_PolicyPaymentEntries_Statements", "Statement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statement> StatementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statement>("Model.FK_PolicyPaymentEntries_Statements", "Statement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statement>("Model.FK_PolicyPaymentEntries_Statements", "Statement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyOutgoingPayment")]
        public EntityCollection<PolicyOutgoingPayment> PolicyOutgoingPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingPayment>("Model.FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyOutgoingPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingPayment>("Model.FK_PolicyOutgoingPayments_PolicyPaymentEntries", "PolicyOutgoingPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="SendAlertMail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SendAlertMail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SendAlertMail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SendAlertMail CreateSendAlertMail(global::System.Int32 id)
        {
            SendAlertMail sendAlertMail = new SendAlertMail();
            sendAlertMail.ID = id;
            return sendAlertMail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicensesID
        {
            get
            {
                return _LicensesID;
            }
            set
            {
                OnLicensesIDChanging(value);
                ReportPropertyChanging("LicensesID");
                _LicensesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicensesID");
                OnLicensesIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LicensesID;
        partial void OnLicensesIDChanging(Nullable<global::System.Guid> value);
        partial void OnLicensesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MailDate
        {
            get
            {
                return _MailDate;
            }
            set
            {
                OnMailDateChanging(value);
                ReportPropertyChanging("MailDate");
                _MailDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MailDate");
                OnMailDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MailDate;
        partial void OnMailDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMailDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SendStatus
        {
            get
            {
                return _SendStatus;
            }
            set
            {
                OnSendStatusChanging(value);
                ReportPropertyChanging("SendStatus");
                _SendStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendStatus");
                OnSendStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _SendStatus;
        partial void OnSendStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnSendStatusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ServiceLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceLine object.
        /// </summary>
        /// <param name="serviceLineId">Initial value of the ServiceLineId property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="serviceChargeTypeId">Initial value of the ServiceChargeTypeId property.</param>
        /// <param name="isTaxable">Initial value of the IsTaxable property.</param>
        public static ServiceLine CreateServiceLine(global::System.Guid serviceLineId, global::System.Guid licenseeId, global::System.Int32 serviceId, global::System.Int32 serviceChargeTypeId, global::System.Boolean isTaxable)
        {
            ServiceLine serviceLine = new ServiceLine();
            serviceLine.ServiceLineId = serviceLineId;
            serviceLine.LicenseeId = licenseeId;
            serviceLine.ServiceId = serviceId;
            serviceLine.ServiceChargeTypeId = serviceChargeTypeId;
            serviceLine.IsTaxable = isTaxable;
            return serviceLine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceLineId
        {
            get
            {
                return _ServiceLineId;
            }
            set
            {
                if (_ServiceLineId != value)
                {
                    OnServiceLineIdChanging(value);
                    ReportPropertyChanging("ServiceLineId");
                    _ServiceLineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceLineId");
                    OnServiceLineIdChanged();
                }
            }
        }
        private global::System.Guid _ServiceLineId;
        partial void OnServiceLineIdChanging(global::System.Guid value);
        partial void OnServiceLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.Int32 _ServiceId;
        partial void OnServiceIdChanging(global::System.Int32 value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceChargeTypeId
        {
            get
            {
                return _ServiceChargeTypeId;
            }
            set
            {
                OnServiceChargeTypeIdChanging(value);
                ReportPropertyChanging("ServiceChargeTypeId");
                _ServiceChargeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceChargeTypeId");
                OnServiceChargeTypeIdChanged();
            }
        }
        private global::System.Int32 _ServiceChargeTypeId;
        partial void OnServiceChargeTypeIdChanging(global::System.Int32 value);
        partial void OnServiceChargeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Min
        {
            get
            {
                return _Min;
            }
            set
            {
                OnMinChanging(value);
                ReportPropertyChanging("Min");
                _Min = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Min");
                OnMinChanged();
            }
        }
        private Nullable<global::System.Double> _Min;
        partial void OnMinChanging(Nullable<global::System.Double> value);
        partial void OnMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Range1
        {
            get
            {
                return _Range1;
            }
            set
            {
                OnRange1Changing(value);
                ReportPropertyChanging("Range1");
                _Range1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Range1");
                OnRange1Changed();
            }
        }
        private Nullable<global::System.Int32> _Range1;
        partial void OnRange1Changing(Nullable<global::System.Int32> value);
        partial void OnRange1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Range2
        {
            get
            {
                return _Range2;
            }
            set
            {
                OnRange2Changing(value);
                ReportPropertyChanging("Range2");
                _Range2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Range2");
                OnRange2Changed();
            }
        }
        private Nullable<global::System.Int32> _Range2;
        partial void OnRange2Changing(Nullable<global::System.Int32> value);
        partial void OnRange2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Double> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTaxable
        {
            get
            {
                return _IsTaxable;
            }
            set
            {
                OnIsTaxableChanging(value);
                ReportPropertyChanging("IsTaxable");
                _IsTaxable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTaxable");
                OnIsTaxableChanged();
            }
        }
        private global::System.Boolean _IsTaxable;
        partial void OnIsTaxableChanging(global::System.Boolean value);
        partial void OnIsTaxableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ConsumedUnit
        {
            get
            {
                return _ConsumedUnit;
            }
            set
            {
                OnConsumedUnitChanging(value);
                ReportPropertyChanging("ConsumedUnit");
                _ConsumedUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsumedUnit");
                OnConsumedUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _ConsumedUnit;
        partial void OnConsumedUnitChanging(Nullable<global::System.Int32> value);
        partial void OnConsumedUnitChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_ServiceLines_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_ServiceLines_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_ServiceLines_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_ServiceLines_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_MasterServiceChargeTypes", "MasterServiceChargeTypes")]
        public MasterServiceChargeType MasterServiceChargeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes", "MasterServiceChargeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes", "MasterServiceChargeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterServiceChargeType> MasterServiceChargeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes", "MasterServiceChargeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes", "MasterServiceChargeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_MasterServiceChargeTypes1", "MasterServiceChargeTypes")]
        public MasterServiceChargeType MasterServiceChargeType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes1", "MasterServiceChargeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes1", "MasterServiceChargeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterServiceChargeType> MasterServiceChargeType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes1", "MasterServiceChargeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterServiceChargeType>("Model.FK_ServiceLines_MasterServiceChargeTypes1", "MasterServiceChargeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ServiceLines_MasterServices", "MasterServices")]
        public MasterService MasterService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_ServiceLines_MasterServices", "MasterServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_ServiceLines_MasterServices", "MasterServices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterService> MasterServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterService>("Model.FK_ServiceLines_MasterServices", "MasterServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterService>("Model.FK_ServiceLines_MasterServices", "MasterServices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Statement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Statement object.
        /// </summary>
        /// <param name="statementId">Initial value of the StatementId property.</param>
        /// <param name="statementNumber">Initial value of the StatementNumber property.</param>
        public static Statement CreateStatement(global::System.Guid statementId, global::System.Int32 statementNumber)
        {
            Statement statement = new Statement();
            statement.StatementId = statementId;
            statement.StatementNumber = statementNumber;
            return statement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StatementId
        {
            get
            {
                return _StatementId;
            }
            set
            {
                if (_StatementId != value)
                {
                    OnStatementIdChanging(value);
                    ReportPropertyChanging("StatementId");
                    _StatementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatementId");
                    OnStatementIdChanged();
                }
            }
        }
        private global::System.Guid _StatementId;
        partial void OnStatementIdChanging(global::System.Guid value);
        partial void OnStatementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatementNumber
        {
            get
            {
                return _StatementNumber;
            }
            set
            {
                OnStatementNumberChanging(value);
                ReportPropertyChanging("StatementNumber");
                _StatementNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementNumber");
                OnStatementNumberChanged();
            }
        }
        private global::System.Int32 _StatementNumber;
        partial void OnStatementNumberChanging(global::System.Int32 value);
        partial void OnStatementNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BatchId;
        partial void OnBatchIdChanging(Nullable<global::System.Guid> value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CheckAmount
        {
            get
            {
                return _CheckAmount;
            }
            set
            {
                OnCheckAmountChanging(value);
                ReportPropertyChanging("CheckAmount");
                _CheckAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckAmount");
                OnCheckAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CheckAmount;
        partial void OnCheckAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCheckAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatementStatusId
        {
            get
            {
                return _StatementStatusId;
            }
            set
            {
                OnStatementStatusIdChanging(value);
                ReportPropertyChanging("StatementStatusId");
                _StatementStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementStatusId");
                OnStatementStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatementStatusId;
        partial void OnStatementStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatementStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Entries
        {
            get
            {
                return _Entries;
            }
            set
            {
                OnEntriesChanging(value);
                ReportPropertyChanging("Entries");
                _Entries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entries");
                OnEntriesChanged();
            }
        }
        private Nullable<global::System.Int32> _Entries;
        partial void OnEntriesChanging(Nullable<global::System.Int32> value);
        partial void OnEntriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModified;
        partial void OnLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BalAdj
        {
            get
            {
                return _BalAdj;
            }
            set
            {
                OnBalAdjChanging(value);
                ReportPropertyChanging("BalAdj");
                _BalAdj = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BalAdj");
                OnBalAdjChanged();
            }
        }
        private Nullable<global::System.Decimal> _BalAdj;
        partial void OnBalAdjChanging(Nullable<global::System.Decimal> value);
        partial void OnBalAdjChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EnteredAmount
        {
            get
            {
                return _EnteredAmount;
            }
            set
            {
                OnEnteredAmountChanging(value);
                ReportPropertyChanging("EnteredAmount");
                _EnteredAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredAmount");
                OnEnteredAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _EnteredAmount;
        partial void OnEnteredAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnEnteredAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StatementDate
        {
            get
            {
                return _StatementDate;
            }
            set
            {
                OnStatementDateChanging(value);
                ReportPropertyChanging("StatementDate");
                _StatementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementDate");
                OnStatementDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StatementDate;
        partial void OnStatementDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStatementDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FromPage
        {
            get
            {
                return _FromPage;
            }
            set
            {
                OnFromPageChanging(value);
                ReportPropertyChanging("FromPage");
                _FromPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromPage");
                OnFromPageChanged();
            }
        }
        private global::System.String _FromPage;
        partial void OnFromPageChanging(global::System.String value);
        partial void OnFromPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToPage
        {
            get
            {
                return _ToPage;
            }
            set
            {
                OnToPageChanging(value);
                ReportPropertyChanging("ToPage");
                _ToPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ToPage");
                OnToPageChanged();
            }
        }
        private global::System.String _ToPage;
        partial void OnToPageChanging(global::System.String value);
        partial void OnToPageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Statements_Batches", "Batch")]
        public Batch Batch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("Model.FK_Statements_Batches", "Batch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("Model.FK_Statements_Batches", "Batch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Batch> BatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("Model.FK_Statements_Batches", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Batch>("Model.FK_Statements_Batches", "Batch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EntriesByDEU_Statements", "EntriesByDEU")]
        public EntityCollection<EntriesByDEU> EntriesByDEUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Statements", "EntriesByDEU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntriesByDEU>("Model.FK_EntriesByDEU_Statements", "EntriesByDEU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Statements_MasterStatementStatus", "MasterStatementStatu")]
        public MasterStatementStatu MasterStatementStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterStatementStatu>("Model.FK_Statements_MasterStatementStatus", "MasterStatementStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterStatementStatu>("Model.FK_Statements_MasterStatementStatus", "MasterStatementStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterStatementStatu> MasterStatementStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterStatementStatu>("Model.FK_Statements_MasterStatementStatus", "MasterStatementStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterStatementStatu>("Model.FK_Statements_MasterStatementStatus", "MasterStatementStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Statements_Payors", "Payor")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Statements_Payors", "Payor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Statements_Payors", "Payor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Statements_Payors", "Payor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_Statements_Payors", "Payor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyPaymentEntries_Statements", "PolicyPaymentEntry")]
        public EntityCollection<PolicyPaymentEntry> PolicyPaymentEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_Statements", "PolicyPaymentEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyPaymentEntry>("Model.FK_PolicyPaymentEntries_Statements", "PolicyPaymentEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Support")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Support : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Support object.
        /// </summary>
        /// <param name="supportFileId">Initial value of the SupportFileId property.</param>
        public static Support CreateSupport(global::System.Guid supportFileId)
        {
            Support support = new Support();
            support.SupportFileId = supportFileId;
            return support;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SupportFileId
        {
            get
            {
                return _SupportFileId;
            }
            set
            {
                if (_SupportFileId != value)
                {
                    OnSupportFileIdChanging(value);
                    ReportPropertyChanging("SupportFileId");
                    _SupportFileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SupportFileId");
                    OnSupportFileIdChanged();
                }
            }
        }
        private global::System.Guid _SupportFileId;
        partial void OnSupportFileIdChanging(global::System.Guid value);
        partial void OnSupportFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupportFileName
        {
            get
            {
                return _SupportFileName;
            }
            set
            {
                OnSupportFileNameChanging(value);
                ReportPropertyChanging("SupportFileName");
                _SupportFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupportFileName");
                OnSupportFileNameChanged();
            }
        }
        private global::System.String _SupportFileName;
        partial void OnSupportFileNameChanging(global::System.String value);
        partial void OnSupportFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentDescription
        {
            get
            {
                return _ContentDescription;
            }
            set
            {
                OnContentDescriptionChanging(value);
                ReportPropertyChanging("ContentDescription");
                _ContentDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentDescription");
                OnContentDescriptionChanged();
            }
        }
        private global::System.String _ContentDescription;
        partial void OnContentDescriptionChanging(global::System.String value);
        partial void OnContentDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOn
        {
            get
            {
                return _LastModifiedOn;
            }
            set
            {
                OnLastModifiedOnChanging(value);
                ReportPropertyChanging("LastModifiedOn");
                _LastModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOn");
                OnLastModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOn;
        partial void OnLastModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="tbPMCVarianceSlab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbPMCVarianceSlab : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tbPMCVarianceSlab object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static tbPMCVarianceSlab CreatetbPMCVarianceSlab(global::System.Int32 id)
        {
            tbPMCVarianceSlab tbPMCVarianceSlab = new tbPMCVarianceSlab();
            tbPMCVarianceSlab.ID = id;
            return tbPMCVarianceSlab;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PMCFrom
        {
            get
            {
                return _PMCFrom;
            }
            set
            {
                OnPMCFromChanging(value);
                ReportPropertyChanging("PMCFrom");
                _PMCFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMCFrom");
                OnPMCFromChanged();
            }
        }
        private Nullable<global::System.Decimal> _PMCFrom;
        partial void OnPMCFromChanging(Nullable<global::System.Decimal> value);
        partial void OnPMCFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PMCTo
        {
            get
            {
                return _PMCTo;
            }
            set
            {
                OnPMCToChanging(value);
                ReportPropertyChanging("PMCTo");
                _PMCTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMCTo");
                OnPMCToChanged();
            }
        }
        private Nullable<global::System.Decimal> _PMCTo;
        partial void OnPMCToChanging(Nullable<global::System.Decimal> value);
        partial void OnPMCToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VarPercentLimit
        {
            get
            {
                return _VarPercentLimit;
            }
            set
            {
                OnVarPercentLimitChanging(value);
                ReportPropertyChanging("VarPercentLimit");
                _VarPercentLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VarPercentLimit");
                OnVarPercentLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _VarPercentLimit;
        partial void OnVarPercentLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnVarPercentLimitChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Template")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Template : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Template object.
        /// </summary>
        /// <param name="payorID">Initial value of the PayorID property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static Template CreateTemplate(global::System.Guid payorID, global::System.Boolean isDeleted, global::System.DateTime lastModified)
        {
            Template template = new Template();
            template.PayorID = payorID;
            template.IsDeleted = isDeleted;
            template.LastModified = lastModified;
            return template;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcelColumnList
        {
            get
            {
                return _ExcelColumnList;
            }
            set
            {
                OnExcelColumnListChanging(value);
                ReportPropertyChanging("ExcelColumnList");
                _ExcelColumnList = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcelColumnList");
                OnExcelColumnListChanged();
            }
        }
        private global::System.String _ExcelColumnList;
        partial void OnExcelColumnListChanging(global::System.String value);
        partial void OnExcelColumnListChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SheetName
        {
            get
            {
                return _SheetName;
            }
            set
            {
                OnSheetNameChanging(value);
                ReportPropertyChanging("SheetName");
                _SheetName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SheetName");
                OnSheetNameChanged();
            }
        }
        private global::System.String _SheetName;
        partial void OnSheetNameChanging(global::System.String value);
        partial void OnSheetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataStartIndex
        {
            get
            {
                return _DataStartIndex;
            }
            set
            {
                OnDataStartIndexChanging(value);
                ReportPropertyChanging("DataStartIndex");
                _DataStartIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataStartIndex");
                OnDataStartIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _DataStartIndex;
        partial void OnDataStartIndexChanging(Nullable<global::System.Int32> value);
        partial void OnDataStartIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                if (_PayorID != value)
                {
                    OnPayorIDChanging(value);
                    ReportPropertyChanging("PayorID");
                    _PayorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayorID");
                    OnPayorIDChanged();
                }
            }
        }
        private global::System.Guid _PayorID;
        partial void OnPayorIDChanging(global::System.Guid value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastRowsToSkip
        {
            get
            {
                return _LastRowsToSkip;
            }
            set
            {
                OnLastRowsToSkipChanging(value);
                ReportPropertyChanging("LastRowsToSkip");
                _LastRowsToSkip = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRowsToSkip");
                OnLastRowsToSkipChanged();
            }
        }
        private Nullable<global::System.Int32> _LastRowsToSkip;
        partial void OnLastRowsToSkipChanging(Nullable<global::System.Int32> value);
        partial void OnLastRowsToSkipChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FieldMapping_Templates", "FieldMapping")]
        public EntityCollection<FieldMapping> FieldMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldMapping>("Model.FK_FieldMapping_Templates", "FieldMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldMapping>("Model.FK_FieldMapping_Templates", "FieldMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Templates_Payors", "Payors")]
        public Payor Payor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Templates_Payors", "Payors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Templates_Payors", "Payors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payor> PayorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payor>("Model.FK_Templates_Payors", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payor>("Model.FK_Templates_Payors", "Payors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserCredential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCredential : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCredential object.
        /// </summary>
        /// <param name="userCredentialId">Initial value of the UserCredentialId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isHouseAccount">Initial value of the IsHouseAccount property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isNewsToFlash">Initial value of the IsNewsToFlash property.</param>
        public static UserCredential CreateUserCredential(global::System.Guid userCredentialId, global::System.Int32 roleId, global::System.Boolean isHouseAccount, global::System.Boolean isDeleted, global::System.Boolean isNewsToFlash)
        {
            UserCredential userCredential = new UserCredential();
            userCredential.UserCredentialId = userCredentialId;
            userCredential.RoleId = roleId;
            userCredential.IsHouseAccount = isHouseAccount;
            userCredential.IsDeleted = isDeleted;
            userCredential.IsNewsToFlash = isNewsToFlash;
            return userCredential;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                if (_UserCredentialId != value)
                {
                    OnUserCredentialIdChanging(value);
                    ReportPropertyChanging("UserCredentialId");
                    _UserCredentialId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCredentialId");
                    OnUserCredentialIdChanged();
                }
            }
        }
        private global::System.Guid _UserCredentialId;
        partial void OnUserCredentialIdChanging(global::System.Guid value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHintQuestion
        {
            get
            {
                return _PasswordHintQuestion;
            }
            set
            {
                OnPasswordHintQuestionChanging(value);
                ReportPropertyChanging("PasswordHintQuestion");
                _PasswordHintQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHintQuestion");
                OnPasswordHintQuestionChanged();
            }
        }
        private global::System.String _PasswordHintQuestion;
        partial void OnPasswordHintQuestionChanging(global::System.String value);
        partial void OnPasswordHintQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHintAnswer
        {
            get
            {
                return _PasswordHintAnswer;
            }
            set
            {
                OnPasswordHintAnswerChanging(value);
                ReportPropertyChanging("PasswordHintAnswer");
                _PasswordHintAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHintAnswer");
                OnPasswordHintAnswerChanged();
            }
        }
        private global::System.String _PasswordHintAnswer;
        partial void OnPasswordHintAnswerChanging(global::System.String value);
        partial void OnPasswordHintAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHouseAccount
        {
            get
            {
                return _IsHouseAccount;
            }
            set
            {
                OnIsHouseAccountChanging(value);
                ReportPropertyChanging("IsHouseAccount");
                _IsHouseAccount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHouseAccount");
                OnIsHouseAccountChanged();
            }
        }
        private global::System.Boolean _IsHouseAccount;
        partial void OnIsHouseAccountChanging(global::System.Boolean value);
        partial void OnIsHouseAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNewsToFlash
        {
            get
            {
                return _IsNewsToFlash;
            }
            set
            {
                OnIsNewsToFlashChanging(value);
                ReportPropertyChanging("IsNewsToFlash");
                _IsNewsToFlash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNewsToFlash");
                OnIsNewsToFlashChanged();
            }
        }
        private global::System.Boolean _IsNewsToFlash;
        partial void OnIsNewsToFlashChanging(global::System.Boolean value);
        partial void OnIsNewsToFlashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAccountExec
        {
            get
            {
                return _IsAccountExec;
            }
            set
            {
                OnIsAccountExecChanging(value);
                ReportPropertyChanging("IsAccountExec");
                _IsAccountExec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAccountExec");
                OnIsAccountExecChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAccountExec;
        partial void OnIsAccountExecChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAccountExecChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BGUserId
        {
            get
            {
                return _BGUserId;
            }
            set
            {
                OnBGUserIdChanging(value);
                ReportPropertyChanging("BGUserId");
                _BGUserId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BGUserId");
                OnBGUserIdChanged();
            }
        }
        private global::System.String _BGUserId;
        partial void OnBGUserIdChanging(global::System.String value);
        partial void OnBGUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_UserCredentials", "CarrierNickName")]
        public EntityCollection<CarrierNickName> CarrierNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_UserCredentials", "CarrierNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_UserCredentials", "CarrierNickName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarrier_UserCredentials1", "CarrierNickName")]
        public EntityCollection<CarrierNickName> CarrierNickNames1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_UserCredentials1", "CarrierNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierNickName>("Model.FK_PayorCarrier_UserCredentials1", "CarrierNickName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PayorCarriers_UserCredentials", "Carriers")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("Model.FK_PayorCarriers_UserCredentials", "Carriers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("Model.FK_PayorCarriers_UserCredentials", "Carriers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverages_UserCredentials", "Coverages")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("Model.FK_CarrierCoverages_UserCredentials", "Coverages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("Model.FK_CarrierCoverages_UserCredentials", "Coverages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_lastpolicyviewed_UserCredentials", "LastPolicyViewed")]
        public EntityCollection<LastPolicyViewed> LastPolicyVieweds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LastPolicyViewed>("Model.FK_lastpolicyviewed_UserCredentials", "LastPolicyViewed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LastPolicyViewed>("Model.FK_lastpolicyviewed_UserCredentials", "LastPolicyViewed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserCredentials_Licensees", "Licensees")]
        public Licensee Licensee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_UserCredentials_Licensees", "Licensees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_UserCredentials_Licensees", "Licensees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Licensee> LicenseeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Licensee>("Model.FK_UserCredentials_Licensees", "Licensees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Licensee>("Model.FK_UserCredentials_Licensees", "Licensees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserCredentials_MasterRoles", "MasterRoles")]
        public MasterRole MasterRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterRole>("Model.FK_UserCredentials_MasterRoles", "MasterRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterRole>("Model.FK_UserCredentials_MasterRoles", "MasterRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterRole> MasterRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterRole>("Model.FK_UserCredentials_MasterRoles", "MasterRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterRole>("Model.FK_UserCredentials_MasterRoles", "MasterRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Payors_UserCredentials", "Payors")]
        public EntityCollection<Payor> Payors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payor>("Model.FK_Payors_UserCredentials", "Payors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payor>("Model.FK_Payors_UserCredentials", "Payors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Policies_UserCredentials", "Policies")]
        public EntityCollection<Policy> Policies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Policy>("Model.FK_Policies_UserCredentials", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Policy>("Model.FK_Policies_UserCredentials", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PoliciesHistory_UserCredentials", "PoliciesHistory")]
        public EntityCollection<PoliciesHistory> PoliciesHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_UserCredentials", "PoliciesHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliciesHistory>("Model.FK_PoliciesHistory_UserCredentials", "PoliciesHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "PolicyOutgoingAdvancedSchedules")]
        public EntityCollection<PolicyOutgoingAdvancedSchedule> PolicyOutgoingAdvancedSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingAdvancedSchedule>("Model.FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "PolicyOutgoingAdvancedSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingAdvancedSchedule>("Model.FK_PolicyOutgoingAdvancedSchedules_PayeeUser", "PolicyOutgoingAdvancedSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserDetail_UserCredentials", "UserDetail")]
        public UserDetail UserDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDetail>("Model.FK_UserDetail_UserCredentials", "UserDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDetail>("Model.FK_UserDetail_UserCredentials", "UserDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserDetail> UserDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDetail>("Model.FK_UserDetail_UserCredentials", "UserDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserDetail>("Model.FK_UserDetail_UserCredentials", "UserDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserPermissions_UserCredentials1", "UserPermissions")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("Model.FK_UserPermissions_UserCredentials1", "UserPermissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("Model.FK_UserPermissions_UserCredentials1", "UserPermissions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "LinkedAgent", "UserCredentials1")]
        public EntityCollection<UserCredential> UserCredentials1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCredential>("Model.LinkedAgent", "UserCredentials1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCredential>("Model.LinkedAgent", "UserCredentials1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "LinkedAgent", "UserCredentials")]
        public EntityCollection<UserCredential> UserCredentials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCredential>("Model.LinkedAgent", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCredential>("Model.LinkedAgent", "UserCredentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverage_UserCredentials", "CoverageNickName")]
        public EntityCollection<CoverageNickName> CoverageNickNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CoverageNickName>("Model.FK_CarrierCoverage_UserCredentials", "CoverageNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CoverageNickName>("Model.FK_CarrierCoverage_UserCredentials", "CoverageNickName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CarrierCoverage_UserCredentials1", "CoverageNickName")]
        public EntityCollection<CoverageNickName> CoverageNickNames1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CoverageNickName>("Model.FK_CarrierCoverage_UserCredentials1", "CoverageNickName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CoverageNickName>("Model.FK_CarrierCoverage_UserCredentials1", "CoverageNickName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingSchedules_UserCredentials", "PolicyOutgoingSchedule")]
        public EntityCollection<PolicyOutgoingSchedule> PolicyOutgoingSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_UserCredentials", "PolicyOutgoingSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingSchedule>("Model.FK_PolicyOutgoingSchedules_UserCredentials", "PolicyOutgoingSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PolicyOutgoingPayments_UserCredentials", "PolicyOutgoingPayment")]
        public EntityCollection<PolicyOutgoingPayment> PolicyOutgoingPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyOutgoingPayment>("Model.FK_PolicyOutgoingPayments_UserCredentials", "PolicyOutgoingPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyOutgoingPayment>("Model.FK_PolicyOutgoingPayments_UserCredentials", "PolicyOutgoingPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserDetail object.
        /// </summary>
        /// <param name="userCredentialId">Initial value of the UserCredentialId property.</param>
        /// <param name="firstYearDefault">Initial value of the FirstYearDefault property.</param>
        /// <param name="renewalDefault">Initial value of the RenewalDefault property.</param>
        /// <param name="reportForEntireAgency">Initial value of the ReportForEntireAgency property.</param>
        /// <param name="reportForOwnBusiness">Initial value of the ReportForOwnBusiness property.</param>
        public static UserDetail CreateUserDetail(global::System.Guid userCredentialId, global::System.Double firstYearDefault, global::System.Double renewalDefault, global::System.Boolean reportForEntireAgency, global::System.Boolean reportForOwnBusiness)
        {
            UserDetail userDetail = new UserDetail();
            userDetail.UserCredentialId = userCredentialId;
            userDetail.FirstYearDefault = firstYearDefault;
            userDetail.RenewalDefault = renewalDefault;
            userDetail.ReportForEntireAgency = reportForEntireAgency;
            userDetail.ReportForOwnBusiness = reportForOwnBusiness;
            return userDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                if (_UserCredentialId != value)
                {
                    OnUserCredentialIdChanging(value);
                    ReportPropertyChanging("UserCredentialId");
                    _UserCredentialId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCredentialId");
                    OnUserCredentialIdChanged();
                }
            }
        }
        private global::System.Guid _UserCredentialId;
        partial void OnUserCredentialIdChanging(global::System.Guid value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ZipCode;
        partial void OnZipCodeChanging(Nullable<global::System.Int64> value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficePhone
        {
            get
            {
                return _OfficePhone;
            }
            set
            {
                OnOfficePhoneChanging(value);
                ReportPropertyChanging("OfficePhone");
                _OfficePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficePhone");
                OnOfficePhoneChanged();
            }
        }
        private global::System.String _OfficePhone;
        partial void OnOfficePhoneChanging(global::System.String value);
        partial void OnOfficePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FirstYearDefault
        {
            get
            {
                return _FirstYearDefault;
            }
            set
            {
                OnFirstYearDefaultChanging(value);
                ReportPropertyChanging("FirstYearDefault");
                _FirstYearDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstYearDefault");
                OnFirstYearDefaultChanged();
            }
        }
        private global::System.Double _FirstYearDefault;
        partial void OnFirstYearDefaultChanging(global::System.Double value);
        partial void OnFirstYearDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RenewalDefault
        {
            get
            {
                return _RenewalDefault;
            }
            set
            {
                OnRenewalDefaultChanging(value);
                ReportPropertyChanging("RenewalDefault");
                _RenewalDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenewalDefault");
                OnRenewalDefaultChanged();
            }
        }
        private global::System.Double _RenewalDefault;
        partial void OnRenewalDefaultChanging(global::System.Double value);
        partial void OnRenewalDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReportForEntireAgency
        {
            get
            {
                return _ReportForEntireAgency;
            }
            set
            {
                OnReportForEntireAgencyChanging(value);
                ReportPropertyChanging("ReportForEntireAgency");
                _ReportForEntireAgency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportForEntireAgency");
                OnReportForEntireAgencyChanged();
            }
        }
        private global::System.Boolean _ReportForEntireAgency;
        partial void OnReportForEntireAgencyChanging(global::System.Boolean value);
        partial void OnReportForEntireAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReportForOwnBusiness
        {
            get
            {
                return _ReportForOwnBusiness;
            }
            set
            {
                OnReportForOwnBusinessChanging(value);
                ReportPropertyChanging("ReportForOwnBusiness");
                _ReportForOwnBusiness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportForOwnBusiness");
                OnReportForOwnBusinessChanged();
            }
        }
        private global::System.Boolean _ReportForOwnBusiness;
        partial void OnReportForOwnBusinessChanging(global::System.Boolean value);
        partial void OnReportForOwnBusinessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddPayeeOn
        {
            get
            {
                return _AddPayeeOn;
            }
            set
            {
                OnAddPayeeOnChanging(value);
                ReportPropertyChanging("AddPayeeOn");
                _AddPayeeOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddPayeeOn");
                OnAddPayeeOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddPayeeOn;
        partial void OnAddPayeeOnChanging(Nullable<global::System.DateTime> value);
        partial void OnAddPayeeOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DisableAgentEditing
        {
            get
            {
                return _DisableAgentEditing;
            }
            set
            {
                OnDisableAgentEditingChanging(value);
                ReportPropertyChanging("DisableAgentEditing");
                _DisableAgentEditing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisableAgentEditing");
                OnDisableAgentEditingChanged();
            }
        }
        private Nullable<global::System.Boolean> _DisableAgentEditing;
        partial void OnDisableAgentEditingChanging(Nullable<global::System.Boolean> value);
        partial void OnDisableAgentEditingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserDetail_UserCredentials", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_UserDetail_UserCredentials", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_UserDetail_UserCredentials", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_UserDetail_UserCredentials", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_UserDetail_UserCredentials", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPermission object.
        /// </summary>
        /// <param name="userPermissionId">Initial value of the UserPermissionId property.</param>
        /// <param name="userCredentialId">Initial value of the UserCredentialId property.</param>
        /// <param name="moduleId">Initial value of the ModuleId property.</param>
        /// <param name="accessRightId">Initial value of the AccessRightId property.</param>
        public static UserPermission CreateUserPermission(global::System.Guid userPermissionId, global::System.Guid userCredentialId, global::System.Int32 moduleId, global::System.Int32 accessRightId)
        {
            UserPermission userPermission = new UserPermission();
            userPermission.UserPermissionId = userPermissionId;
            userPermission.UserCredentialId = userCredentialId;
            userPermission.ModuleId = moduleId;
            userPermission.AccessRightId = accessRightId;
            return userPermission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserPermissionId
        {
            get
            {
                return _UserPermissionId;
            }
            set
            {
                if (_UserPermissionId != value)
                {
                    OnUserPermissionIdChanging(value);
                    ReportPropertyChanging("UserPermissionId");
                    _UserPermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserPermissionId");
                    OnUserPermissionIdChanged();
                }
            }
        }
        private global::System.Guid _UserPermissionId;
        partial void OnUserPermissionIdChanging(global::System.Guid value);
        partial void OnUserPermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserCredentialId
        {
            get
            {
                return _UserCredentialId;
            }
            set
            {
                OnUserCredentialIdChanging(value);
                ReportPropertyChanging("UserCredentialId");
                _UserCredentialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCredentialId");
                OnUserCredentialIdChanged();
            }
        }
        private global::System.Guid _UserCredentialId;
        partial void OnUserCredentialIdChanging(global::System.Guid value);
        partial void OnUserCredentialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                OnModuleIdChanging(value);
                ReportPropertyChanging("ModuleId");
                _ModuleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleId");
                OnModuleIdChanged();
            }
        }
        private global::System.Int32 _ModuleId;
        partial void OnModuleIdChanging(global::System.Int32 value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessRightId
        {
            get
            {
                return _AccessRightId;
            }
            set
            {
                OnAccessRightIdChanging(value);
                ReportPropertyChanging("AccessRightId");
                _AccessRightId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessRightId");
                OnAccessRightIdChanged();
            }
        }
        private global::System.Int32 _AccessRightId;
        partial void OnAccessRightIdChanging(global::System.Int32 value);
        partial void OnAccessRightIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserPermissions_MasterAccessRights1", "MasterAccessRights")]
        public MasterAccessRight MasterAccessRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterAccessRight>("Model.FK_UserPermissions_MasterAccessRights1", "MasterAccessRights").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterAccessRight>("Model.FK_UserPermissions_MasterAccessRights1", "MasterAccessRights").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterAccessRight> MasterAccessRightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterAccessRight>("Model.FK_UserPermissions_MasterAccessRights1", "MasterAccessRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterAccessRight>("Model.FK_UserPermissions_MasterAccessRights1", "MasterAccessRights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserPermissions_MasterModules1", "MasterModules")]
        public MasterModule MasterModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterModule>("Model.FK_UserPermissions_MasterModules1", "MasterModules").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterModule>("Model.FK_UserPermissions_MasterModules1", "MasterModules").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterModule> MasterModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterModule>("Model.FK_UserPermissions_MasterModules1", "MasterModules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterModule>("Model.FK_UserPermissions_MasterModules1", "MasterModules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UserPermissions_UserCredentials1", "UserCredentials")]
        public UserCredential UserCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_UserPermissions_UserCredentials1", "UserCredentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_UserPermissions_UserCredentials1", "UserCredentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCredential> UserCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCredential>("Model.FK_UserPermissions_UserCredentials1", "UserCredentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCredential>("Model.FK_UserPermissions_UserCredentials1", "UserCredentials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="VariablesForBillingLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VariablesForBillingLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VariablesForBillingLine object.
        /// </summary>
        /// <param name="billingLineId">Initial value of the BillingLineId property.</param>
        public static VariablesForBillingLine CreateVariablesForBillingLine(global::System.Guid billingLineId)
        {
            VariablesForBillingLine variablesForBillingLine = new VariablesForBillingLine();
            variablesForBillingLine.BillingLineId = billingLineId;
            return variablesForBillingLine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfPolicies
        {
            get
            {
                return _NoOfPolicies;
            }
            set
            {
                OnNoOfPoliciesChanging(value);
                ReportPropertyChanging("NoOfPolicies");
                _NoOfPolicies = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfPolicies");
                OnNoOfPoliciesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfPolicies;
        partial void OnNoOfPoliciesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfPoliciesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfUsers
        {
            get
            {
                return _NoOfUsers;
            }
            set
            {
                OnNoOfUsersChanging(value);
                ReportPropertyChanging("NoOfUsers");
                _NoOfUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfUsers");
                OnNoOfUsersChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfUsers;
        partial void OnNoOfUsersChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfPayees
        {
            get
            {
                return _NoOfPayees;
            }
            set
            {
                OnNoOfPayeesChanging(value);
                ReportPropertyChanging("NoOfPayees");
                _NoOfPayees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfPayees");
                OnNoOfPayeesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfPayees;
        partial void OnNoOfPayeesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfPayeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfEntries
        {
            get
            {
                return _NoOfEntries;
            }
            set
            {
                OnNoOfEntriesChanging(value);
                ReportPropertyChanging("NoOfEntries");
                _NoOfEntries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfEntries");
                OnNoOfEntriesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfEntries;
        partial void OnNoOfEntriesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfEntriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfAdjustment
        {
            get
            {
                return _NoOfAdjustment;
            }
            set
            {
                OnNoOfAdjustmentChanging(value);
                ReportPropertyChanging("NoOfAdjustment");
                _NoOfAdjustment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfAdjustment");
                OnNoOfAdjustmentChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfAdjustment;
        partial void OnNoOfAdjustmentChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfWebstatement
        {
            get
            {
                return _NoOfWebstatement;
            }
            set
            {
                OnNoOfWebstatementChanging(value);
                ReportPropertyChanging("NoOfWebstatement");
                _NoOfWebstatement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfWebstatement");
                OnNoOfWebstatementChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfWebstatement;
        partial void OnNoOfWebstatementChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfWebstatementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfEDI
        {
            get
            {
                return _NoOfEDI;
            }
            set
            {
                OnNoOfEDIChanging(value);
                ReportPropertyChanging("NoOfEDI");
                _NoOfEDI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfEDI");
                OnNoOfEDIChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfEDI;
        partial void OnNoOfEDIChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfEDIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfTrackableMonth
        {
            get
            {
                return _NoOfTrackableMonth;
            }
            set
            {
                OnNoOfTrackableMonthChanging(value);
                ReportPropertyChanging("NoOfTrackableMonth");
                _NoOfTrackableMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfTrackableMonth");
                OnNoOfTrackableMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfTrackableMonth;
        partial void OnNoOfTrackableMonthChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfTrackableMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnbilledTrackableMonth
        {
            get
            {
                return _UnbilledTrackableMonth;
            }
            set
            {
                OnUnbilledTrackableMonthChanging(value);
                ReportPropertyChanging("UnbilledTrackableMonth");
                _UnbilledTrackableMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnbilledTrackableMonth");
                OnUnbilledTrackableMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _UnbilledTrackableMonth;
        partial void OnUnbilledTrackableMonthChanging(Nullable<global::System.Int32> value);
        partial void OnUnbilledTrackableMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BillingLineId
        {
            get
            {
                return _BillingLineId;
            }
            set
            {
                if (_BillingLineId != value)
                {
                    OnBillingLineIdChanging(value);
                    ReportPropertyChanging("BillingLineId");
                    _BillingLineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillingLineId");
                    OnBillingLineIdChanged();
                }
            }
        }
        private global::System.Guid _BillingLineId;
        partial void OnBillingLineIdChanging(global::System.Guid value);
        partial void OnBillingLineIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_VariablesForBillingLine_InvoiceBillingLineDetail", "InvoiceBillingLineDetail")]
        public InvoiceBillingLineDetail InvoiceBillingLineDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceBillingLineDetail>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "InvoiceBillingLineDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceBillingLineDetail>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "InvoiceBillingLineDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceBillingLineDetail> InvoiceBillingLineDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceBillingLineDetail>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "InvoiceBillingLineDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceBillingLineDetail>("Model.FK_VariablesForBillingLine_InvoiceBillingLineDetail", "InvoiceBillingLineDetail", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="AllFollowupFilter_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AllFollowupFilter_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private Nullable<global::System.Guid> _IssueId;
        partial void OnIssueIdChanging(Nullable<global::System.Guid> value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Client
        {
            get
            {
                return _Client;
            }
            set
            {
                OnClientChanging(value);
                ReportPropertyChanging("Client");
                _Client = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Client");
                OnClientChanged();
            }
        }
        private global::System.String _Client;
        partial void OnClientChanging(global::System.String value);
        partial void OnClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackPayment
        {
            get
            {
                return _IsTrackPayment;
            }
            set
            {
                OnIsTrackPaymentChanging(value);
                ReportPropertyChanging("IsTrackPayment");
                _IsTrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackPayment");
                OnIsTrackPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackPayment;
        partial void OnIsTrackPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(Nullable<global::System.Int32> value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="CalculatePAC_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CalculatePAC_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PAC
        {
            get
            {
                return _PAC;
            }
            set
            {
                OnPACChanging(value);
                ReportPropertyChanging("PAC");
                _PAC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PAC");
                OnPACChanged();
            }
        }
        private Nullable<global::System.Decimal> _PAC;
        partial void OnPACChanging(Nullable<global::System.Decimal> value);
        partial void OnPACChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="CalculatePMC_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CalculatePMC_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PMC
        {
            get
            {
                return _PMC;
            }
            set
            {
                OnPMCChanging(value);
                ReportPropertyChanging("PMC");
                _PMC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMC");
                OnPMCChanged();
            }
        }
        private Nullable<global::System.Decimal> _PMC;
        partial void OnPMCChanging(Nullable<global::System.Decimal> value);
        partial void OnPMCChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="FillPolicy_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FillPolicy_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyStatusId
        {
            get
            {
                return _PolicyStatusId;
            }
            set
            {
                OnPolicyStatusIdChanging(value);
                ReportPropertyChanging("PolicyStatusId");
                _PolicyStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyStatusId");
                OnPolicyStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyStatusId;
        partial void OnPolicyStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyStatusName
        {
            get
            {
                return _PolicyStatusName;
            }
            set
            {
                OnPolicyStatusNameChanging(value);
                ReportPropertyChanging("PolicyStatusName");
                _PolicyStatusName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyStatusName");
                OnPolicyStatusNameChanged();
            }
        }
        private global::System.String _PolicyStatusName;
        partial void OnPolicyStatusNameChanging(global::System.String value);
        partial void OnPolicyStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private global::System.String _PolicyType;
        partial void OnPolicyTypeChanging(global::System.String value);
        partial void OnPolicyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalEffectiveDate
        {
            get
            {
                return _OriginalEffectiveDate;
            }
            set
            {
                OnOriginalEffectiveDateChanging(value);
                ReportPropertyChanging("OriginalEffectiveDate");
                _OriginalEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalEffectiveDate");
                OnOriginalEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalEffectiveDate;
        partial void OnOriginalEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFromDate
        {
            get
            {
                return _TrackFromDate;
            }
            set
            {
                OnTrackFromDateChanging(value);
                ReportPropertyChanging("TrackFromDate");
                _TrackFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFromDate");
                OnTrackFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFromDate;
        partial void OnTrackFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                OnPolicyModeIdChanging(value);
                ReportPropertyChanging("PolicyModeId");
                _PolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId");
                OnPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId;
        partial void OnPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MonthlyPremium
        {
            get
            {
                return _MonthlyPremium;
            }
            set
            {
                OnMonthlyPremiumChanging(value);
                ReportPropertyChanging("MonthlyPremium");
                _MonthlyPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthlyPremium");
                OnMonthlyPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _MonthlyPremium;
        partial void OnMonthlyPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnMonthlyPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittedThrough
        {
            get
            {
                return _SubmittedThrough;
            }
            set
            {
                OnSubmittedThroughChanging(value);
                ReportPropertyChanging("SubmittedThrough");
                _SubmittedThrough = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubmittedThrough");
                OnSubmittedThroughChanged();
            }
        }
        private global::System.String _SubmittedThrough;
        partial void OnSubmittedThroughChanging(global::System.String value);
        partial void OnSubmittedThroughChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PolicyTerminationDate
        {
            get
            {
                return _PolicyTerminationDate;
            }
            set
            {
                OnPolicyTerminationDateChanging(value);
                ReportPropertyChanging("PolicyTerminationDate");
                _PolicyTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyTerminationDate");
                OnPolicyTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PolicyTerminationDate;
        partial void OnPolicyTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPolicyTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TerminationReasonId
        {
            get
            {
                return _TerminationReasonId;
            }
            set
            {
                OnTerminationReasonIdChanging(value);
                ReportPropertyChanging("TerminationReasonId");
                _TerminationReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationReasonId");
                OnTerminationReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TerminationReasonId;
        partial void OnTerminationReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnTerminationReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackPayment
        {
            get
            {
                return _IsTrackPayment;
            }
            set
            {
                OnIsTrackPaymentChanging(value);
                ReportPropertyChanging("IsTrackPayment");
                _IsTrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackPayment");
                OnIsTrackPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackPayment;
        partial void OnIsTrackPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientsName
        {
            get
            {
                return _ClientsName;
            }
            set
            {
                OnClientsNameChanging(value);
                ReportPropertyChanging("ClientsName");
                _ClientsName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientsName");
                OnClientsNameChanged();
            }
        }
        private global::System.String _ClientsName;
        partial void OnClientsNameChanging(global::System.String value);
        partial void OnClientsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReplacedBy
        {
            get
            {
                return _ReplacedBy;
            }
            set
            {
                OnReplacedByChanging(value);
                ReportPropertyChanging("ReplacedBy");
                _ReplacedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplacedBy");
                OnReplacedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ReplacedBy;
        partial void OnReplacedByChanging(Nullable<global::System.Guid> value);
        partial void OnReplacedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DuplicateFrom
        {
            get
            {
                return _DuplicateFrom;
            }
            set
            {
                OnDuplicateFromChanging(value);
                ReportPropertyChanging("DuplicateFrom");
                _DuplicateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DuplicateFrom");
                OnDuplicateFromChanged();
            }
        }
        private Nullable<global::System.Guid> _DuplicateFrom;
        partial void OnDuplicateFromChanging(Nullable<global::System.Guid> value);
        partial void OnDuplicateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsIncomingBasicSchedule
        {
            get
            {
                return _IsIncomingBasicSchedule;
            }
            set
            {
                OnIsIncomingBasicScheduleChanging(value);
                ReportPropertyChanging("IsIncomingBasicSchedule");
                _IsIncomingBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIncomingBasicSchedule");
                OnIsIncomingBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsIncomingBasicSchedule;
        partial void OnIsIncomingBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsIncomingBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOutGoingBasicSchedule
        {
            get
            {
                return _IsOutGoingBasicSchedule;
            }
            set
            {
                OnIsOutGoingBasicScheduleChanging(value);
                ReportPropertyChanging("IsOutGoingBasicSchedule");
                _IsOutGoingBasicSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOutGoingBasicSchedule");
                OnIsOutGoingBasicScheduleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOutGoingBasicSchedule;
        partial void OnIsOutGoingBasicScheduleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOutGoingBasicScheduleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorName
        {
            get
            {
                return _PayorName;
            }
            set
            {
                OnPayorNameChanging(value);
                ReportPropertyChanging("PayorName");
                _PayorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorName");
                OnPayorNameChanged();
            }
        }
        private global::System.String _PayorName;
        partial void OnPayorNameChanging(global::System.String value);
        partial void OnPayorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorNickName
        {
            get
            {
                return _PayorNickName;
            }
            set
            {
                OnPayorNickNameChanging(value);
                ReportPropertyChanging("PayorNickName");
                _PayorNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorNickName");
                OnPayorNickNameChanged();
            }
        }
        private global::System.String _PayorNickName;
        partial void OnPayorNickNameChanging(global::System.String value);
        partial void OnPayorNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Double> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IncomingPaymentTypeId
        {
            get
            {
                return _IncomingPaymentTypeId;
            }
            set
            {
                OnIncomingPaymentTypeIdChanging(value);
                ReportPropertyChanging("IncomingPaymentTypeId");
                _IncomingPaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncomingPaymentTypeId");
                OnIncomingPaymentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IncomingPaymentTypeId;
        partial void OnIncomingPaymentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnIncomingPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompTypeID
        {
            get
            {
                return _CompTypeID;
            }
            set
            {
                OnCompTypeIDChanging(value);
                ReportPropertyChanging("CompTypeID");
                _CompTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompTypeID");
                OnCompTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompTypeID;
        partial void OnCompTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompScheduleType
        {
            get
            {
                return _CompScheduleType;
            }
            set
            {
                OnCompScheduleTypeChanging(value);
                ReportPropertyChanging("CompScheduleType");
                _CompScheduleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompScheduleType");
                OnCompScheduleTypeChanged();
            }
        }
        private global::System.String _CompScheduleType;
        partial void OnCompScheduleTypeChanging(global::System.String value);
        partial void OnCompScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastFollowUpRuns
        {
            get
            {
                return _LastFollowUpRuns;
            }
            set
            {
                OnLastFollowUpRunsChanging(value);
                ReportPropertyChanging("LastFollowUpRuns");
                _LastFollowUpRuns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFollowUpRuns");
                OnLastFollowUpRunsChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastFollowUpRuns;
        partial void OnLastFollowUpRunsChanging(Nullable<global::System.DateTime> value);
        partial void OnLastFollowUpRunsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advance
        {
            get
            {
                return _Advance;
            }
            set
            {
                OnAdvanceChanging(value);
                ReportPropertyChanging("Advance");
                _Advance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Advance");
                OnAdvanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Advance;
        partial void OnAdvanceChanging(Nullable<global::System.Int32> value);
        partial void OnAdvanceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="FollowupFilter_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FollowupFilter_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private Nullable<global::System.Guid> _IssueId;
        partial void OnIssueIdChanging(Nullable<global::System.Guid> value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(Nullable<global::System.Int32> value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTrackPayment
        {
            get
            {
                return _IsTrackPayment;
            }
            set
            {
                OnIsTrackPaymentChanging(value);
                ReportPropertyChanging("IsTrackPayment");
                _IsTrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackPayment");
                OnIsTrackPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTrackPayment;
        partial void OnIsTrackPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTrackPaymentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="GetBatchesForDeuEntries_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetBatchesForDeuEntries_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetBatchesForDeuEntries_Result object.
        /// </summary>
        /// <param name="batchNumber">Initial value of the BatchNumber property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        public static GetBatchesForDeuEntries_Result CreateGetBatchesForDeuEntries_Result(global::System.Int32 batchNumber, global::System.Guid batchId, global::System.Guid licenseeId)
        {
            GetBatchesForDeuEntries_Result getBatchesForDeuEntries_Result = new GetBatchesForDeuEntries_Result();
            getBatchesForDeuEntries_Result.BatchNumber = batchNumber;
            getBatchesForDeuEntries_Result.BatchId = batchId;
            getBatchesForDeuEntries_Result.LicenseeId = licenseeId;
            return getBatchesForDeuEntries_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchNumber
        {
            get
            {
                return _BatchNumber;
            }
            set
            {
                OnBatchNumberChanging(value);
                ReportPropertyChanging("BatchNumber");
                _BatchNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchNumber");
                OnBatchNumberChanged();
            }
        }
        private global::System.Int32 _BatchNumber;
        partial void OnBatchNumberChanging(global::System.Int32 value);
        partial void OnBatchNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private global::System.Guid _BatchId;
        partial void OnBatchIdChanging(global::System.Guid value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploadStatusId
        {
            get
            {
                return _UploadStatusId;
            }
            set
            {
                OnUploadStatusIdChanging(value);
                ReportPropertyChanging("UploadStatusId");
                _UploadStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadStatusId");
                OnUploadStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UploadStatusId;
        partial void OnUploadStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnUploadStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryStatusId
        {
            get
            {
                return _EntryStatusId;
            }
            set
            {
                OnEntryStatusIdChanging(value);
                ReportPropertyChanging("EntryStatusId");
                _EntryStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryStatusId");
                OnEntryStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryStatusId;
        partial void OnEntryStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnEntryStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseeName
        {
            get
            {
                return _LicenseeName;
            }
            set
            {
                OnLicenseeNameChanging(value);
                ReportPropertyChanging("LicenseeName");
                _LicenseeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseeName");
                OnLicenseeNameChanged();
            }
        }
        private global::System.String _LicenseeName;
        partial void OnLicenseeNameChanging(global::System.String value);
        partial void OnLicenseeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SiteLoginID
        {
            get
            {
                return _SiteLoginID;
            }
            set
            {
                OnSiteLoginIDChanging(value);
                ReportPropertyChanging("SiteLoginID");
                _SiteLoginID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteLoginID");
                OnSiteLoginIDChanged();
            }
        }
        private Nullable<global::System.Guid> _SiteLoginID;
        partial void OnSiteLoginIDChanging(Nullable<global::System.Guid> value);
        partial void OnSiteLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssignedDeuUserName
        {
            get
            {
                return _AssignedDeuUserName;
            }
            set
            {
                OnAssignedDeuUserNameChanging(value);
                ReportPropertyChanging("AssignedDeuUserName");
                _AssignedDeuUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssignedDeuUserName");
                OnAssignedDeuUserNameChanged();
            }
        }
        private global::System.String _AssignedDeuUserName;
        partial void OnAssignedDeuUserNameChanging(global::System.String value);
        partial void OnAssignedDeuUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="GetDeuEntriesforStatement_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetDeuEntriesforStatement_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetDeuEntriesforStatement_Result object.
        /// </summary>
        /// <param name="dEUEntryID">Initial value of the DEUEntryID property.</param>
        public static GetDeuEntriesforStatement_Result CreateGetDeuEntriesforStatement_Result(global::System.Guid dEUEntryID)
        {
            GetDeuEntriesforStatement_Result getDeuEntriesforStatement_Result = new GetDeuEntriesforStatement_Result();
            getDeuEntriesforStatement_Result.DEUEntryID = dEUEntryID;
            return getDeuEntriesforStatement_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DEUEntryID
        {
            get
            {
                return _DEUEntryID;
            }
            set
            {
                OnDEUEntryIDChanging(value);
                ReportPropertyChanging("DEUEntryID");
                _DEUEntryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEUEntryID");
                OnDEUEntryIDChanged();
            }
        }
        private global::System.Guid _DEUEntryID;
        partial void OnDEUEntryIDChanging(global::System.Guid value);
        partial void OnDEUEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientValue
        {
            get
            {
                return _ClientValue;
            }
            set
            {
                OnClientValueChanging(value);
                ReportPropertyChanging("ClientValue");
                _ClientValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientValue");
                OnClientValueChanged();
            }
        }
        private global::System.String _ClientValue;
        partial void OnClientValueChanging(global::System.String value);
        partial void OnClientValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentReceived
        {
            get
            {
                return _PaymentReceived;
            }
            set
            {
                OnPaymentReceivedChanging(value);
                ReportPropertyChanging("PaymentReceived");
                _PaymentReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentReceived");
                OnPaymentReceivedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentReceived;
        partial void OnPaymentReceivedChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfUnits
        {
            get
            {
                return _NumberOfUnits;
            }
            set
            {
                OnNumberOfUnitsChanging(value);
                ReportPropertyChanging("NumberOfUnits");
                _NumberOfUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUnits");
                OnNumberOfUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfUnits;
        partial void OnNumberOfUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionTotal
        {
            get
            {
                return _CommissionTotal;
            }
            set
            {
                OnCommissionTotalChanging(value);
                ReportPropertyChanging("CommissionTotal");
                _CommissionTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionTotal");
                OnCommissionTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionTotal;
        partial void OnCommissionTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Fee;
        partial void OnFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPer
        {
            get
            {
                return _SplitPer;
            }
            set
            {
                OnSplitPerChanging(value);
                ReportPropertyChanging("SplitPer");
                _SplitPer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPer");
                OnSplitPerChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPer;
        partial void OnSplitPerChanging(Nullable<global::System.Double> value);
        partial void OnSplitPerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierNickName
        {
            get
            {
                return _CarrierNickName;
            }
            set
            {
                OnCarrierNickNameChanging(value);
                ReportPropertyChanging("CarrierNickName");
                _CarrierNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierNickName");
                OnCarrierNickNameChanged();
            }
        }
        private global::System.String _CarrierNickName;
        partial void OnCarrierNickNameChanging(global::System.String value);
        partial void OnCarrierNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverageNickName
        {
            get
            {
                return _CoverageNickName;
            }
            set
            {
                OnCoverageNickNameChanging(value);
                ReportPropertyChanging("CoverageNickName");
                _CoverageNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverageNickName");
                OnCoverageNickNameChanged();
            }
        }
        private global::System.String _CoverageNickName;
        partial void OnCoverageNickNameChanging(global::System.String value);
        partial void OnCoverageNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostCompleteStatus
        {
            get
            {
                return _PostCompleteStatus;
            }
            set
            {
                OnPostCompleteStatusChanging(value);
                ReportPropertyChanging("PostCompleteStatus");
                _PostCompleteStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostCompleteStatus");
                OnPostCompleteStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _PostCompleteStatus;
        partial void OnPostCompleteStatusChanging(Nullable<global::System.Int32> value);
        partial void OnPostCompleteStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CommissionPercentage
        {
            get
            {
                return _CommissionPercentage;
            }
            set
            {
                OnCommissionPercentageChanging(value);
                ReportPropertyChanging("CommissionPercentage");
                _CommissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPercentage");
                OnCommissionPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _CommissionPercentage;
        partial void OnCommissionPercentageChanging(Nullable<global::System.Double> value);
        partial void OnCommissionPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="GetIssues_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetIssues_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetIssues_Result object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        /// <param name="payorId">Initial value of the PayorId property.</param>
        /// <param name="licenseeId">Initial value of the LicenseeId property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="isTrackIncomingPercentage">Initial value of the IsTrackIncomingPercentage property.</param>
        /// <param name="isTrackMissingMonth">Initial value of the IsTrackMissingMonth property.</param>
        /// <param name="isTrackPayment">Initial value of the IsTrackPayment property.</param>
        public static GetIssues_Result CreateGetIssues_Result(global::System.Guid issueId, global::System.Int32 issueTrackNumber, global::System.Guid payorId, global::System.Guid licenseeId, global::System.Int32 content, global::System.Boolean isTrackIncomingPercentage, global::System.Boolean isTrackMissingMonth, global::System.Boolean isTrackPayment)
        {
            GetIssues_Result getIssues_Result = new GetIssues_Result();
            getIssues_Result.IssueId = issueId;
            getIssues_Result.IssueTrackNumber = issueTrackNumber;
            getIssues_Result.PayorId = payorId;
            getIssues_Result.LicenseeId = licenseeId;
            getIssues_Result.Content = content;
            getIssues_Result.IsTrackIncomingPercentage = isTrackIncomingPercentage;
            getIssues_Result.IsTrackMissingMonth = isTrackMissingMonth;
            getIssues_Result.IsTrackPayment = isTrackPayment;
            return getIssues_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Guid _IssueId;
        partial void OnIssueIdChanging(global::System.Guid value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorName
        {
            get
            {
                return _PayorName;
            }
            set
            {
                OnPayorNameChanging(value);
                ReportPropertyChanging("PayorName");
                _PayorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorName");
                OnPayorNameChanged();
            }
        }
        private global::System.String _PayorName;
        partial void OnPayorNameChanging(global::System.String value);
        partial void OnPayorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private global::System.Guid _PayorId;
        partial void OnPayorIdChanging(global::System.Guid value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private global::System.Guid _LicenseeId;
        partial void OnLicenseeIdChanging(global::System.Guid value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Int32 _Content;
        partial void OnContentChanging(global::System.Int32 value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackIncomingPercentage
        {
            get
            {
                return _IsTrackIncomingPercentage;
            }
            set
            {
                OnIsTrackIncomingPercentageChanging(value);
                ReportPropertyChanging("IsTrackIncomingPercentage");
                _IsTrackIncomingPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackIncomingPercentage");
                OnIsTrackIncomingPercentageChanged();
            }
        }
        private global::System.Boolean _IsTrackIncomingPercentage;
        partial void OnIsTrackIncomingPercentageChanging(global::System.Boolean value);
        partial void OnIsTrackIncomingPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackMissingMonth
        {
            get
            {
                return _IsTrackMissingMonth;
            }
            set
            {
                OnIsTrackMissingMonthChanging(value);
                ReportPropertyChanging("IsTrackMissingMonth");
                _IsTrackMissingMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackMissingMonth");
                OnIsTrackMissingMonthChanged();
            }
        }
        private global::System.Boolean _IsTrackMissingMonth;
        partial void OnIsTrackMissingMonthChanging(global::System.Boolean value);
        partial void OnIsTrackMissingMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrackPayment
        {
            get
            {
                return _IsTrackPayment;
            }
            set
            {
                OnIsTrackPaymentChanging(value);
                ReportPropertyChanging("IsTrackPayment");
                _IsTrackPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrackPayment");
                OnIsTrackPaymentChanged();
            }
        }
        private global::System.Boolean _IsTrackPayment;
        partial void OnIsTrackPaymentChanging(global::System.Boolean value);
        partial void OnIsTrackPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPMCVariance
        {
            get
            {
                return _IsPMCVariance;
            }
            set
            {
                OnIsPMCVarianceChanging(value);
                ReportPropertyChanging("IsPMCVariance");
                _IsPMCVariance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPMCVariance");
                OnIsPMCVarianceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPMCVariance;
        partial void OnIsPMCVarianceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPMCVarianceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="GetPolicyLearnedFieldsPolicyWise_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPolicyLearnedFieldsPolicyWise_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetPolicyLearnedFieldsPolicyWise_Result object.
        /// </summary>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        public static GetPolicyLearnedFieldsPolicyWise_Result CreateGetPolicyLearnedFieldsPolicyWise_Result(global::System.Guid policyId)
        {
            GetPolicyLearnedFieldsPolicyWise_Result getPolicyLearnedFieldsPolicyWise_Result = new GetPolicyLearnedFieldsPolicyWise_Result();
            getPolicyLearnedFieldsPolicyWise_Result.PolicyId = policyId;
            return getPolicyLearnedFieldsPolicyWise_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private global::System.Guid _PolicyId;
        partial void OnPolicyIdChanging(global::System.Guid value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Effective
        {
            get
            {
                return _Effective;
            }
            set
            {
                OnEffectiveChanging(value);
                ReportPropertyChanging("Effective");
                _Effective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Effective");
                OnEffectiveChanged();
            }
        }
        private Nullable<global::System.DateTime> _Effective;
        partial void OnEffectiveChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackFrom
        {
            get
            {
                return _TrackFrom;
            }
            set
            {
                OnTrackFromChanging(value);
                ReportPropertyChanging("TrackFrom");
                _TrackFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackFrom");
                OnTrackFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackFrom;
        partial void OnTrackFromChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAC
        {
            get
            {
                return _PAC;
            }
            set
            {
                OnPACChanging(value);
                ReportPropertyChanging("PAC");
                _PAC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAC");
                OnPACChanged();
            }
        }
        private global::System.String _PAC;
        partial void OnPACChanging(global::System.String value);
        partial void OnPACChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PMC
        {
            get
            {
                return _PMC;
            }
            set
            {
                OnPMCChanging(value);
                ReportPropertyChanging("PMC");
                _PMC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PMC");
                OnPMCChanged();
            }
        }
        private global::System.String _PMC;
        partial void OnPMCChanging(global::System.String value);
        partial void OnPMCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ModalAvgPremium
        {
            get
            {
                return _ModalAvgPremium;
            }
            set
            {
                OnModalAvgPremiumChanging(value);
                ReportPropertyChanging("ModalAvgPremium");
                _ModalAvgPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModalAvgPremium");
                OnModalAvgPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _ModalAvgPremium;
        partial void OnModalAvgPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnModalAvgPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId
        {
            get
            {
                return _PolicyModeId;
            }
            set
            {
                OnPolicyModeIdChanging(value);
                ReportPropertyChanging("PolicyModeId");
                _PolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId");
                OnPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId;
        partial void OnPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CarrierId
        {
            get
            {
                return _CarrierId;
            }
            set
            {
                OnCarrierIdChanging(value);
                ReportPropertyChanging("CarrierId");
                _CarrierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarrierId");
                OnCarrierIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CarrierId;
        partial void OnCarrierIdChanging(Nullable<global::System.Guid> value);
        partial void OnCarrierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Guid> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompTypeID
        {
            get
            {
                return _CompTypeID;
            }
            set
            {
                OnCompTypeIDChanging(value);
                ReportPropertyChanging("CompTypeID");
                _CompTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompTypeID");
                OnCompTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompTypeID;
        partial void OnCompTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierNickName
        {
            get
            {
                return _CarrierNickName;
            }
            set
            {
                OnCarrierNickNameChanging(value);
                ReportPropertyChanging("CarrierNickName");
                _CarrierNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierNickName");
                OnCarrierNickNameChanged();
            }
        }
        private global::System.String _CarrierNickName;
        partial void OnCarrierNickNameChanging(global::System.String value);
        partial void OnCarrierNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverageNickName
        {
            get
            {
                return _CoverageNickName;
            }
            set
            {
                OnCoverageNickNameChanging(value);
                ReportPropertyChanging("CoverageNickName");
                _CoverageNickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverageNickName");
                OnCoverageNickNameChanged();
            }
        }
        private global::System.String _CoverageNickName;
        partial void OnCoverageNickNameChanging(global::System.String value);
        partial void OnCoverageNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyModeId1
        {
            get
            {
                return _PolicyModeId1;
            }
            set
            {
                OnPolicyModeId1Changing(value);
                ReportPropertyChanging("PolicyModeId1");
                _PolicyModeId1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyModeId1");
                OnPolicyModeId1Changed();
            }
        }
        private Nullable<global::System.Int32> _PolicyModeId1;
        partial void OnPolicyModeId1Changing(Nullable<global::System.Int32> value);
        partial void OnPolicyModeId1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Enrolled
        {
            get
            {
                return _Enrolled;
            }
            set
            {
                OnEnrolledChanging(value);
                ReportPropertyChanging("Enrolled");
                _Enrolled = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Enrolled");
                OnEnrolledChanged();
            }
        }
        private global::System.String _Enrolled;
        partial void OnEnrolledChanging(global::System.String value);
        partial void OnEnrolledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eligible
        {
            get
            {
                return _Eligible;
            }
            set
            {
                OnEligibleChanging(value);
                ReportPropertyChanging("Eligible");
                _Eligible = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eligible");
                OnEligibleChanged();
            }
        }
        private global::System.String _Eligible;
        partial void OnEligibleChanging(global::System.String value);
        partial void OnEligibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AutoTerminationDate
        {
            get
            {
                return _AutoTerminationDate;
            }
            set
            {
                OnAutoTerminationDateChanging(value);
                ReportPropertyChanging("AutoTerminationDate");
                _AutoTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoTerminationDate");
                OnAutoTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AutoTerminationDate;
        partial void OnAutoTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAutoTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorSysID
        {
            get
            {
                return _PayorSysID;
            }
            set
            {
                OnPayorSysIDChanging(value);
                ReportPropertyChanging("PayorSysID");
                _PayorSysID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorSysID");
                OnPayorSysIDChanged();
            }
        }
        private global::System.String _PayorSysID;
        partial void OnPayorSysIDChanging(global::System.String value);
        partial void OnPayorSysIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link1
        {
            get
            {
                return _Link1;
            }
            set
            {
                OnLink1Changing(value);
                ReportPropertyChanging("Link1");
                _Link1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link1");
                OnLink1Changed();
            }
        }
        private global::System.String _Link1;
        partial void OnLink1Changing(global::System.String value);
        partial void OnLink1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Link2
        {
            get
            {
                return _Link2;
            }
            set
            {
                OnLink2Changing(value);
                ReportPropertyChanging("Link2");
                _Link2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Link2");
                OnLink2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Link2;
        partial void OnLink2Changing(Nullable<global::System.Decimal> value);
        partial void OnLink2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOn
        {
            get
            {
                return _LastModifiedOn;
            }
            set
            {
                OnLastModifiedOnChanging(value);
                ReportPropertyChanging("LastModifiedOn");
                _LastModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOn");
                OnLastModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOn;
        partial void OnLastModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LastModifiedUserCredentialid
        {
            get
            {
                return _LastModifiedUserCredentialid;
            }
            set
            {
                OnLastModifiedUserCredentialidChanging(value);
                ReportPropertyChanging("LastModifiedUserCredentialid");
                _LastModifiedUserCredentialid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedUserCredentialid");
                OnLastModifiedUserCredentialidChanged();
            }
        }
        private Nullable<global::System.Guid> _LastModifiedUserCredentialid;
        partial void OnLastModifiedUserCredentialidChanging(Nullable<global::System.Guid> value);
        partial void OnLastModifiedUserCredentialidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Guid> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompScheduleType
        {
            get
            {
                return _CompScheduleType;
            }
            set
            {
                OnCompScheduleTypeChanging(value);
                ReportPropertyChanging("CompScheduleType");
                _CompScheduleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompScheduleType");
                OnCompScheduleTypeChanged();
            }
        }
        private global::System.String _CompScheduleType;
        partial void OnCompScheduleTypeChanging(global::System.String value);
        partial void OnCompScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorName
        {
            get
            {
                return _PayorName;
            }
            set
            {
                OnPayorNameChanging(value);
                ReportPropertyChanging("PayorName");
                _PayorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorName");
                OnPayorNameChanged();
            }
        }
        private global::System.String _PayorName;
        partial void OnPayorNameChanging(global::System.String value);
        partial void OnPayorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PreviousEffectiveDate
        {
            get
            {
                return _PreviousEffectiveDate;
            }
            set
            {
                OnPreviousEffectiveDateChanging(value);
                ReportPropertyChanging("PreviousEffectiveDate");
                _PreviousEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousEffectiveDate");
                OnPreviousEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PreviousEffectiveDate;
        partial void OnPreviousEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPreviousEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousPolicyModeId
        {
            get
            {
                return _PreviousPolicyModeId;
            }
            set
            {
                OnPreviousPolicyModeIdChanging(value);
                ReportPropertyChanging("PreviousPolicyModeId");
                _PreviousPolicyModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousPolicyModeId");
                OnPreviousPolicyModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousPolicyModeId;
        partial void OnPreviousPolicyModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousPolicyModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="GetPolicyPaymentEntryPolicyIDWise_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPolicyPaymentEntryPolicyIDWise_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetPolicyPaymentEntryPolicyIDWise_Result object.
        /// </summary>
        /// <param name="paymentEntryID">Initial value of the PaymentEntryID property.</param>
        /// <param name="statementNumber">Initial value of the StatementNumber property.</param>
        public static GetPolicyPaymentEntryPolicyIDWise_Result CreateGetPolicyPaymentEntryPolicyIDWise_Result(global::System.Guid paymentEntryID, global::System.Int32 statementNumber)
        {
            GetPolicyPaymentEntryPolicyIDWise_Result getPolicyPaymentEntryPolicyIDWise_Result = new GetPolicyPaymentEntryPolicyIDWise_Result();
            getPolicyPaymentEntryPolicyIDWise_Result.PaymentEntryID = paymentEntryID;
            getPolicyPaymentEntryPolicyIDWise_Result.StatementNumber = statementNumber;
            return getPolicyPaymentEntryPolicyIDWise_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PaymentEntryID
        {
            get
            {
                return _PaymentEntryID;
            }
            set
            {
                OnPaymentEntryIDChanging(value);
                ReportPropertyChanging("PaymentEntryID");
                _PaymentEntryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentEntryID");
                OnPaymentEntryIDChanged();
            }
        }
        private global::System.Guid _PaymentEntryID;
        partial void OnPaymentEntryIDChanging(global::System.Guid value);
        partial void OnPaymentEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatementId
        {
            get
            {
                return _StatementId;
            }
            set
            {
                OnStatementIdChanging(value);
                ReportPropertyChanging("StatementId");
                _StatementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementId");
                OnStatementIdChanged();
            }
        }
        private Nullable<global::System.Guid> _StatementId;
        partial void OnStatementIdChanging(Nullable<global::System.Guid> value);
        partial void OnStatementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyID;
        partial void OnPolicyIDChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentRecived
        {
            get
            {
                return _PaymentRecived;
            }
            set
            {
                OnPaymentRecivedChanging(value);
                ReportPropertyChanging("PaymentRecived");
                _PaymentRecived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentRecived");
                OnPaymentRecivedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentRecived;
        partial void OnPaymentRecivedChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentRecivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CommissionPercentage
        {
            get
            {
                return _CommissionPercentage;
            }
            set
            {
                OnCommissionPercentageChanging(value);
                ReportPropertyChanging("CommissionPercentage");
                _CommissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPercentage");
                OnCommissionPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _CommissionPercentage;
        partial void OnCommissionPercentageChanging(Nullable<global::System.Double> value);
        partial void OnCommissionPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfUnits
        {
            get
            {
                return _NumberOfUnits;
            }
            set
            {
                OnNumberOfUnitsChanging(value);
                ReportPropertyChanging("NumberOfUnits");
                _NumberOfUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUnits");
                OnNumberOfUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfUnits;
        partial void OnNumberOfUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DollerPerUnit
        {
            get
            {
                return _DollerPerUnit;
            }
            set
            {
                OnDollerPerUnitChanging(value);
                ReportPropertyChanging("DollerPerUnit");
                _DollerPerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DollerPerUnit");
                OnDollerPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _DollerPerUnit;
        partial void OnDollerPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnDollerPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Fee;
        partial void OnFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SplitPercentage
        {
            get
            {
                return _SplitPercentage;
            }
            set
            {
                OnSplitPercentageChanging(value);
                ReportPropertyChanging("SplitPercentage");
                _SplitPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitPercentage");
                OnSplitPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _SplitPercentage;
        partial void OnSplitPercentageChanging(Nullable<global::System.Double> value);
        partial void OnSplitPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPayment
        {
            get
            {
                return _TotalPayment;
            }
            set
            {
                OnTotalPaymentChanging(value);
                ReportPropertyChanging("TotalPayment");
                _TotalPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPayment");
                OnTotalPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPayment;
        partial void OnTotalPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostStatusID
        {
            get
            {
                return _PostStatusID;
            }
            set
            {
                OnPostStatusIDChanging(value);
                ReportPropertyChanging("PostStatusID");
                _PostStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostStatusID");
                OnPostStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PostStatusID;
        partial void OnPostStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnPostStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DEUEntryId
        {
            get
            {
                return _DEUEntryId;
            }
            set
            {
                OnDEUEntryIdChanging(value);
                ReportPropertyChanging("DEUEntryId");
                _DEUEntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEUEntryId");
                OnDEUEntryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _DEUEntryId;
        partial void OnDEUEntryIdChanging(Nullable<global::System.Guid> value);
        partial void OnDEUEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatementNumber
        {
            get
            {
                return _StatementNumber;
            }
            set
            {
                OnStatementNumberChanging(value);
                ReportPropertyChanging("StatementNumber");
                _StatementNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementNumber");
                OnStatementNumberChanged();
            }
        }
        private global::System.Int32 _StatementNumber;
        partial void OnStatementNumberChanging(global::System.Int32 value);
        partial void OnStatementNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FollowUpVarIssueId
        {
            get
            {
                return _FollowUpVarIssueId;
            }
            set
            {
                OnFollowUpVarIssueIdChanging(value);
                ReportPropertyChanging("FollowUpVarIssueId");
                _FollowUpVarIssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowUpVarIssueId");
                OnFollowUpVarIssueIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FollowUpVarIssueId;
        partial void OnFollowUpVarIssueIdChanging(Nullable<global::System.Guid> value);
        partial void OnFollowUpVarIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatchNumber
        {
            get
            {
                return _BatchNumber;
            }
            set
            {
                OnBatchNumberChanging(value);
                ReportPropertyChanging("BatchNumber");
                _BatchNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatchNumber");
                OnBatchNumberChanged();
            }
        }
        private global::System.String _BatchNumber;
        partial void OnBatchNumberChanging(global::System.String value);
        partial void OnBatchNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pageno
        {
            get
            {
                return _Pageno;
            }
            set
            {
                OnPagenoChanging(value);
                ReportPropertyChanging("Pageno");
                _Pageno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pageno");
                OnPagenoChanged();
            }
        }
        private global::System.String _Pageno;
        partial void OnPagenoChanging(global::System.String value);
        partial void OnPagenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLinkPayment
        {
            get
            {
                return _IsLinkPayment;
            }
            set
            {
                OnIsLinkPaymentChanging(value);
                ReportPropertyChanging("IsLinkPayment");
                _IsLinkPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLinkPayment");
                OnIsLinkPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLinkPayment;
        partial void OnIsLinkPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLinkPaymentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="GetStatementList_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetStatementList_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetStatementList_Result object.
        /// </summary>
        /// <param name="statementID">Initial value of the StatementID property.</param>
        /// <param name="statementNumber">Initial value of the StatementNumber property.</param>
        public static GetStatementList_Result CreateGetStatementList_Result(global::System.Guid statementID, global::System.Int32 statementNumber)
        {
            GetStatementList_Result getStatementList_Result = new GetStatementList_Result();
            getStatementList_Result.StatementID = statementID;
            getStatementList_Result.StatementNumber = statementNumber;
            return getStatementList_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StatementID
        {
            get
            {
                return _StatementID;
            }
            set
            {
                OnStatementIDChanging(value);
                ReportPropertyChanging("StatementID");
                _StatementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementID");
                OnStatementIDChanged();
            }
        }
        private global::System.Guid _StatementID;
        partial void OnStatementIDChanging(global::System.Guid value);
        partial void OnStatementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatementNumber
        {
            get
            {
                return _StatementNumber;
            }
            set
            {
                OnStatementNumberChanging(value);
                ReportPropertyChanging("StatementNumber");
                _StatementNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementNumber");
                OnStatementNumberChanged();
            }
        }
        private global::System.Int32 _StatementNumber;
        partial void OnStatementNumberChanging(global::System.Int32 value);
        partial void OnStatementNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StatementDate
        {
            get
            {
                return _StatementDate;
            }
            set
            {
                OnStatementDateChanging(value);
                ReportPropertyChanging("StatementDate");
                _StatementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementDate");
                OnStatementDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StatementDate;
        partial void OnStatementDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStatementDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CheckAmount
        {
            get
            {
                return _CheckAmount;
            }
            set
            {
                OnCheckAmountChanging(value);
                ReportPropertyChanging("CheckAmount");
                _CheckAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckAmount");
                OnCheckAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CheckAmount;
        partial void OnCheckAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCheckAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BalAdj
        {
            get
            {
                return _BalAdj;
            }
            set
            {
                OnBalAdjChanging(value);
                ReportPropertyChanging("BalAdj");
                _BalAdj = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BalAdj");
                OnBalAdjChanged();
            }
        }
        private Nullable<global::System.Decimal> _BalAdj;
        partial void OnBalAdjChanging(Nullable<global::System.Decimal> value);
        partial void OnBalAdjChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EnteredAmount
        {
            get
            {
                return _EnteredAmount;
            }
            set
            {
                OnEnteredAmountChanging(value);
                ReportPropertyChanging("EnteredAmount");
                _EnteredAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredAmount");
                OnEnteredAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _EnteredAmount;
        partial void OnEnteredAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnEnteredAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BatchId;
        partial void OnBatchIdChanging(Nullable<global::System.Guid> value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Entries
        {
            get
            {
                return _Entries;
            }
            set
            {
                OnEntriesChanging(value);
                ReportPropertyChanging("Entries");
                _Entries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entries");
                OnEntriesChanged();
            }
        }
        private Nullable<global::System.Int32> _Entries;
        partial void OnEntriesChanging(Nullable<global::System.Int32> value);
        partial void OnEntriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Createdon
        {
            get
            {
                return _Createdon;
            }
            set
            {
                OnCreatedonChanging(value);
                ReportPropertyChanging("Createdon");
                _Createdon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Createdon");
                OnCreatedonChanged();
            }
        }
        private Nullable<global::System.DateTime> _Createdon;
        partial void OnCreatedonChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModified;
        partial void OnLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorId
        {
            get
            {
                return _PayorId;
            }
            set
            {
                OnPayorIdChanging(value);
                ReportPropertyChanging("PayorId");
                _PayorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorId");
                OnPayorIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorId;
        partial void OnPayorIdChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                OnTemplateIDChanging(value);
                ReportPropertyChanging("TemplateID");
                _TemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateID");
                OnTemplateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TemplateID;
        partial void OnTemplateIDChanging(Nullable<global::System.Guid> value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FromPage
        {
            get
            {
                return _FromPage;
            }
            set
            {
                OnFromPageChanging(value);
                ReportPropertyChanging("FromPage");
                _FromPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromPage");
                OnFromPageChanged();
            }
        }
        private global::System.String _FromPage;
        partial void OnFromPageChanging(global::System.String value);
        partial void OnFromPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToPage
        {
            get
            {
                return _ToPage;
            }
            set
            {
                OnToPageChanging(value);
                ReportPropertyChanging("ToPage");
                _ToPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ToPage");
                OnToPageChanged();
            }
        }
        private global::System.String _ToPage;
        partial void OnToPageChanging(global::System.String value);
        partial void OnToPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatementStatusId
        {
            get
            {
                return _StatementStatusId;
            }
            set
            {
                OnStatementStatusIdChanging(value);
                ReportPropertyChanging("StatementStatusId");
                _StatementStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementStatusId");
                OnStatementStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatementStatusId;
        partial void OnStatementStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatementStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="Select_FirstFollowupIssue_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Select_FirstFollowupIssue_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Select_FirstFollowupIssue_Result object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        public static Select_FirstFollowupIssue_Result CreateSelect_FirstFollowupIssue_Result(global::System.Guid issueId, global::System.Int32 issueTrackNumber)
        {
            Select_FirstFollowupIssue_Result select_FirstFollowupIssue_Result = new Select_FirstFollowupIssue_Result();
            select_FirstFollowupIssue_Result.IssueId = issueId;
            select_FirstFollowupIssue_Result.IssueTrackNumber = issueTrackNumber;
            return select_FirstFollowupIssue_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Guid _IssueId;
        partial void OnIssueIdChanging(global::System.Guid value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Licensee
        {
            get
            {
                return _Licensee;
            }
            set
            {
                OnLicenseeChanging(value);
                ReportPropertyChanging("Licensee");
                _Licensee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Licensee");
                OnLicenseeChanged();
            }
        }
        private Nullable<global::System.Guid> _Licensee;
        partial void OnLicenseeChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AutoTermDate
        {
            get
            {
                return _AutoTermDate;
            }
            set
            {
                OnAutoTermDateChanging(value);
                ReportPropertyChanging("AutoTermDate");
                _AutoTermDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoTermDate");
                OnAutoTermDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AutoTermDate;
        partial void OnAutoTermDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAutoTermDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="Select_FirstFollowupIssue_Result1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Select_FirstFollowupIssue_Result1 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Select_FirstFollowupIssue_Result1 object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        public static Select_FirstFollowupIssue_Result1 CreateSelect_FirstFollowupIssue_Result1(global::System.Guid issueId, global::System.Int32 issueTrackNumber)
        {
            Select_FirstFollowupIssue_Result1 select_FirstFollowupIssue_Result1 = new Select_FirstFollowupIssue_Result1();
            select_FirstFollowupIssue_Result1.IssueId = issueId;
            select_FirstFollowupIssue_Result1.IssueTrackNumber = issueTrackNumber;
            return select_FirstFollowupIssue_Result1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Guid _IssueId;
        partial void OnIssueIdChanging(global::System.Guid value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="SP_AllFollowUPIssue_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_AllFollowUPIssue_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_AllFollowUPIssue_Result object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        public static SP_AllFollowUPIssue_Result CreateSP_AllFollowUPIssue_Result(global::System.Guid issueId, global::System.Int32 issueTrackNumber)
        {
            SP_AllFollowUPIssue_Result sP_AllFollowUPIssue_Result = new SP_AllFollowUPIssue_Result();
            sP_AllFollowUPIssue_Result.IssueId = issueId;
            sP_AllFollowUPIssue_Result.IssueTrackNumber = issueTrackNumber;
            return sP_AllFollowUPIssue_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Guid _IssueId;
        partial void OnIssueIdChanging(global::System.Guid value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="sp_AutoFollowUp_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_AutoFollowUp_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_AutoFollowUp_Result object.
        /// </summary>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        public static sp_AutoFollowUp_Result Createsp_AutoFollowUp_Result(global::System.Int32 issueTrackNumber)
        {
            sp_AutoFollowUp_Result sp_AutoFollowUp_Result = new sp_AutoFollowUp_Result();
            sp_AutoFollowUp_Result.IssueTrackNumber = issueTrackNumber;
            return sp_AutoFollowUp_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientInsured
        {
            get
            {
                return _ClientInsured;
            }
            set
            {
                OnClientInsuredChanging(value);
                ReportPropertyChanging("ClientInsured");
                _ClientInsured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientInsured");
                OnClientInsuredChanged();
            }
        }
        private global::System.String _ClientInsured;
        partial void OnClientInsuredChanging(global::System.String value);
        partial void OnClientInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorName
        {
            get
            {
                return _PayorName;
            }
            set
            {
                OnPayorNameChanging(value);
                ReportPropertyChanging("PayorName");
                _PayorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorName");
                OnPayorNameChanged();
            }
        }
        private global::System.String _PayorName;
        partial void OnPayorNameChanging(global::System.String value);
        partial void OnPayorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayorCarrier
        {
            get
            {
                return _PayorCarrier;
            }
            set
            {
                OnPayorCarrierChanging(value);
                ReportPropertyChanging("PayorCarrier");
                _PayorCarrier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayorCarrier");
                OnPayorCarrierChanged();
            }
        }
        private global::System.String _PayorCarrier;
        partial void OnPayorCarrierChanging(global::System.String value);
        partial void OnPayorCarrierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalEffectiveDate
        {
            get
            {
                return _OriginalEffectiveDate;
            }
            set
            {
                OnOriginalEffectiveDateChanging(value);
                ReportPropertyChanging("OriginalEffectiveDate");
                _OriginalEffectiveDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalEffectiveDate");
                OnOriginalEffectiveDateChanged();
            }
        }
        private global::System.String _OriginalEffectiveDate;
        partial void OnOriginalEffectiveDateChanging(global::System.String value);
        partial void OnOriginalEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeOfRevenue
        {
            get
            {
                return _TypeOfRevenue;
            }
            set
            {
                OnTypeOfRevenueChanging(value);
                ReportPropertyChanging("TypeOfRevenue");
                _TypeOfRevenue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeOfRevenue");
                OnTypeOfRevenueChanged();
            }
        }
        private global::System.String _TypeOfRevenue;
        partial void OnTypeOfRevenueChanging(global::System.String value);
        partial void OnTypeOfRevenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AnnualPremium
        {
            get
            {
                return _AnnualPremium;
            }
            set
            {
                OnAnnualPremiumChanging(value);
                ReportPropertyChanging("AnnualPremium");
                _AnnualPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnnualPremium");
                OnAnnualPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _AnnualPremium;
        partial void OnAnnualPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnAnnualPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PMC
        {
            get
            {
                return _PMC;
            }
            set
            {
                OnPMCChanging(value);
                ReportPropertyChanging("PMC");
                _PMC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMC");
                OnPMCChanged();
            }
        }
        private Nullable<global::System.Double> _PMC;
        partial void OnPMCChanging(Nullable<global::System.Double> value);
        partial void OnPMCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyStatus
        {
            get
            {
                return _PolicyStatus;
            }
            set
            {
                OnPolicyStatusChanging(value);
                ReportPropertyChanging("PolicyStatus");
                _PolicyStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyStatus");
                OnPolicyStatusChanged();
            }
        }
        private global::System.String _PolicyStatus;
        partial void OnPolicyStatusChanging(global::System.String value);
        partial void OnPolicyStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueCategory
        {
            get
            {
                return _IssueCategory;
            }
            set
            {
                OnIssueCategoryChanging(value);
                ReportPropertyChanging("IssueCategory");
                _IssueCategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueCategory");
                OnIssueCategoryChanged();
            }
        }
        private global::System.String _IssueCategory;
        partial void OnIssueCategoryChanging(global::System.String value);
        partial void OnIssueCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueReason
        {
            get
            {
                return _IssueReason;
            }
            set
            {
                OnIssueReasonChanging(value);
                ReportPropertyChanging("IssueReason");
                _IssueReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueReason");
                OnIssueReasonChanged();
            }
        }
        private global::System.String _IssueReason;
        partial void OnIssueReasonChanging(global::System.String value);
        partial void OnIssueReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueStatus
        {
            get
            {
                return _IssueStatus;
            }
            set
            {
                OnIssueStatusChanging(value);
                ReportPropertyChanging("IssueStatus");
                _IssueStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueStatus");
                OnIssueStatusChanged();
            }
        }
        private global::System.String _IssueStatus;
        partial void OnIssueStatusChanging(global::System.String value);
        partial void OnIssueStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueResult
        {
            get
            {
                return _IssueResult;
            }
            set
            {
                OnIssueResultChanging(value);
                ReportPropertyChanging("IssueResult");
                _IssueResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueResult");
                OnIssueResultChanged();
            }
        }
        private global::System.String _IssueResult;
        partial void OnIssueResultChanging(global::System.String value);
        partial void OnIssueResultChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="Sp_FollowupIssue_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Sp_FollowupIssue_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private Nullable<global::System.Guid> _IssueId;
        partial void OnIssueIdChanging(Nullable<global::System.Guid> value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(Nullable<global::System.Int32> value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="SP_Select_FirstFollowuP_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_Select_FirstFollowuP_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_Select_FirstFollowuP_Result object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="issueTrackNumber">Initial value of the IssueTrackNumber property.</param>
        public static SP_Select_FirstFollowuP_Result CreateSP_Select_FirstFollowuP_Result(global::System.Guid issueId, global::System.Int32 issueTrackNumber)
        {
            SP_Select_FirstFollowuP_Result sP_Select_FirstFollowuP_Result = new SP_Select_FirstFollowuP_Result();
            sP_Select_FirstFollowuP_Result.IssueId = issueId;
            sP_Select_FirstFollowuP_Result.IssueTrackNumber = issueTrackNumber;
            return sP_Select_FirstFollowuP_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Guid _IssueId;
        partial void OnIssueIdChanging(global::System.Guid value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private global::System.Int32 _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(global::System.Int32 value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="sp_Select_Followupnew_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Select_Followupnew_Result : ComplexObject
    {
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Model", Name="Sp_SelectFollowupRecord_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Sp_SelectFollowupRecord_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private Nullable<global::System.Guid> _IssueId;
        partial void OnIssueIdChanging(Nullable<global::System.Guid> value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueStatusId
        {
            get
            {
                return _IssueStatusId;
            }
            set
            {
                OnIssueStatusIdChanging(value);
                ReportPropertyChanging("IssueStatusId");
                _IssueStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueStatusId");
                OnIssueStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueStatusId;
        partial void OnIssueStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueCategoryId
        {
            get
            {
                return _IssueCategoryId;
            }
            set
            {
                OnIssueCategoryIdChanging(value);
                ReportPropertyChanging("IssueCategoryId");
                _IssueCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueCategoryId");
                OnIssueCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueCategoryId;
        partial void OnIssueCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueResultId
        {
            get
            {
                return _IssueResultId;
            }
            set
            {
                OnIssueResultIdChanging(value);
                ReportPropertyChanging("IssueResultId");
                _IssueResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueResultId");
                OnIssueResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueResultId;
        partial void OnIssueResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueReasonId
        {
            get
            {
                return _IssueReasonId;
            }
            set
            {
                OnIssueReasonIdChanging(value);
                ReportPropertyChanging("IssueReasonId");
                _IssueReasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReasonId");
                OnIssueReasonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueReasonId;
        partial void OnIssueReasonIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueReasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextFollowUpDate
        {
            get
            {
                return _NextFollowUpDate;
            }
            set
            {
                OnNextFollowUpDateChanging(value);
                ReportPropertyChanging("NextFollowUpDate");
                _NextFollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextFollowUpDate");
                OnNextFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextFollowUpDate;
        partial void OnNextFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyIssueNote
        {
            get
            {
                return _PolicyIssueNote;
            }
            set
            {
                OnPolicyIssueNoteChanging(value);
                ReportPropertyChanging("PolicyIssueNote");
                _PolicyIssueNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyIssueNote");
                OnPolicyIssueNoteChanged();
            }
        }
        private global::System.String _PolicyIssueNote;
        partial void OnPolicyIssueNoteChanging(global::System.String value);
        partial void OnPolicyIssueNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PolicyId;
        partial void OnPolicyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payor
        {
            get
            {
                return _Payor;
            }
            set
            {
                OnPayorChanging(value);
                ReportPropertyChanging("Payor");
                _Payor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payor");
                OnPayorChanged();
            }
        }
        private global::System.String _Payor;
        partial void OnPayorChanging(global::System.String value);
        partial void OnPayorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                OnAgencyChanging(value);
                ReportPropertyChanging("Agency");
                _Agency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agency");
                OnAgencyChanged();
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                OnInsuredChanging(value);
                ReportPropertyChanging("Insured");
                _Insured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insured");
                OnInsuredChanged();
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousStatusId
        {
            get
            {
                return _PreviousStatusId;
            }
            set
            {
                OnPreviousStatusIdChanging(value);
                ReportPropertyChanging("PreviousStatusId");
                _PreviousStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousStatusId");
                OnPreviousStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousStatusId;
        partial void OnPreviousStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueTrackNumber
        {
            get
            {
                return _IssueTrackNumber;
            }
            set
            {
                OnIssueTrackNumberChanging(value);
                ReportPropertyChanging("IssueTrackNumber");
                _IssueTrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTrackNumber");
                OnIssueTrackNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueTrackNumber;
        partial void OnIssueTrackNumberChanging(Nullable<global::System.Int32> value);
        partial void OnIssueTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PayorID
        {
            get
            {
                return _PayorID;
            }
            set
            {
                OnPayorIDChanging(value);
                ReportPropertyChanging("PayorID");
                _PayorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayorID");
                OnPayorIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PayorID;
        partial void OnPayorIDChanging(Nullable<global::System.Guid> value);
        partial void OnPayorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LicenseeId
        {
            get
            {
                return _LicenseeId;
            }
            set
            {
                OnLicenseeIdChanging(value);
                ReportPropertyChanging("LicenseeId");
                _LicenseeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseeId");
                OnLicenseeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LicenseeId;
        partial void OnLicenseeIdChanging(Nullable<global::System.Guid> value);
        partial void OnLicenseeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private Nullable<global::System.Int32> _Content;
        partial void OnContentChanging(Nullable<global::System.Int32> value);
        partial void OnContentChanged();

        #endregion

    }

    #endregion

    
}
